src\main\java\com\quinsoft\zeidon\AbstractOptionsConfiguration.java:     * Activates will keep the transaction open, a commit will close it.
src\main\java\com\quinsoft\zeidon\ActivateFlags.java: * Enum of Activate flags.
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:public enum ActivateFlags
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> ROOT_ONLY = EnumSet.of( fROOT_ONLY );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> ROOT_ONLY_MULTIPLE = EnumSet.of( fROOT_ONLY, fMULTIPLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> MULTIPLE = EnumSet.of( fMULTIPLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> SINGLE = EnumSet.of( fSINGLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> IGNORE_ENTITY_ERRORS = EnumSet.of( fIGNORE_ENTITY_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> IGNORE_ATTRIB_ERRORS = EnumSet.of( fIGNORE_ATTRIB_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> IGNORE_ERRORS = EnumSet.of( fIGNORE_ENTITY_ERRORS, fIGNORE_ATTRIB_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> IGNORE_JOINS = EnumSet.of( fIGNORE_JOINS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> ASYNCHRONOUS = EnumSet.of( fASYNCHRONOUS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> MULTIPLE_IGNORE_ERRORS = EnumSet.of( fMULTIPLE, fIGNORE_ENTITY_ERRORS, fIGNORE_ATTRIB_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static final EnumSet<ActivateFlags> SINGLE_IGNORE_ERRORS = EnumSet.of( fSINGLE, fIGNORE_ENTITY_ERRORS, fIGNORE_ATTRIB_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:     * Deserialize a string into an EnumSet<ActivateFlags>
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static EnumSet<ActivateFlags> deserialize( String str )
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        EnumSet<ActivateFlags> returnSet = EnumSet.noneOf( ActivateFlags.class );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:                returnSet.add( ActivateFlags.valueOf( token ) );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    private static final Map<Integer, EnumSet<ActivateFlags>> ACTIVATE_CONTROL =
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        Collections.unmodifiableMap( new HashMap<Integer, EnumSet<ActivateFlags>>() {
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zSINGLE, ActivateFlags.SINGLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zMULTIPLE, ActivateFlags.MULTIPLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zACTIVATE_ROOTONLY_MULTIPLE, ActivateFlags.ROOT_ONLY_MULTIPLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zACTIVATE_ROOTONLY, ActivateFlags.ROOT_ONLY );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zIGNORE_ENTITY_ERRORS, ActivateFlags.IGNORE_ENTITY_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zIGNORE_ATTRIB_ERRORS, ActivateFlags.IGNORE_ATTRIB_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zIGNORE_ERRORS, ActivateFlags.IGNORE_ERRORS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zSINGLE_FOR_UPDATE, ActivateFlags.SINGLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zIGNORE_JOINS, ActivateFlags.IGNORE_JOINS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zASYNCHRONOUS, ActivateFlags.ASYNCHRONOUS );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:        put( zSINGLE + zAPPLICATION, ActivateFlags.SINGLE );
src\main\java\com\quinsoft\zeidon\ActivateFlags.java:    public static EnumSet<ActivateFlags> convertLongFlags( Integer control )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:public class ActivateOptions extends AbstractOptionsConfiguration
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    private EnumSet<ActivateFlags> activateFlags;
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:     * If not null then Activate processing will use this Activator instead
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    private LinkedHashMap<AttributeDef, ActivateOrder> rootActivateOrdering;
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions( TaskQualification task )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:        activateFlags = EnumSet.of( ActivateFlags.fMULTIPLE );
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions( View view )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:        activateFlags = EnumSet.of( ActivateFlags.fMULTIPLE );
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public EnumSet<ActivateFlags> getActivateFlags()
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions setActivateFlags( EnumSet<ActivateFlags> activateFlags )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions addActivateFlags( EnumSet<ActivateFlags> activateFlags )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions addActivateFlag( ActivateFlags activateFlag )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions addActivateFlag( ActivateFlags... activateFlags )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:        for ( ActivateFlags f : activateFlags )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions setLockingLevel( LockingLevel lockingLevel )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions setQualificationObject( View qualificationObject )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions setLodDef( LodDef lodDef )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions setLodDef( TaskQualification taskQual, String lodDefName )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions setLodDef( TaskQualification taskQual, Application app, String lodDefName )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public ActivateOptions overrideConfigValue( String key, String value )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:        return activateFlags.contains( ActivateFlags.fREAD_ONLY );
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public LinkedHashMap<AttributeDef, ActivateOrder> getRootGetActivateOrdering()
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:        return rootActivateOrdering;
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public void setRootActivateOrdering( LinkedHashMap<AttributeDef, ActivateOrder> activateOrdering )
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:        this.rootActivateOrdering = activateOrdering;
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:    public static class ActivateOrder
src\main\java\com\quinsoft\zeidon\ActivateOptions.java:        public ActivateOrder( AttributeDef attributeDef, boolean descending )
src\main\java\com\quinsoft\zeidon\Activator.java:    View init(Task task, View initialView, ActivateOptions options );
src\main\java\com\quinsoft\zeidon\Activator.java:     * Activate the OI.
src\main\java\com\quinsoft\zeidon\Activator.java:     * Activate a subobject with subobjectRootEntity as the root.  If subobjectRootootEntity = LodDef.root then
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:import com.quinsoft.zeidon.ActivateOptions.ActivateOrder;
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:    protected EnumSet<ActivateFlags> activateFlags;
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:     * When activating, this is a cast of options as ActivateOptions.
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:     * I.e. activateOptions = (ActivateOptions) options.
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:    protected ActivateOptions activateOptions;
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:     * If true, then qualification is defined using the new ActivateQual LOD.
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:                if ( activateFlags.contains( ActivateFlags.fKEYS_ONLY ) )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:                if ( ! attributeDef.isActivate() )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:                    if ( qual.cursor( "ActivateQual" ).getAttribute( "AllowCustomQuery" ).compare( "N" ) == 0 )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:                    throw new ZeidonException( "SourceViewName is currently unsupported for Activate Qualification" );
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            // Copy the root ordering back to the ActivateOptions so we can use
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            activateOptions.setRootActivateOrdering( qualRootEntity.ordering );
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:    public int beginActivate( View view, View qual, EnumSet<ActivateFlags> control )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        activateOptions = (ActivateOptions) options;
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            newQualLod = qual.getLodDef().getName().equals( "ActivateQual" );
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        if ( activateFlags.contains( ActivateFlags.fIGNORE_JOINS ) )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java://        if ( activateFlags.contains( ActivateFlags.fROOT_ONLY ) )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        if ( activateFlags.contains( ActivateFlags.fROOT_ONLY ) && entityDef.getParent() != null )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            addActivateLimit( qualEntity.activateLimit, stmt );
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        if ( entityDef.getActivateLimit() != null )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            addActivateLimit( entityDef.getActivateLimit(), stmt );
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            for ( ActivateOrder order : qualEntity.getOrdering().values() )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        if ( activateOptions.getActivateFlags().contains( ActivateFlags.fIGNORE_LOAD_OPTIMIZATION ) )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        return childRecord.isActivateWithSingleSelect();
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        assert assertNotNullKey( view, entityDef ) : "Activated entity has null key";
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:        if ( entityDef.isAutoloadFromParent() || activateFlags.contains( ActivateFlags.fKEYS_ONLY ) )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:    protected abstract void addActivateLimit( int limit, SqlStatement stmt );
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            View genkeys = task.activateObjectInstance( "GENKEYWO", null, EnumSet.of( ActivateFlags.fMULTIPLE ) );
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:            if ( def.getActivateLimit() != null )
src\main\java\com\quinsoft\zeidon\dbhandler\AbstractSqlHandler.java:    public PessimisticLockingHandler getPessimisticLockingHandler( ActivateOptions activateOptions , View view  )
src\main\java\com\quinsoft\zeidon\dbhandler\DbHandler.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\dbhandler\DbHandler.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\dbhandler\DbHandler.java:    int beginActivate( View view, View qual, EnumSet<ActivateFlags> control );
src\main\java\com\quinsoft\zeidon\dbhandler\DbHandler.java:    PessimisticLockingHandler getPessimisticLockingHandler( ActivateOptions activateOptions , View view  );
src\main\java\com\quinsoft\zeidon\dbhandler\JdbcHandler.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\dbhandler\JdbcHandler.java:    protected void addActivateLimit( int limit, SqlStatement stmt )
src\main\java\com\quinsoft\zeidon\dbhandler\JdbcHandler.java:                    if ( entityDef.getParent() == null && activateFlags.contains( ActivateFlags.fSINGLE ) )
src\main\java\com\quinsoft\zeidon\dbhandler\JdbcHandler.java:                        task.dblog().debug( "Activated %d %s entities for %s", entityCounts.get( ve ), ve, parentCursor );
src\main\java\com\quinsoft\zeidon\dbhandler\JdbcHandler.java:                        task.dblog().debug( "Activated %d %s entities", entityCounts.get( ve ), ve );
src\main\java\com\quinsoft\zeidon\dbhandler\JdbcHandler.java:            assert assertNotNullKey( view, entityDef ) : "Activated entity has null key";
src\main\java\com\quinsoft\zeidon\dbhandler\MysqlJdbcHandler.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\dbhandler\MysqlJdbcHandler.java:    public PessimisticLockingHandler getPessimisticLockingHandler( ActivateOptions activateOptions , View view  )
src\main\java\com\quinsoft\zeidon\dbhandler\PessimisticLockingHandler.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\dbhandler\PessimisticLockingHandler.java:    void initialize( ActivateOptions options, Map<EntityDef, QualEntity> qualMap  );
src\main\java\com\quinsoft\zeidon\dbhandler\PessimisticLockingViaDb.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\dbhandler\PessimisticLockingViaDb.java:    private ActivateOptions activateOptions;
src\main\java\com\quinsoft\zeidon\dbhandler\PessimisticLockingViaDb.java:    public void initialize( ActivateOptions options, Map<EntityDef, QualEntity> qualMap  )
src\main\java\com\quinsoft\zeidon\dbhandler\QualEntity.java:import com.quinsoft.zeidon.ActivateOptions.ActivateOrder;
src\main\java\com\quinsoft\zeidon\dbhandler\QualEntity.java:    LinkedHashMap<AttributeDef, ActivateOrder> ordering;
src\main\java\com\quinsoft\zeidon\dbhandler\QualEntity.java:            AttributeInstance limitAttr = qualEntityInstance.getAttribute( "ActivateLimit" );
src\main\java\com\quinsoft\zeidon\dbhandler\QualEntity.java:    protected LinkedHashMap<AttributeDef, ActivateOrder> getOrdering()
src\main\java\com\quinsoft\zeidon\dbhandler\QualEntity.java:        ordering.put( attributeDef, new ActivateOrder( attributeDef, descending ) );
src\main\java\com\quinsoft\zeidon\dbhandler\QualEntity.java:                ordering.put( key, new ActivateOrder( key, false ) );
src\main\java\com\quinsoft\zeidon\dbhandler\TestSqlHandler.java:     * @see com.quinsoft.zeidon.dbhandler.AbstractSqlHandler#addActivateLimit(int, com.quinsoft.zeidon.dbhandler.AbstractSqlHandler.SqlStatement)
src\main\java\com\quinsoft\zeidon\dbhandler\TestSqlHandler.java:    protected void addActivateLimit( int limit, SqlStatement stmt )
src\main\java\com\quinsoft\zeidon\DeserializeOi.java:    private EnumSet<ActivateFlags> flags = ActivateFlags.MULTIPLE;
src\main\java\com\quinsoft\zeidon\DeserializeOi.java:     * Activate all the OIs from the stream and return a list of views.
src\main\java\com\quinsoft\zeidon\DeserializeOi.java:     * Activates the OI(s) from the stream and returns the first one.
src\main\java\com\quinsoft\zeidon\DeserializeOi.java:    public EnumSet<ActivateFlags> getFlags()
src\main\java\com\quinsoft\zeidon\DeserializeOi.java:    public DeserializeOi setFlags( EnumSet<ActivateFlags> flags )
src\main\java\com\quinsoft\zeidon\DeserializeOi.java:        return setFlags( ActivateFlags.convertLongFlags( control ) );
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:                    double average = info.totalActivateTime / 1000.0 / info.activates;
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:     * @see com.quinsoft.zeidon.ObjectEngineEventListener#objectInstanceActivated(com.quinsoft.zeidon.View, long)
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:    public void objectInstanceActivated( View view, View qualification, long millis, Exception exception )
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:            info.incrementActivate( millis, exception );
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:            info.incrementActivate( millis, exception );
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:        long totalActivateTime = 0;
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:        private synchronized void incrementActivate( long millis, Exception e )
src\main\java\com\quinsoft\zeidon\jmx\JmxObjectEngineMonitor.java:            totalActivateTime += millis;
src\main\java\com\quinsoft\zeidon\objectdefinition\AttributeDef.java:        setActivate( persistent && ( ! hidden || isKey() || isForeignKey() || isAutoSeq() ) );
src\main\java\com\quinsoft\zeidon\objectdefinition\AttributeDef.java:    public boolean isActivate()
src\main\java\com\quinsoft\zeidon\objectdefinition\AttributeDef.java:    void setActivate( boolean act )
src\main\java\com\quinsoft\zeidon\objectdefinition\DataRecord.java:                        if ( ! dataRecord.isActivateWithSingleSelect() && ! dataRecord.isJoinable() )
src\main\java\com\quinsoft\zeidon\objectdefinition\DataRecord.java:    public boolean isActivateWithSingleSelect()
src\main\java\com\quinsoft\zeidon\objectdefinition\EntityDef.java:            if ( childRecord.isActivateWithSingleSelect() )
src\main\java\com\quinsoft\zeidon\objectdefinition\EntityDef.java:    public Integer getActivateLimit()
src\main\java\com\quinsoft\zeidon\objectdefinition\EntityDef.java:            if ( ! attr.isActivate() )
src\main\java\com\quinsoft\zeidon\objectdefinition\LodDef.java:    public boolean hasActivateConstraint()
src\main\java\com\quinsoft\zeidon\objectdefinition\LodDef.java:    public int executeActivateConstraint( View view ) throws ObjectConstraintException
src\main\java\com\quinsoft\zeidon\objectdefinition\LodDef.java:        if ( ! hasActivateConstraint() )
src\main\java\com\quinsoft\zeidon\objectdefinition\LodDef.java:                    if ( attributeDef.isActivate() )
src\main\java\com\quinsoft\zeidon\objectdefinition\LodDef.java:                    entityDef.getAttributeByErToken( erAttributetoken ).setActivate( true );
src\main\java\com\quinsoft\zeidon\ObjectEngineEventListener.java:    void objectInstanceActivated( View view, View qualification, long millis, Exception exception );
src\main\java\com\quinsoft\zeidon\OiSourceSelector.java:    Activator getActivator( Task task, Application application, ActivateOptions options );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:    public View activateObjectInstance(String lodDefName, View qual, EnumSet<ActivateFlags> control ) throws UnknownLodDefException
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:        ActivateOptions options = new ActivateOptions( getTask() );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:        options.setActivateFlags( control );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:    public View activateObjectInstance(LodDef lodDef, View qual, EnumSet<ActivateFlags> control )
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:        ActivateOptions options = new ActivateOptions( getTask() );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:        options.setActivateFlags( control );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:    public  View activateObjectInstance( ActivateOptions options ) throws UnknownLodDefException
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:        ActivateObjectInstance activator = new ActivateObjectInstance( getTask(), options );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:    public View activateObjectInstance( String lodDefName, View qual, ActivateOptions options )
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:                                    EnumSet<ActivateFlags> control) throws UnknownLodDefException
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:                                    EnumSet<ActivateFlags> control )
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:                        activator = new ActivateOiFromPorStream( );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:                        activator = new ActivateOisFromJsonStream( );
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:                        activator= new ActivateOisFromXmlStream();
src\main\java\com\quinsoft\zeidon\standardoe\AbstractTaskQualification.java:                        activator= new ActivateOisFromCsv();
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:class ActivateObjectInstance
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:    private final ActivateOptions  options;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:    ActivateObjectInstance( TaskImpl task, ActivateOptions options )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:    ActivateObjectInstance( ViewImpl view )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:        if ( view.getActivateOptions() == null )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:            // manually and has no ActivateOptions.  However, we're attempting to
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:            // empty ActivateOptions.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:            options = new ActivateOptions( view );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:            options = view.getActivateOptions();
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:        EnumSet<ActivateFlags> control = options.getActivateFlags();
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:             ! control.contains( ActivateFlags.fREAD_ONLY ) )       // Read-only?
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:        if ( ! control.contains( ActivateFlags.fASYNCHRONOUS ) )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateObjectInstance.java:            if ( control.contains( ActivateFlags.fREAD_ONLY ) )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:class ActivateOiFromDB implements Activator
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:    private EnumSet<ActivateFlags> control;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:    private ActivateOptions options;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:    public View init(Task task, View view, ActivateOptions options )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:        control = options.getActivateFlags();
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:        dbHandler.beginActivate( this.view, qual, control );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:     * Activate the OI.  This gets called for the initial activate of the OI.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:        oi.setActivateOptions( options );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:                view.getLodDef().executeActivateConstraint( view );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:            task.getObjectEngine().getOeEventListener().objectInstanceActivated( view, qual, timer.getMilliTime(), null );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:     * Activate a subobject with subobjectRootEntity as the root.  If subobjectRootootEntity = LodDef.root then
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:            rc = singleActivate( subobjectRootEntity );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:            task.getObjectEngine().getOeEventListener().objectInstanceActivated( view, qual, timer.getMilliTime(), ze );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:                task.log().info( "==> Activate for %s took %s seconds", lodDef, timer );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:                task.log().info( "==> Activate for %s took %d milliseconds", lodDef, timer.getMilliTime() );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:     * Activate all the child entities for all the twins in parentCursor.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:        return entityDef.getLazyLoadConfig().isLazyLoad() && ! control.contains( ActivateFlags.fINCLUDE_LAZYLOAD );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:     * Activate a single object instance or subobject, starting with rootEntityDef.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:    private int singleActivate( EntityDef rootEntityDef )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:        // Activate the child entities unless we're activating the root and ROOT_ONLY is set.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromDB.java:        if ( isOiRoot && control.contains( ActivateFlags.fROOT_ONLY ) )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java: * Activates an OI from a Zeidon file DB, which is OIs stored in a directory.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:class ActivateOiFromFileDb implements Activator
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:    private EnumSet<ActivateFlags> control;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:    private ActivateOptions options;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:     * @see com.quinsoft.zeidon.Activator#init(com.quinsoft.zeidon.Task, com.quinsoft.zeidon.View, com.quinsoft.zeidon.ActivateOptions)
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:    public View init( Task task, View initialView, ActivateOptions options )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:        control = options.getActivateFlags();
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromFileDb.java:     * Activates each of the files in the directory that have the same LodDef until if
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java: * Activates an OI from a POR stream.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java:class ActivateOiFromPorStream implements PortableFileEntityHandler, StreamReader
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java:    private Set<ActivateFlags>       control;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java:    ActivateOiFromPorStream()
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java:        if ( control.contains( ActivateFlags.fSINGLE ) && rootCursor.getEntityCount() > 1  )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java:        ignoreInvalidEntityNames = control.contains( ActivateFlags.fIGNORE_ENTITY_ERRORS );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromPorStream.java:        ignoreInvalidAttributeNames = control.contains( ActivateFlags.fIGNORE_ATTRIB_ERRORS );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromRestServer.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromRestServer.java: * Activate an OI from a REST server.
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromRestServer.java:class ActivateOiFromRestServer implements Activator
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromRestServer.java:    private ActivateOptions activateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromRestServer.java:    public ActivateOiFromRestServer( String serverUrl )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromRestServer.java:     * @see com.quinsoft.zeidon.standardoe.Activator#init(com.quinsoft.zeidon.standardoe.TaskImpl, com.quinsoft.zeidon.standardoe.ViewImpl, com.quinsoft.zeidon.ActivateOptions)
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOiFromRestServer.java:    public View init( Task task, View initialView, ActivateOptions options )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromCsv.java:class ActivateOisFromCsv implements StreamReader
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromCsv.java:    public ActivateOisFromCsv()
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromJsonStream.java:class ActivateOisFromJsonStream implements StreamReader
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromJsonStream.java:    ActivateOisFromJsonStream( )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromXmlStream.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromXmlStream.java:class ActivateOisFromXmlStream implements StreamReader
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromXmlStream.java:    private EnumSet<ActivateFlags>   control;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromXmlStream.java:            if ( control.contains( ActivateFlags.fSINGLE ) && rootCursor.getEntityCount() > 1 )
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromXmlStream.java:            ActivateOisFromXmlStream.this.locator = locator;
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromXmlStream.java:        ignoreInvalidEntityNames = control.contains( ActivateFlags.fIGNORE_ENTITY_ERRORS );
src\main\java\com\quinsoft\zeidon\standardoe\ActivateOisFromXmlStream.java:        ignoreInvalidAttributeNames = control.contains( ActivateFlags.fIGNORE_ATTRIB_ERRORS );
src\main\java\com\quinsoft\zeidon\standardoe\CommitMultipleOIs.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\CommitMultipleOIs.java:            ActivateOptions activateOptions = oi.getActivateOptions();
src\main\java\com\quinsoft\zeidon\standardoe\DefaultJavaOeConfiguration.java:     * @see com.quinsoft.zeidon.standardoe.JavaOeOptions#getActivateThreadPool()
src\main\java\com\quinsoft\zeidon\standardoe\DefaultJavaOeConfiguration.java:    public ExecutorService getActivateThreadPool()
src\main\java\com\quinsoft\zeidon\standardoe\DefaultJavaOeConfiguration.java:    public DefaultJavaOeConfiguration setActivatePoolThread( ExecutorService activatePoolThread )
src\main\java\com\quinsoft\zeidon\standardoe\DefaultOiSourceSelector.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\DefaultOiSourceSelector.java:    public Activator getActivator( Task task, Application application, ActivateOptions options )
src\main\java\com\quinsoft\zeidon\standardoe\DefaultOiSourceSelector.java:            return new ActivateOiFromDB();
src\main\java\com\quinsoft\zeidon\standardoe\DefaultOiSourceSelector.java:            return new ActivateOiFromRestServer( url );
src\main\java\com\quinsoft\zeidon\standardoe\DefaultOiSourceSelector.java:            return new ActivateOiFromFileDb();
src\main\java\com\quinsoft\zeidon\standardoe\EntityInstanceImpl.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\EntityInstanceImpl.java:        if ( getObjectInstance().getActivateOptions() != null &&
src\main\java\com\quinsoft\zeidon\standardoe\EntityInstanceImpl.java:             getObjectInstance().getActivateOptions().getActivateFlags().contains( ActivateFlags.fINCLUDE_LAZYLOAD ) )
src\main\java\com\quinsoft\zeidon\standardoe\EntityInstanceImpl.java:        ActivateObjectInstance activator = new ActivateObjectInstance( view );
src\main\java\com\quinsoft\zeidon\standardoe\FutureView.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\FutureView.java:    public ActivateOptions getActivateOptions()
src\main\java\com\quinsoft\zeidon\standardoe\FutureView.java:        return super.getView().getActivateOptions();
src\main\java\com\quinsoft\zeidon\standardoe\JavaObjectEngine.java:        threadPool = options.getActivateThreadPool();
src\main\java\com\quinsoft\zeidon\standardoe\JavaOeConfiguration.java:    ExecutorService           getActivateThreadPool();
src\main\java\com\quinsoft\zeidon\standardoe\NoOpPessimisticLockingHandler.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\NoOpPessimisticLockingHandler.java:    public void initialize( ActivateOptions options, Map<EntityDef, QualEntity> qualMap )
src\main\java\com\quinsoft\zeidon\standardoe\NullObjectEngineListener.java:     * @see com.quinsoft.zeidon.ObjectEngineEventListener#objectInstanceActivated(com.quinsoft.zeidon.View, long)
src\main\java\com\quinsoft\zeidon\standardoe\NullObjectEngineListener.java:    public void objectInstanceActivated( View view, View qualification, long millis, Exception exception )
src\main\java\com\quinsoft\zeidon\standardoe\ObjectInstance.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ObjectInstance.java:    private ActivateOptions activateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ObjectInstance.java:    ActivateOptions getActivateOptions()
src\main\java\com\quinsoft\zeidon\standardoe\ObjectInstance.java:    void setActivateOptions( ActivateOptions activateOptions )
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:import com.quinsoft.zeidon.ActivateOptions.ActivateOrder;
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:    private ActivateOptions activateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:    public RollingPaginationEntityCursorImpl( ViewCursor viewCursor, EntityDef entityDef, ActivateOptions options )
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:        View qual = originalQual.activateOiFromOi( ActivateFlags.MULTIPLE );
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:        assert activateOptions.getRootGetActivateOrdering() != null : "Root ordering was not set";
src\main\java\com\quinsoft\zeidon\standardoe\RollingPaginationEntityCursorImpl.java:        for ( ActivateOrder order : activateOptions.getRootGetActivateOrdering().values() )
src\main\java\com\quinsoft\zeidon\standardoe\ViewForwarder.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\ViewForwarder.java:    public View activateOiFromOi( Set<ActivateFlags> flags )
src\main\java\com\quinsoft\zeidon\standardoe\ViewForwarder.java:     * @see com.quinsoft.zeidon.View#activateOiFromOi(com.quinsoft.zeidon.ActivateFlags)
src\main\java\com\quinsoft\zeidon\standardoe\ViewForwarder.java:    public View activateOiFromOi( ActivateFlags flag )
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:        newOi.setActivateOptions( getActivateOptions() );
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:    public View activateOiFromOi( ActivateFlags flag )
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:    public View activateOiFromOi(Set<ActivateFlags> flags)
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:        if ( flags.contains( ActivateFlags.fSINGLE ) )
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:    public ActivateOptions getActivateOptions()
src\main\java\com\quinsoft\zeidon\standardoe\ViewImpl.java:        return getObjectInstance().getActivateOptions();
src\main\java\com\quinsoft\zeidon\standardoe\WriteOisToJsonStream.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\standardoe\WriteOisToJsonStream.java:        ActivateOptions options = view.getActivateOptions();
src\main\java\com\quinsoft\zeidon\TaskQualification.java:     * Activates an empty Object Instance for the specified LOD name.  The LOD must be
src\main\java\com\quinsoft\zeidon\TaskQualification.java:     * Activates an empty Object Instance for the specified LOD name.  The LOD must be
src\main\java\com\quinsoft\zeidon\TaskQualification.java:     * Activates an empty Object Instance for the specified LOD name.  The LOD must be
src\main\java\com\quinsoft\zeidon\TaskQualification.java:     * Activates an empty Object Instance for the specified LOD definition.  The application
src\main\java\com\quinsoft\zeidon\TaskQualification.java:     * Activates using the specified options.  This call is normally made from QualificationBuilder.
src\main\java\com\quinsoft\zeidon\TaskQualification.java:    View activateObjectInstance( ActivateOptions options ) throws UnknownLodDefException;
src\main\java\com\quinsoft\zeidon\TaskQualification.java:    View activateObjectInstance( String lodDefName, View qual, EnumSet<ActivateFlags> control ) throws UnknownLodDefException;
src\main\java\com\quinsoft\zeidon\TaskQualification.java:    View activateObjectInstance( LodDef lodDef, View qual, EnumSet<ActivateFlags> control );
src\main\java\com\quinsoft\zeidon\TaskQualification.java:    View activateObjectInstance( String lodDefName, View qual, ActivateOptions options );
src\main\java\com\quinsoft\zeidon\TaskQualification.java:    View activateOiFromFile( String lodDefName, String filename, EnumSet<ActivateFlags> control ) throws UnknownLodDefException;
src\main\java\com\quinsoft\zeidon\TaskQualification.java:    View activateOiFromFile( LodDef lodDef, String filename, EnumSet<ActivateFlags> control );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:import com.quinsoft.zeidon.ActivateFlags;
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:    public static final String QUAL_XOD_NAME = "ActivateQual";
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:    private final ActivateOptions activateOptions;
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        qualView.cursor( "ActivateQual" ).createEntity();
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        activateOptions = new ActivateOptions( taskQual.getTask() );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        activateOptions = new ActivateOptions( taskQual.getTask() );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:            qualView.cursor( "ActivateQual" ).getAttribute( "AllowCustomQuery" ).setValue( "Y" );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:            qualView.cursor( "ActivateQual" ).getAttribute( "AllowCustomQuery" ).setValue( "N" );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return setFlag( ActivateFlags.fSINGLE );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return setFlag( ActivateFlags.fROOT_ONLY );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return setFlag( ActivateFlags.fREAD_ONLY );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return setFlag( ActivateFlags.fKEYS_ONLY );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return setFlag( ActivateFlags.fMULTIPLE );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        qualView.cursor( ENTITYSPEC ).getAttribute( "ActivateLimit" ).setValue( limit );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return setFlag( ActivateFlags.fMULTIPLE );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return qualView.cursor( ENTITYSPEC ).getAttribute( "ActivateLimit" ).getInteger();
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return setFlag( ActivateFlags.fASYNCHRONOUS );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:    public QualificationBuilder setFlag( ActivateFlags flag )
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        activateOptions.addActivateFlag( flag );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:        return qualView.cursor( "ActivateQual" ).getEntityInstance();
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:    public QualificationBuilder addActivateOrdering( String entityName, String attribName, boolean descending )
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:            if ( activateOptions.getActivateFlags().contains( ActivateFlags.fASYNCHRONOUS ) )
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:     * Activate using the specified locking level.
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilder.java:     * Activate with the default locking level as specified in the LOD.
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilderFromJson.java:        qualBuilder.addActivateOrdering( orderEntityDef.getName(), attribName, false );
src\main\java\com\quinsoft\zeidon\utils\QualificationBuilderFromJson.java:        qualBuilder.addActivateOrdering( orderEntityDef.getName(), attribName, descending );
src\main\java\com\quinsoft\zeidon\utils\RestServerImplementation.java:import com.quinsoft.zeidon.ActivateOptions;
src\main\java\com\quinsoft\zeidon\utils\RestServerImplementation.java:            ActivateOptions activateOptions = new ActivateOptions( task );
src\main\java\com\quinsoft\zeidon\utils\RestServerImplementation.java:            task.log().error( "Error in Activate", e, (Object[]) null );
src\main\java\com\quinsoft\zeidon\utils\RestServerImplementation.java:     * Activate an OI.
src\main\java\com\quinsoft\zeidon\View.java:    View activateOiFromOi( Set<ActivateFlags> flags );
src\main\java\com\quinsoft\zeidon\View.java:    View activateOiFromOi( ActivateFlags flag );
src\main\java\com\quinsoft\zeidon\View.java:     * @return The ActivateOptions used to activate the OI.  May return null if
src\main\java\com\quinsoft\zeidon\View.java:    ActivateOptions getActivateOptions();
