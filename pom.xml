<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <name>zeidon</name>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.quinsoft.zeidon</groupId>
    <artifactId>zeidon</artifactId>
    <packaging>pom</packaging>
    <version>1.4.1-SNAPSHOT</version>

    <url>https://github.com/DeegC/zeidon-joe</url>
    <licenses>
        <license>
            <name>GNU LESSER GENERAL PUBLIC LICENSE</name>
            <url>http://www.gnu.org/licenses/lgpl.txt</url>
        </license>
    </licenses>

    <description>Parent to all Zeidon Java projects</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<scala.version>2.11.8</scala.version>
	<!-- Following is needed to avoid interpolation warnings -->
	<jar.version>${project.version}</jar.version>
    </properties>

    <scm>
      <connection>scm:git@github.com:zeidon/zeidon-joe.git</connection>
      <developerConnection>scm:git@github.com:zeidon/zeidon-joe.git</developerConnection>
      <url>scm:git@github.com:zeidon/zeidon-joe.git</url>
    </scm>

    <developers>
      <developer>
	<id>deegc</id>
	<name>DG</name>
      </developer>
    </developers>

    <!-- Set up distributionManagement to deploy to OSSRH central repo -->
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
      <pluginManagement>
	<plugins>
	  <plugin>
            <!--
		For deploying to OSS repository.
            -->
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.2</version>
	  </plugin>
	</plugins>
      </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

	    <!-- Enforce that all included jars use the same versions -->
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-enforcer-plugin</artifactId>
	      <version>1.4.1</version>
	      <executions>
		<execution>
		  <id>enforce-versions</id>
		  <goals>
		    <goal>enforce</goal>
		  </goals>
		  <configuration>
		    <rules>
		      <requireMavenVersion>
			<version>[3.*.*,)</version>
		      </requireMavenVersion>
		      <requireJavaVersion>
			<version>[1.7.*,)</version>
		      </requireJavaVersion>
		      <DependencyConvergence/>
		    </rules>
		  </configuration>
		</execution>
	      </executions>
	    </plugin>

	    <!-- Used to update the versions in Zeidon POMs.  Is this necessary? -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>

            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.10.3</version>
            </plugin>
	    
	    <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <version>2.10</version>
	    </plugin>

            <!-- For deploying to OSSRH repo -->            
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin> 

	    <!-- Parses the mvn version into properties:
		 parsedVersion.majorVersion
		 parsedVersion.minorVersion
		 parsedVersion.incrementalVersion
		 parsedVersion.qualifier
		 parsedVersion.buildNumber
	    <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>build-helper-maven-plugin</artifactId>
              <version>1.9.1</version>
              <executions>
		<execution>
		  <id>parse-version</id>
		  <goals>
		    <goal>parse-version</goal>
		  </goals>
		</execution>
              </executions>
	    </plugin>
	    -->
       </plugins>
    </build>

    <modules>
        <module>zeidon-joe</module>
        <module>scala</module>
        <module>object-browser</module>
	<module>jconsole-plugin</module>
	<module>jasper-reports</module>
        <module>zeidon-operations</module>
        <module>rest-servers/rest-easy</module>
        <module>rest-servers/scalatra</module>
        <module>zruby</module>
        <module>javascript</module>
        <module>android</module>
    </modules>

    <profiles>
        <!-- Put the test projects under a profile that is normally included.  This lets
             us exclude the test projects when we are deploying to remote repos.  Exclude
	     with:
	         mvn '-P!test-projects'
        -->
         <profile>
            <id>test-projects</id>
            <!-- This means the profile will always used unless it is explicitly excluded -->
            <activation>
                <file>
                    <exists>pom.xml</exists>
                </file>
            </activation>
            <modules>
                <module>zeidon-tests</module>
                <module>zeidon-tests/rest-server</module>
                <module>zeidon-tests/lod-server</module>
                <module>zeidon-tests/jconsole</module>
                <module>zeidon-tests/ruby</module>
		<!-- sinatra-server will be considered a test project for now because
		     it can't be pushed to maven as release project because it doesn't
		     have javadoc.  -->
		<module>sinatra-server</module>
            </modules>
        </profile>
 
        <!-- The sinatra server only needs to be built once per release because 
             it doesn't include any Zeidon code. It is a convenience .jar for LOD servers.
        <profile>
            <id>sinatra-server</id>
            <activation>
                <file>
                    <missing>sinatra-server/target/zeidon-sinatra-server-${jar.version}.jar</missing>
                </file>
            </activation>
            <modules>
                <module>sinatra-server</module>
            </modules>
        </profile>
        -->
 
        <!-- 
            Builds required objects for deploying to OSSRH
         -->
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>2.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.3</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
