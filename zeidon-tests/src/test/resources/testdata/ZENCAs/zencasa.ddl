DROP TABLE ACADEMICDEGREE ;
DROP TABLE ACADEMICDIVISION ;
DROP TABLE ACADEMICSTANDING ;
DROP TABLE ACTIONTASK ;
DROP TABLE ACTIVITY ;
DROP TABLE ADDITIONALEARNINGS ;
DROP TABLE ADDRESS ;
DROP TABLE ADJUNCTBUDGETESTIMATE ;
DROP TABLE ADMINISTRATIVEDIVISION ;
DROP TABLE ADMISSIONREQUIREMENT ;
DROP TABLE ADMISSIONREQUIREMENTMET ;
DROP TABLE ADMISSIONSMAJOR ;
DROP TABLE ADMISSIONSSTATISTICS ;
DROP TABLE ADMISSIONTRACK ;
DROP TABLE ADMISSIONTRACKREQUIREMENT ;
DROP TABLE ALUMNI ;
DROP TABLE APBILLPAYMENT ;
DROP TABLE APBILLVOUCHER ;
DROP TABLE APBILLVOUCHERLINE ;
DROP TABLE APTERMS ;
DROP TABLE ASSESSMENTGROUP ;
DROP TABLE ASSIGNMENT ;
DROP TABLE ATTENDANCESESSION ;
DROP TABLE BATCHEDITLIST ;
DROP TABLE BATCHITEM ;
DROP TABLE BILLINGPERIOD ;
DROP TABLE BUCKLEYDATAENTRY ;
DROP TABLE BUILDING ;
DROP TABLE CALENDARGROUP ;
DROP TABLE CALLBACK ;
DROP TABLE CAMPUSLOCATION ;
DROP TABLE CAMPUSORGANIZATION ;
DROP TABLE CAPITALIMPROVEMENTREQUEST ;
DROP TABLE CATEGORY ;
DROP TABLE CERTIFICATIONSTATEMENT ;
DROP TABLE CHANGEREQUEST ;
DROP TABLE CHAPELSESSION ;
DROP TABLE CHURCH ;
DROP TABLE CHURCHPERSONROLE ;
DROP TABLE CL_ITEMEMPLOYEE ;
DROP TABLE CLASS ;
DROP TABLE CLASSGRADEBOOK ;
DROP TABLE CLASSGRADECOMPONENT ;
DROP TABLE CLASSRESOURCE ;
DROP TABLE CLASSROOMSESSION ;
DROP TABLE CLASSROOMSTANDARDSCHEDULE ;
DROP TABLE CLASSTEMPLATE ;
DROP TABLE CLEARINGHOUSEREPORTLOG ;
DROP TABLE COD_DISBURSEMENT ;
DROP TABLE COHORT ;
DROP TABLE COHORTACTIVITY ;
DROP TABLE COHORTMEMBER ;
DROP TABLE COLLEGE ;
DROP TABLE COLLEGEDEGREE ;
DROP TABLE COLLEGETERM ;
DROP TABLE COLLEGEYEAR ;
DROP TABLE COMMUNICATIONPLAN ;
DROP TABLE CONTACTACTIVITY ;
DROP TABLE CONTACTLIST ;
DROP TABLE CONTACTLISTCATEGORY ;
DROP TABLE CONTACTLISTITEM ;
DROP TABLE CONTEXT ;
DROP TABLE COURSE ;
DROP TABLE COURSEPREREQUISITEGROUP ;
DROP TABLE COURSETOPIC ;
DROP TABLE COURSEWITHINREQUIREDGROUP ;
DROP TABLE CUSTOMTRANSCIPTTERM ;
DROP TABLE CUSTOMTRANSCRIPTLINE ;
DROP TABLE DASHBOARDFRAME ;
DROP TABLE DASHBOARDFRAMEUSER ;
DROP TABLE DATAENTRYBATCH ;
DROP TABLE DEGREEAUDITSPECIFICATION ;
DROP TABLE DEGREECANDIDACY ;
DROP TABLE DEGREEMAJOR ;
DROP TABLE DEGREEMINOR ;
DROP TABLE DEGREETRACK ;
DROP TABLE DEGREETRACKREQUIREDGROUP ;
DROP TABLE DEGREEYEARDATA ;
DROP TABLE DELETETRACE ;
DROP TABLE DEMOGRAPHICS ;
DROP TABLE DEPARTMENT ;
DROP TABLE DEPARTMENTCONTRACTDISTRIBUTION ;
DROP TABLE DEPOSIT ;
DROP TABLE DEPOSITGROUPING ;
DROP TABLE DEVPROJECT ;
DROP TABLE DIRECTORYRESTRICTIONS ;
DROP TABLE DIVISION ;
DROP TABLE DOCUMENT ;
DROP TABLE DOCUMENTCATEGORY ;
DROP TABLE DOCUMENTTOSEND ;
DROP TABLE z_DOMAIN ;
DROP TABLE DOMAINVALUE ;
DROP TABLE DONATION ;
DROP TABLE DONOR ;
DROP TABLE DONORANNUALSUMMARY ;
DROP TABLE DONORCONTACTTYPE ;
DROP TABLE EMAILBACK ;
DROP TABLE EMPLOYEE ;
DROP TABLE EMPLOYEECLASSCOMPENSATION ;
DROP TABLE EMPLOYMENTPERIOD ;
DROP TABLE ENROLLMENTHISTORY ;
DROP TABLE ENROLLMENTMODIFICATION ;
DROP TABLE ENROLLMENTORFOREIGNEQUIVALENT ;
DROP TABLE EVENT ;
DROP TABLE EXAMHISTORY ;
DROP TABLE EXTRACURRICULARACTIVITY ;
DROP TABLE EXTRACURRICULARACTIVITYGROUP ;
DROP TABLE EXTRACURRICULARAWARD ;
DROP TABLE EXTRACURRICULARROLE ;
DROP TABLE EXTRACURRICULARSTANDARDROLE ;
DROP TABLE FA_AUTOAWARDELIGIBILITY ;
DROP TABLE FA_AUTOAWARDGENERATEMESSAGE ;
DROP TABLE FA_AUTOAWARDVARIABLE ;
DROP TABLE FA_AWARDMATRIX ;
DROP TABLE FA_AWARDMATRIXCELL ;
DROP TABLE FA_CL_IMPORTEXPORTFILEHISTORY ;
DROP TABLE FA_LOANIMPORTEXPORTHISTORY ;
DROP TABLE FACULTY ;
DROP TABLE FAISIR ;
DROP TABLE FAISIRACG ;
DROP TABLE FAISIRACKNOWLEDGEMENTCOMMENTCO ;
DROP TABLE FAISIRASSUMPTION ;
DROP TABLE FAISIRASSUMPTIONOVERRIDE ;
DROP TABLE FAISIRCHANGE ;
DROP TABLE FAISIRCOMMENTCODE ;
DROP TABLE FAISIRCORRECTIONCODE ;
DROP TABLE FAISIRDATAVERIFYCODES ;
DROP TABLE FAISIRDOMAIN ;
DROP TABLE FAISIRDOMAINVALUE ;
DROP TABLE FAISIREFCINFORMATION ;
DROP TABLE FAISIRELIGIBILITY ;
DROP TABLE FAISIRFINAIDHISTORY ;
DROP TABLE FAISIRHIGHLIGHTFIELDS ;
DROP TABLE FAISIRIMPORTLOG ;
DROP TABLE FAISIRLOAN ;
DROP TABLE FAISIRPARENT ;
DROP TABLE FAISIRPELL ;
DROP TABLE FAISIRREJECTOVERRIDE ;
DROP TABLE FAISIRREJECTREASON ;
DROP TABLE FAISIRSCHOOL ;
DROP TABLE FAISIRSCHOOLTRANS ;
DROP TABLE FAISIRSMART ;
DROP TABLE FAISIRTEACH ;
DROP TABLE FINAIDADMIN ;
DROP TABLE FINAIDANNUALBUDGETED ;
DROP TABLE FINAIDAWARDASSIGNED ;
DROP TABLE FINAIDAWARDDISBURSEMENT ;
DROP TABLE FINAIDAWARDDISBURSEMENTHISTORY ;
DROP TABLE FINAIDAWARDPERIOD ;
DROP TABLE FINAIDCALCLOOKUPCOLUMN ;
DROP TABLE FINAIDCALCLOOKUPROW ;
DROP TABLE FINAIDCOA ;
DROP TABLE FINAIDCOAITEM ;
DROP TABLE FINAIDCOAITEMASSIGNED ;
DROP TABLE FINAIDCOAITEMFORYEAR ;
DROP TABLE FINAIDDISBURSEMENT ;
DROP TABLE FINAIDISIRLAYOUT ;
DROP TABLE FINAIDISIRLAYOUTATTRIBUTE ;
DROP TABLE FINAIDISIRVALUEDESCRIPTION ;
DROP TABLE FINAIDLENDERGUARANTOR ;
DROP TABLE FINAIDLOAN ;
DROP TABLE FINAIDPROFILE ;
DROP TABLE FINAIDPROFILEREQUIREMENT ;
DROP TABLE FINAIDREQUIREMENT ;
DROP TABLE FINAIDREQUIREMENTMET ;
DROP TABLE FINAIDRULE ;
DROP TABLE FINAIDRULESET ;
DROP TABLE FINAIDSOURCE ;
DROP TABLE FINAIDSOURCEHISTORICAL ;
DROP TABLE FINAIDTRACK ;
DROP TABLE FINAIDTRACKREQUIREMENT ;
DROP TABLE FINALEXAMSCHEDULE ;
DROP TABLE FINANCIALACCOUNT ;
DROP TABLE FINANCIALACCOUNTSTATEMENT ;
DROP TABLE FINANCIALACCOUNTTRANSACTION ;
DROP TABLE FINANCIALAIDCONSTANTS ;
DROP TABLE FINANCIALAPPROVALROLE ;
DROP TABLE FINDLIST ;
DROP TABLE FINDLISTITEM ;
DROP TABLE FINREGEDUCATIONALALLOWANCE ;
DROP TABLE FOLDER ;
DROP TABLE FOREIGNCOURSE ;
DROP TABLE FUND ;
DROP TABLE FUNDANNUALAMOUNT ;
DROP TABLE FYR_ENROLLMENT ;
DROP TABLE FYREPORTCLASSSUMMARY ;
DROP TABLE FYREPORTPROSPECTSUMMARY ;
DROP TABLE FYREPORTSUMMARY ;
DROP TABLE FYRSFA_CATEGORY ;
DROP TABLE GENEDREQUIREMENT ;
DROP TABLE GIFT ;
DROP TABLE GL_CC_BUDGENOTE ;
DROP TABLE GLACCOUNTINGPERIOD ;
DROP TABLE GLACCOUNTINGPERIODTOTALS ;
DROP TABLE GLACCOUNTINGPROFILE ;
DROP TABLE GLACCOUNTS ;
DROP TABLE GLACCOUNTTRANSAPPLIED ;
DROP TABLE GLANNUALBUDGETDETAIL ;
DROP TABLE GLANNUALBUDGETREVIEW ;
DROP TABLE GLBUDGET ;
DROP TABLE GLBUDGETDISTRULE ;
DROP TABLE GLBUDGETITEM ;
DROP TABLE GLCHARTDEFAULT ;
DROP TABLE GLCHARTENTRY ;
DROP TABLE GLCHARTOFACCOUNTS ;
DROP TABLE GLCOSTCENTER ;
DROP TABLE GLCOSTCENTERBUDGET ;
DROP TABLE GLCOSTCENTERBUDGETREVIEW ;
DROP TABLE GLFILEIMPORT ;
DROP TABLE GLFILEIMPORTLINE ;
DROP TABLE GLFISCALYEAR ;
DROP TABLE GLFUND ;
DROP TABLE GLJOURNAL ;
DROP TABLE GLJOURNALENTRY ;
DROP TABLE GLJOURNALENTRYDETAIL ;
DROP TABLE GLJOURNALENTRYTRACE ;
DROP TABLE GLJOURNALREFCOUNT ;
DROP TABLE GLPROJECT ;
DROP TABLE GLPROJECTCOMPONENT ;
DROP TABLE GLPROJECTCOMPONENTBUDGET ;
DROP TABLE GLRECURRINGJOURNALENTRIES ;
DROP TABLE GLRECURRINGJOURNALENTRYDETAIL ;
DROP TABLE GLREPORTSECTION ;
DROP TABLE GLSTORECODE ;
DROP TABLE GLSTOREREPORT ;
DROP TABLE GRADESCALE ;
DROP TABLE GRADESCALEVALUES ;
DROP TABLE GRADUATIONDATE ;
DROP TABLE HEALTHINFORMATION ;
DROP TABLE HOST ;
DROP TABLE HOSTSTANDARDTEXTS ;
DROP TABLE HOSTSTUDENTCLASSIFICATIONDATA ;
DROP TABLE HR_POSITION ;
DROP TABLE HS_COURSEENTRY ;
DROP TABLE HS_STANDARDCOURSE ;
DROP TABLE IMPORTTABLE ;
DROP TABLE INFLUENCER ;
DROP TABLE INTEREST ;
DROP TABLE INTERNALRULEVARIABLEDEF ;
DROP TABLE INVOLVEMENT ;
DROP TABLE LEGACYTRANSCRIPTGROUP ;
DROP TABLE LEGACYTRANSCRIPTGROUPLINE ;
DROP TABLE LEGACYTRANSCRIPTLINE ;
DROP TABLE MAILING ;
DROP TABLE MAILINGGROUP ;
DROP TABLE MANUALLYSATISFIED ;
DROP TABLE MATCHINGGIFTPROGRAM ;
DROP TABLE MEALPLAN ;
DROP TABLE MEDICALCODE ;
DROP TABLE MEETINGPARTICIPANT ;
DROP TABLE NONMATCHINGID ;
DROP TABLE OCCUPANTUNIT ;
DROP TABLE ORGANIZATION ;
DROP TABLE ORGANIZATIONALEVENT ;
DROP TABLE ORGPERSONROLE ;
DROP TABLE OVERRIDECHAPELREQUIREMENT ;
DROP TABLE PAYMENTMETHOD ;
DROP TABLE PAYMENTPLAN ;
DROP TABLE PAYMENTPLANLINE ;
DROP TABLE PAYMENTPLANLINEASSIGNED ;
DROP TABLE PERSON ;
DROP TABLE PERSONALDATAMODIFICATION ;
DROP TABLE PERSONATTRIBUTEMODIFICATION ;
DROP TABLE PERSONMERGEHISTORY ;
DROP TABLE PERSONREFERENCE ;
DROP TABLE PERSONROLE ;
DROP TABLE PERSONVIEWSSTUDENT ;
DROP TABLE PLEDGE ;
DROP TABLE PO_APPROVAL ;
DROP TABLE PO_LINEITEM ;
DROP TABLE POTENTIALGIFT ;
DROP TABLE PRESENTATIONOBJECTINSTANCE ;
DROP TABLE PRIOREDUCATION ;
DROP TABLE PROGRAM ;
DROP TABLE PROGRAMFORCOURSE ;
DROP TABLE PROPOSEDENROLLMENT ;
DROP TABLE PROPOSEDSCHEDULEHISTORY ;
DROP TABLE PROSPECT ;
DROP TABLE PROSPECTHISTSUMMARY ;
DROP TABLE PROSPECTTYPECHANGE ;
DROP TABLE PURCHASEORDER ;
DROP TABLE RECEIPT ;
DROP TABLE REGISTRATIONAPPROVAL ;
DROP TABLE REMOTEEVENT ;
DROP TABLE REMOTEEXINTEREST ;
DROP TABLE REMOTEMAJORINTEREST ;
DROP TABLE REMOTEPERSON ;
DROP TABLE REPORT ;
DROP TABLE REPORTGROUP ;
DROP TABLE REPORTSTRUCTURE ;
DROP TABLE REPORTSTRUCTUREACCOUNT ;
DROP TABLE REPORTSTRUCTURECATEGORY ;
DROP TABLE REPORTSTRUCTURECC ;
DROP TABLE REPORTSTRUCTURECHARTENTRY ;
DROP TABLE REPORTSTRUCTURECOSTCENTER ;
DROP TABLE REPORTSTRUCTUREGROUP ;
DROP TABLE REQUIREDGROUP ;
DROP TABLE REQUIREDSUBGROUP ;
DROP TABLE RESULTSET ;
DROP TABLE RETENTIONRISK ;
DROP TABLE REUSABLEEMAILSTATEMENT ;
DROP TABLE ROOM ;
DROP TABLE SAANNUALADMIN ;
DROP TABLE SACOLLECTIONS ;
DROP TABLE SACOMBINECODE ;
DROP TABLE SAEXPORTHISTORY ;
DROP TABLE SAEXPORTPROFILE ;
DROP TABLE SAINTERNALRULEVARIABLE ;
DROP TABLE SASUBACCOUNT ;
DROP TABLE SASUBACCOUNTITEM ;
DROP TABLE SATRANSACTIONCODE ;
DROP TABLE SATRANSACTIONTERM ;
DROP TABLE SAVEDDEGREEAUDIT ;
DROP TABLE SCHEDULEDSESSION ;
DROP TABLE SCHOLARSHIP ;
DROP TABLE SCHOLARSHIPAWARD ;
DROP TABLE SCHOOL ;
DROP TABLE SCHOOLPERSONROLE ;
DROP TABLE SECURITYAREA ;
DROP TABLE SECURITYSECTION ;
DROP TABLE SECURITYSET ;
DROP TABLE SECURITYSUBSECTION ;
DROP TABLE SECURITYTEMPLATE ;
DROP TABLE STAFF ;
DROP TABLE STANDARDFACULTYCOMPENSATIONTAB ;
DROP TABLE STANDARDSALARYDATA ;
DROP TABLE STOREDQUERY ;
DROP TABLE STOREDQUERYCATEGORY ;
DROP TABLE STUDENT ;
DROP TABLE STUDENT1098T ;
DROP TABLE STUDENTACCOUNTHISTORICALPROFIL ;
DROP TABLE STUDENTACCOUNTPROFILE ;
DROP TABLE STUDENTACCOUNTRECEIPT ;
DROP TABLE STUDENTACCOUNTRULE ;
DROP TABLE STUDENTACCOUNTRULESET ;
DROP TABLE STUDENTACCOUNTSTATEMENT ;
DROP TABLE STUDENTACCOUNTTRANSAPPLIED ;
DROP TABLE STUDENTASSIGNMENT ;
DROP TABLE STUDENTCERTIFICATION ;
DROP TABLE STUDENTCHANGEHISTORY ;
DROP TABLE STUDENTCHANGELOG ;
DROP TABLE STUDENTCOLLEGETERM ;
DROP TABLE STUDENTHEALTH ;
DROP TABLE STUDENTMAJORDEGREETRACK ;
DROP TABLE STUDENTMINORDEGREETRACK ;
DROP TABLE STUDENTNONRESIDENCYPETITION ;
DROP TABLE STUDENTWAITLISTED ;
DROP TABLE STUDYOPTIONGROUP ;
DROP TABLE STUHISTSUMMARY ;
DROP TABLE STUHISTSUMMARYDEGREEMAJOR ;
DROP TABLE SUBASSIGNMENT ;
DROP TABLE TERMOFMEALPLAN ;
DROP TABLE TERMOFRESIDENCE ;
DROP TABLE TERRITORY ;
DROP TABLE TRAININGCHILD ;
DROP TABLE TRAININGGRANDCHILD ;
DROP TABLE TRAININGPARENT ;
DROP TABLE z_TRANSACTION ;
DROP TABLE TRANSCRIPTREQUEST ;
DROP TABLE TRANSFERCOURSEAPPROVALREQUEST ;
DROP TABLE TRANSFERGROUP ;
DROP TABLE TRANSFERGROUPTEXTLINE ;
DROP TABLE TRUSTEE ;
DROP TABLE TRUSTEECOMMITTEEASSIGNMENT ;
DROP TABLE TRUSTEESUBCOMMITTEEASSIGNMENT ;
DROP TABLE z_USER ;
DROP TABLE USERGROUP ;
DROP TABLE USERTASK ;
DROP TABLE USERTRACERECORD ;
DROP TABLE VEHICLEREGISTRATION ;
DROP TABLE VENDOR ;
DROP TABLE WEBADDITIONALINTERACTIVEPAGE ;
DROP TABLE WEBDESIGNSTRUCTURE ;
DROP TABLE WEBPAGE ;
DROP TABLE WEBUSERMESSAGE ;
DROP TABLE WEBUSERMESSAGEGROUP ;
DROP TABLE WORKSTUDYALLOCATION ;
DROP TABLE YEARLYCONTRACT ;
DROP TABLE YEARLYCONTRACTROLE ;
DROP TABLE ZEIDONGENKEYTABLE ;
DROP TABLE ZEIDONKEYLIST ;
DROP TABLE ZEIDONLOCKING ;
DROP TABLE ZIPCODELOOKUPTABLE ;
DROP TABLE MM_PERSON_SMPLYDBY_ORGANIZATIO ;
DROP TABLE MM_VENDOR_HASBEENONPOFOR_Z_USE ;
DROP TABLE MMZUSERHSRVWDGLANNUALBUDGETREV ;
DROP TABLE MMZUSERCNTRPOFRUSRFINANCIALAPP ;
DROP TABLE MMGLCOSTCENTERCNBPRVDBYFINANCI ;
DROP TABLE MMAPBILLVOUCHERPYSPURCHASEORDE ;
DROP TABLE MM_Z_USER_ISTOCOMPLETE_USERTAS ;
DROP TABLE MMAPBILLVOUCHERLINEPYSPOLINEIT ;
DROP TABLE MMGLJOURNALENTRYDETAILSXPNSFRG ;
DROP TABLE MM_STUDENT_HS_ENROLLMENTHISTOR ;
DROP TABLE MMPROGRAMHSCHRGSATRANSACTIONCO ;
DROP TABLE MMGLJOURNALENTRYDETAILFRREPORT ;
DROP TABLE MM_Z_USER_SLWDTSREPORTSTRUCTUR ;
DROP TABLE MM_GLFUND_ISSDN_REPORTSTRUCTUR ;
DROP TABLE MM_Z_USER_CANMNTN_CALENDARGROU ;
DROP TABLE MM_Z_USER_HASDFLT_CALENDARGROU ;
DROP TABLE MM_Z_USER_CNSTCLNDRFRDEPARTMEN ;
DROP TABLE MM_CATEGORY_FOR_VENDOR ;
DROP TABLE MM_COLLEGETERM_FR_BILLINGPERIO ;
DROP TABLE MMSTUDENTACCOUNTRULESETHSSTUDE ;
DROP TABLE MMSTUDENTACCOUNTRULESETSCHLDST ;
DROP TABLE MM_COURSE_HAS_GENEDREQUIREMENT ;
DROP TABLE MMSTUDENTFRCERTIFICATIONSTATEM ;
DROP TABLE MMGLACCOUNTSSTHCHRGCNTFRGLSTOR ;
DROP TABLE MMFINAIDSOURCECNGTMNYFINAIDDIS ;
DROP TABLE MMFINAIDAWARDDISBURSEMENTFLFLD ;
DROP TABLE MMSTUDENTHSHGHSCHLRQRMNTREQUIR ;
DROP TABLE MM_COURSE_SDNMJRGPA_DEGREETRAC ;
DROP TABLE MM_COURSE_ISCROSSLISTDFR_COURS ;
DROP TABLE MM_FACULTY_OPENSACDMCDTT_PERSO ;
DROP TABLE MM_PERSON_HS_PERSONVIEWSSTUDEN ;
DROP TABLE MM_FINAIDRULE_FOR_FINAIDRULESE ;
DROP TABLE MMFINAIDRULESETSTHCHLDFINAIDRU ;
DROP TABLE MM_FAISIR_FOR_FAISIRIMPORTLOG ;
DROP TABLE MMREQUIREDGROUPSFLFLDBYDLTENRO ;
DROP TABLE MM_STUDENT_SSTDNTSSSTNTFR_CLAS ;
DROP TABLE MM_FINAIDCOA_HAS_FINAIDCOAITEM ;
DROP TABLE MMFINAIDRULESETCNBTHLKPFRFINAI ;
DROP TABLE MMFINAIDRULESETCNQLFYFINAIDCOA ;
DROP TABLE MM_Z_USER_CANSCHEDULE_ROOM ;
DROP TABLE MM_CATEGORY_CNBTDT_FINAIDSOURC ;
DROP TABLE MM_CONTACTLIST_HAS_FINAIDSOURC ;
DROP TABLE MMFINAIDRULESETCNLKPFRFINAIDSO ;
DROP TABLE MMENROLLMENTORFOREIGNEQUIVALEN ;
DROP TABLE MMZUSERHSTHRTYTCRTWEBUSERMESSA ;
DROP TABLE MMZUSERHSFLTRFRWEBUSERMESSAGEG ;
DROP TABLE MMCOLLEGETERMCNBLNKDTFINAIDAWA ;
DROP TABLE MM_DEGREEMINOR_FOR_STUDENT ;
DROP TABLE MM_CONTACTLIST_CONTAINS_CLASS ;
DROP TABLE MM_COURSE_ISONA_CONTACTLIST ;
DROP TABLE MM_DONOR_ISON_CONTACTLIST ;
DROP TABLE MM_COURSE_ISPREREQUISTFR_COURS ;
DROP TABLE MM_COURSE_ISCOREQUISITFR_COURS ;
DROP TABLE MMCOURSESPRTFPRQSTGRPCOURSEPRE ;
DROP TABLE MM_MAILING_FOR_MAILINGGROUP ;
DROP TABLE MM_CLASS_FOR_CLASSTEMPLATE ;
DROP TABLE MM_COURSE_FOR_CLASSTEMPLATE ;
DROP TABLE MM_CATEGORY_CANHAVE_SCHOLARSHI ;
DROP TABLE MM_REPORT_FOR_REPORTGROUP ;
DROP TABLE MM_MAILING_CANGENERATE_DOCUMEN ;
DROP TABLE MMPERSONFSCNDRYDPLCTFRBATCHITE ;
DROP TABLE MM_CONTACTLIST_CONTAINS_COHORT ;
DROP TABLE MMADMINISTRATIVEDIVISIONSCSBLF ;
DROP TABLE MMREMOTEPERSONFRREMOTEMAJORINT ;
DROP TABLE MMREMOTEPERSONFRREMOTEEXINTERE ;
DROP TABLE MM_COURSE_SNCLDDNDLT_DEPARTMEN ;
DROP TABLE MM_STUDENT_ATTNDD_CHAPELSESSIO ;
DROP TABLE MMSTUDENTWSNGLRDNGCHAPELSESSIO ;
DROP TABLE MM_DEPARTMENT_INCLUDES_FACULTY ;
DROP TABLE MM_SCHOOL_SCRSSPLCTNFR_PROSPEC ;
DROP TABLE MMSATRANSACTIONCODESTHCHRGFRRO ;
DROP TABLE MM_COURSE_ISREQRDBY_DEGREETRAC ;
DROP TABLE MM_CONTACTLIST_CONTAINS_ALUMNI ;
DROP TABLE MM_STUDENT_ISON_CONTACTLIST ;
DROP TABLE MM_CATEGORY_CANBETIEDTO_ALUMNI ;
DROP TABLE MM_PERSON_FOR_CONTACTLIST ;
DROP TABLE MM_DONATION_ISON_CONTACTLIST ;
DROP TABLE MMORGANIZATIONHSGNFCNTLNKTDONO ;
DROP TABLE MM_FUND_ISCOMMONLYGIVNFRM_DONO ;
DROP TABLE MM_FUND_ISTIEDTO_CONTACTLIST ;
DROP TABLE MM_CATEGORY_ISFOR_FUND ;
DROP TABLE MM_CONTACTLIST_CONTAINS_CHURCH ;
DROP TABLE MM_CONTACTLIST_CONTAINS_SCHOOL ;
DROP TABLE MM_PERSON_ISEMPLYFR_CONTACTLIS ;
DROP TABLE MM_CONTACTLISTCNTNSORGANIZATIO ;
DROP TABLE MMCAMPUSLOCATIONSPTNTLCRSLCTNF ;
DROP TABLE MM_PROGRAM_FOR_PROSPECT ;
DROP TABLE MMCOURSECNHVFSSATRANSACTIONCOD ;
DROP TABLE MMCOURSETTNBCHRGDBYSATRANSACTI ;
DROP TABLE MM_CHURCH_CANBETIDBCKT_CATEGOR ;
DROP TABLE MM_DONOR_CANBETIEDBCKT_CATEGOR ;
DROP TABLE MM_FACULTY_CANBETDBCKT_CATEGOR ;
DROP TABLE MMORGANIZATIONCNBTDBCKTCATEGOR ;
DROP TABLE MM_PERSON_CANBETIDBCKT_CATEGOR ;
DROP TABLE MM_PROSPECT_CANBTDBCKT_CATEGOR ;
DROP TABLE MM_SCHOOL_CANBETIDBCKT_CATEGOR ;
DROP TABLE MM_STAFF_CANBETIEDBCKT_CATEGOR ;
DROP TABLE MM_STUDENT_CANBETDBCKT_CATEGOR ;
DROP TABLE MM_EVENT_FOR_STOREDQUERY ;
DROP TABLE MM_EVENT_FOR_DOCUMENT ;
DROP TABLE MM_FACULTY_ISONA_CONTACTLIST ;
DROP TABLE MM_USERGROUP_CONTANSMMBR_Z_USE ;
DROP TABLE MM_FACULTY_ISINSTRUCTORFR_CLAS ;
DROP TABLE MM_GIFT_ISSOFTCREDITFOR_DONOR ;
DROP TABLE MM_DONOR_GETSSOFTCREDTFRM_DONO ;
DROP TABLE MM_POTENTIALGIFT_FULLFLDBY_GIF ;
DROP TABLE MMPROSPECTCNBNFLNCDBYINFLUENCE ;
DROP TABLE MM_PROSPECT_ISON_CONTACTLIST ;
DROP TABLE MM_ROOM_CANBESCHEDULEDBY_PERSO ;
DROP TABLE MM_DEPARTMENT_CNBN_GLCOSTCENTE ;
DROP TABLE MMGLCHARTENTRYSFRGLREPORTSECTI ;

-- Entity - AcademicDegree 
CREATE TABLE ACADEMICDEGREE ( 
           DEGREEVALUE        TEXT( 10 )         NOT NULL, 
           DCTRTFRSTPRFSNLOPT TEXT( 5 )                   ) ;
 
-- Entity - AcademicDivision 
CREATE TABLE ACADEMICDIVISION ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           FK_ID_FACULTY      INTEGER                     ) ;
 
-- Entity - AcademicStanding 
CREATE TABLE ACADEMICSTANDING ( 
           ID                 INTEGER            NOT NULL, 
           SEMESTERGPA        DOUBLE                     , 
           CUMULATIVEGPA      DOUBLE                     , 
           ATTEMPTEDCREDITS   DOUBLE                     , 
           EARNEDCREDITS      DOUBLE                     , 
           CUMULATIVECOMPLTNR DOUBLE                     , 
           DENSLSTATTMPTDCRDT DOUBLE                     , 
           ACADEMICLEVEL      TEXT( 5 )                  , 
           RECOMMENDEDSTANDIN TEXT( 1 )                  , 
           ACADEMICSTANDING   TEXT( 1 )                  , 
           FINANCIALSTANDING  TEXT( 1 )                  , 
           RECMMNDDFNNCLSTNDN TEXT( 1 )                  , 
           DEANSLISTFLAG      TEXT( 1 )                  , 
           HONORSFLAG         TEXT( 1 )                  , 
           PHIDELTAFLAG       TEXT( 1 )                  , 
           SEMESTERRANKING    INTEGER                    , 
           CREATEDATETIME     TEXT( 25 )                 , 
           DECISIONDATE       DATE                       , 
           z_NOTE             MEMO                       , 
           z_YEAR             TEXT( 4 )                  , 
           FINAIDDECISIONDATE DATE                       , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER                     ) ;
 
-- Entity - ActionTask 
CREATE TABLE ACTIONTASK ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 10 )                 , 
           USERMESSAGE        MEMO                       , 
           DIALOGNAME         TEXT( 8 )                  , 
           WINDOWNAME         TEXT( 32 )                 , 
           COMPLETEDDATETIME  TEXT( 25 )                 , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           FK_ID_Z_USER       INTEGER            NOT NULL, 
           FKIDREGISTRATIONAP INTEGER                    , 
           FK_ID_PO_APPROVAL  INTEGER                     ) ;
 
-- Entity - Activity 
CREATE TABLE ACTIVITY ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )          NOT NULL, 
           STATUS             TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           BEGINDATE          DATE                       , 
           BEGINTIME          TEXT( 25 )                 , 
           ENDTIME            TEXT( 25 )                 , 
           ALLDAY             TEXT( 1 )                  , 
           ISEXCLUSIVE        TEXT( 1 )                  , 
           COMPLETEDDATE      DATE                       , 
           COMPLETEDTIME      TEXT( 25 )                 , 
           ALARMDATETIME      TEXT( 25 )                 , 
           ALARMINCREMENT     INTEGER                    , 
           z_NOTE             MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_EVENT        INTEGER                     ) ;
 
-- Entity - AdditionalEarnings 
CREATE TABLE ADDITIONALEARNINGS ( 
           ID                 INTEGER            NOT NULL, 
           AMOUNT             DOUBLE                     , 
           z_DATE             DATE                       , 
           FK_ID_EMPLOYEE     INTEGER            NOT NULL, 
           FK_ID_GLCHARTENTRY INTEGER            NOT NULL ) ;
 
-- Entity - Address 
CREATE TABLE ADDRESS ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 30 )                 , 
           LINE1              TEXT( 50 )                 , 
           LINE2              TEXT( 50 )                 , 
           LINE3              TEXT( 50 )                 , 
           CITY               TEXT( 100 )                , 
           STATEPROVINCE      TEXT( 2 )                  , 
           INTERNATIONALREGIO TEXT( 254 )                , 
           COUNTRY            TEXT( 3 )                  , 
           COUNTY             TEXT( 254 )                , 
           POSTALCODE         TEXT( 10 )                 , 
           TOLLFREEPHONE      TEXT( 10 )                 , 
           PHONE1             TEXT( 10 )                 , 
           PHONE2             TEXT( 10 )                 , 
           FAX                TEXT( 10 )                 , 
           ATTENTIONLINE1     TEXT( 50 )                 , 
           TIMEZONE           TEXT( 30 )                 , 
           VALIDFROMMONTHDAY  TEXT( 4 )                  , 
           VALIDTOMONTHDAY    TEXT( 4 )                  , 
           LATITUDE           DOUBLE                     , 
           LONGITUDE          DOUBLE                     , 
           SHIPPINGFLAG       TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_STUDENTHEALT INTEGER                    , 
           FK_HOSTID_HOST     INTEGER                    , 
           SHIPHOSTID_HOST    INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_SCHOOL       INTEGER                    , 
           FK_ID_CHURCH       INTEGER                     ) ;
 
-- Entity - AdjunctBudgetEstimate 
CREATE TABLE ADJUNCTBUDGETESTIMATE ( 
           ID                 INTEGER            NOT NULL, 
           NUMBEROFCLASSES    INTEGER                    , 
           COSTPERCLASS       DOUBLE                     , 
           FK_ID_GLBUDGET     INTEGER                    , 
           FK_ID_DEPARTMENT   INTEGER                    , 
           FK_ID_GLCOSTCENTER INTEGER            NOT NULL, 
           FK_ID_GLACCOUNTS   INTEGER                     ) ;
 
-- Entity - AdministrativeDivision 
CREATE TABLE ADMINISTRATIVEDIVISION ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           USESCOHORTSFLAG    TEXT( 1 )                  , 
           AUTOASSIGNCONSLRFL TEXT( 1 )                  , 
           FACULTYPROSPCTSCRP MEMO                       , 
           NAMEPREFIX         TEXT( 5 )                  , 
           CLEARINGHOUSRPRTHD TEXT( 10 )                 , 
           FK_ID_DOCUMENT     INTEGER                     ) ;
 
-- Entity - AdmissionRequirement 
CREATE TABLE ADMISSIONREQUIREMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           PRINTNAME          TEXT( 50 )                 , 
           TYPE               TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           HIDEONAPPLCNTINTRF TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL ) ;
 
-- Entity - AdmissionRequirementMet 
CREATE TABLE ADMISSIONREQUIREMENTMET ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           DATERECEIVED       DATE                       , 
           FK_ID_PROSPECT     INTEGER            NOT NULL, 
           FKIDADMISSIONREQUI INTEGER            NOT NULL ) ;
 
-- Entity - AdmissionsMajor 
CREATE TABLE ADMISSIONSMAJOR ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           INACTIVEFLAG       TEXT( 1 )                  , 
           WEBSITEHYPERLINKCO TEXT( 100 )                , 
           FK_ID_DEPARTMENT   INTEGER                    , 
           FK_ID_DEGREEMAJOR  INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - AdmissionsStatistics 
CREATE TABLE ADMISSIONSSTATISTICS ( 
           ID                 INTEGER            NOT NULL, 
           WEEKYEARCLASS      TEXT( 8 )                  , 
           WEEK               INTEGER                    , 
           z_YEAR             TEXT( 4 )                  , 
           CLASSIFICATION     TEXT( 2 )                  , 
           INQUIRYCOUNT       INTEGER                    , 
           LEADCOUNT          INTEGER                    , 
           APPLICATIONCOUNT   INTEGER                    , 
           ADMISSIONCOUNT     INTEGER                    , 
           DEPOSITCOUNT       INTEGER                    , 
           WITHDRAWNCOUNT     INTEGER                    , 
           NETDEPOSITCOUNT    INTEGER                    , 
           SUBGROUPTYPE       TEXT( 1 )                   ) ;
 
-- Entity - AdmissionTrack 
CREATE TABLE ADMISSIONTRACK ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           DEFAULTFLAG        TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL ) ;
 
-- Entity - AdmissionTrackRequirement 
CREATE TABLE ADMISSIONTRACKREQUIREMENT ( 
           SEQUENCENUMBER     INTEGER                    , 
           DISPLAYPROSPECTTYP TEXT( 2 )                  , 
           FK_IDADMISSIONTRAC INTEGER            NOT NULL, 
           FKIDADMISSIONREQUI INTEGER            NOT NULL ) ;
 
-- Entity - Alumni 
CREATE TABLE ALUMNI ( 
           ID                 INTEGER            NOT NULL, 
           CLASS              TEXT( 4 )                  , 
           PREFEREDCLASS      TEXT( 4 )                  , 
           HONORARY           TEXT( 1 )                  , 
           HIGHESTDEGREE      TEXT( 5 )                  , 
           HIGHESTDEGREEYEAR  TEXT( 4 )                  , 
           ACADEMICDIVISION   TEXT( 254 )                , 
           GRADUATE           TEXT( 1 )                  , 
           NONGRADUATE        TEXT( 1 )                  , 
           GRADUATIONDATE     DATE                       , 
           PHIDELTALAMBDA     TEXT( 1 )                  , 
           LEADCLASSID        TEXT( 254 )                , 
           LEADFLAG           TEXT( 1 )                  , 
           DEGREE1            TEXT( 5 )                  , 
           DEGREE2            TEXT( 5 )                  , 
           DEGREE3            TEXT( 5 )                  , 
           DEGREE1DATE        DATE                       , 
           DEGREE2DATE        DATE                       , 
           DEGREE3DATE        DATE                       , 
           DEGREE1MAJOR1      TEXT( 10 )                 , 
           DEGREE1MAJOR2      TEXT( 5 )                  , 
           DEGREE2MAJOR1      TEXT( 5 )                  , 
           DEGREE2MAJOR2      TEXT( 5 )                  , 
           DEGEE1MINOR        TEXT( 5 )                  , 
           UNDERGRADGRDTNCLSS TEXT( 254 )                , 
           UNDERGRADGRDTNCL02 TEXT( 254 )                , 
           UNDERGRADGRDTNCL03 TEXT( 254 )                , 
           GRADGRADUATIONCLSS TEXT( 254 )                , 
           GRADGRADUATIONCL02 TEXT( 254 )                , 
           GRADDEGREE1        TEXT( 5 )                  , 
           GRADDEGREE2        TEXT( 5 )                  , 
           GRADDEGREEMAJOR1   TEXT( 5 )                  , 
           GRADDEGREEMAJOR2   TEXT( 5 )                  , 
           CONVERTEDSTRING    MEMO                       , 
           CONVERTEDKEY       TEXT( 9 )                  , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - APBillPayment 
CREATE TABLE APBILLPAYMENT ( 
           ID                 INTEGER            NOT NULL, 
           DATEPAID           DATE                       , 
           AMOUNT             DOUBLE                     , 
           FK_ID_APBILLVOUCHE INTEGER                    , 
           CREDITFROMIDAPBILL INTEGER                    , 
           FKIDFINANCIALACCOU INTEGER                     ) ;
 
-- Entity - APBillVoucher 
CREATE TABLE APBILLVOUCHER ( 
           ID                 INTEGER            NOT NULL, 
           DATERECEIVED       DATE                       , 
           DATEDUE            DATE                       , 
           DISCOUNTDATEDUE    DATE                       , 
           TERMS              TEXT( 254 )                , 
           LINEITEMSAMOUNT    DOUBLE                     , 
           TAXAMOUNT          DOUBLE                     , 
           TOTALAMOUNT        DOUBLE                     , 
           INVOICENUMBER      TEXT( 254 )                , 
           ISCREDITVOUCHER    TEXT( 1 )                  , 
           DISCOUNTAMOUNT     DOUBLE                     , 
           TOTALDUE           DOUBLE                     , 
           z_NOTE             MEMO                       , 
           PAIDINFULLDATE     DATE                       , 
           VOIDED             TEXT( 1 )                  , 
           POSTEDDATE         DATE                       , 
           TRANSACTIONDATE    DATE                       , 
           SELECTEDFORPAYMENT TEXT( 1 )                  , 
           USE1099            TEXT( 1 )                  , 
           USEAPPENDNAME      TEXT( 1 )                  , 
           WAMOUNTTOPAY       DOUBLE                     , 
           INDISPUTE          TEXT( 1 )                  , 
           FKIDGLACCOUNTTRANS INTEGER                    , 
           FK_IDGLJOURNALENTR INTEGER                    , 
           VOIDIDGLJOURNALENT INTEGER                    , 
           FK_ID_VENDOR       INTEGER                    , 
           FK_ID_EMPLOYEE     INTEGER                    , 
           FK_ID_APTERMS      INTEGER                     ) ;
 
-- Entity - APBillVoucherLine 
CREATE TABLE APBILLVOUCHERLINE ( 
           ID                 INTEGER            NOT NULL, 
           LINENUMBER         INTEGER                    , 
           AMOUNT             DOUBLE                     , 
           DESCRIPTION        TEXT( 254 )                , 
           FK_ID_APBILLVOUCHE INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER                    , 
           FK_ID_DEPARTMENT   INTEGER                     ) ;
 
-- Entity - APTerms 
CREATE TABLE APTERMS ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           DAYS               INTEGER                    , 
           NETDAYS            INTEGER                    , 
           PERCENTDISCOUNT    DOUBLE                      ) ;
 
-- Entity - AssessmentGroup 
CREATE TABLE ASSESSMENTGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NUMBEROFASSIGNMENT INTEGER                    , 
           NAME               TEXT( 50 )                 , 
           TOTALPOINTS        INTEGER                    , 
           GRADEPERCENT       DOUBLE                     , 
           GROUPWEIGHT        INTEGER                    , 
           NUMBROFLWSTGRDSTDR INTEGER                    , 
           z_NOTE             MEMO                       , 
           ASGNMNTPNTSPRCNTTY TEXT( 254 )                , 
           EXTRACREDIT        TEXT( 1 )                  , 
           FK_IDCLASSGRADEBOO INTEGER            NOT NULL ) ;
 
-- Entity - Assignment 
CREATE TABLE ASSIGNMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           POTENTIALPOINTS    INTEGER                    , 
           GRADEPOINTS        INTEGER                    , 
           GRADEPERCENT       DOUBLE                     , 
           ASSIGNMENTDATE     DATE                       , 
           DUEDATE            DATE                       , 
           EXTRACREDITPOINTS  INTEGER                    , 
           EXTRACREDIT        TEXT( 1 )                  , 
           ASSIGNMENTWEIGHT   INTEGER                    , 
           z_NOTE             MEMO                       , 
           ASSIGNMENTFILENAME TEXT( 254 )                , 
           ASSIGNMENTDIRECTOR TEXT( 254 )                , 
           WEBLINK            TEXT( 1 )                  , 
           FKIDASSESSMENTGROU INTEGER                    , 
           FK_IDCLASSGRADEBOO INTEGER            NOT NULL ) ;
 
-- Entity - AttendanceSession 
CREATE TABLE ATTENDANCESESSION ( 
           z_DATE             DATE               NOT NULL, 
           ATTENDANCEATSESSIO TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - BatchEditList 
CREATE TABLE BATCHEDITLIST ( 
           ID                 INTEGER            NOT NULL, 
           BATCHEDITDATE      DATE                       , 
           TODATE             DATE                       , 
           POSTED             TEXT( 1 )                  , 
           POSTDATE           DATE                       , 
           DESCRIPTION        TEXT( 254 )                , 
           TYPE               TEXT( 10 )                 , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - BatchItem 
CREATE TABLE BATCHITEM ( 
           ID                 INTEGER            NOT NULL, 
           BLOBOI             LONGBINARY                 , 
           z_NOTE             MEMO                       , 
           PROCESSEDFLAG      TEXT( 1 )                  , 
           INQUIRYORAPPLCTNTY TEXT( 1 )                  , 
           ONLINEEVALUATEDFLA TEXT( 1 )                  , 
           MERGEREEVALUATINFL TEXT( 1 )                  , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_PROSPECT     INTEGER                    , 
           FK_IDDATAENTRYBATC INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - BillingPeriod 
CREATE TABLE BILLINGPERIOD ( 
           ID                 INTEGER            NOT NULL, 
           PERIODDESIGNATOR   TEXT( 254 )                , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           COURSECREDITS      DOUBLE                     , 
           TITLE4TERM         TEXT( 1 )                  , 
           UNDATED            TEXT( 1 )                  , 
           REGISTRTNTRCKPRGRS TEXT( 20 )                 , 
           BALANCEFORWARD     DOUBLE                     , 
           TERMCHARGES        DOUBLE                     , 
           AIDAPPLIED         DOUBLE                     , 
           AMOUNTDUE          DOUBLE                     , 
           DISCOUNT           DOUBLE                     , 
           INITIALPAYMENT     DOUBLE                     , 
           PAYPLANAMOUNT      DOUBLE                     , 
           RESIDENCYSTATUSTER TEXT( 1 )                  , 
           OFFCAMPUSREASON    TEXT( 5 )                  , 
           OFFCAMPUSCONTACT   TEXT( 254 )                , 
           OFFCAMPUSPHONE     TEXT( 10 )                 , 
           TITLE4AUTHORIZTNFL TEXT( 1 )                  , 
           PAYCHECKAUTHRZTNFL TEXT( 1 )                  , 
           BOKSTRACCNTCHRGAMN DOUBLE                     , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_PAYMENTPLAN  INTEGER                     ) ;
 
-- Entity - BuckleyDataEntry 
CREATE TABLE BUCKLEYDATAENTRY ( 
           TYPEOFRELATIONSHIP TEXT( 20 )                 , 
           FINANCIALDTACCSSFL TEXT( 1 )                  , 
           ACADEMICDATACCSSFL TEXT( 1 )                  , 
           FINANCLADDTACCSSFL TEXT( 1 )                  , 
           PERSONALDATACCSSFL TEXT( 1 )                  , 
           PERSONNAME         TEXT( 254 )                , 
           ONLINEACCOUNTEMAIL TEXT( 128 )                , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
-- Entity - Building 
CREATE TABLE BUILDING ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           SHORTNAME          TEXT( 10 )                 , 
           DESCRIPTION        MEMO                       , 
           ROOMNUMBERPREFIX   TEXT( 5 )                   ) ;
 
-- Entity - CalendarGroup 
CREATE TABLE CALENDARGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                  ) ;
 
-- Entity - Callback 
CREATE TABLE CALLBACK ( 
           ID                 INTEGER            NOT NULL, 
           z_DATE             DATE                       , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_CHURCH       INTEGER                    , 
           FK_ID_ORGANIZATION INTEGER                     ) ;
 
-- Entity - CampusLocation 
CREATE TABLE CAMPUSLOCATION ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL ) ;
 
-- Entity - CampusOrganization 
CREATE TABLE CAMPUSORGANIZATION ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           FK_ID_GLCHARTENTRY INTEGER                     ) ;
 
-- Entity - CapitalImprovementRequest 
CREATE TABLE CAPITALIMPROVEMENTREQUEST ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           STATUS             TEXT( 5 )                  , 
           DESCRIPTION        MEMO                       , 
           RATIONALFORPROJECT MEMO                       , 
           LOCATION           TEXT( 254 )                , 
           REQUESTEDSTARTDATE DATE                       , 
           REQUESTEDCOMPLETND DATE                       , 
           ENTEREDDATE        DATE                       , 
           ESTIMATEDCOST      DOUBLE                     , 
           PRJCTSPRDMLTPLYRSF TEXT( 1 )                  , 
           FK_ID_Z_USER       INTEGER            NOT NULL, 
           FK_ID_GLCOSTCENTER INTEGER            NOT NULL, 
           FK_ID_GLPROJECT    INTEGER                     ) ;
 
-- Entity - Category 
CREATE TABLE CATEGORY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )         NOT NULL, 
           FUNCTIONALAREA     TEXT( 30 )                 , 
           FUNCTIONALSUBAREA  TEXT( 254 )                , 
           PRIVATETFNCTNLARFL TEXT( 1 )                  , 
           TYPE               TEXT( 10 )                 , 
           CATEGORYCODE       TEXT( 10 )                 , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - CertificationStatement 
CREATE TABLE CERTIFICATIONSTATEMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           TRANSCRIPTTEXT     MEMO                       , 
           PRESENTATIONPRIORT INTEGER                    , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           GRADUATECOLLEGEFLA TEXT( 1 )                  , 
           APPLYTOCOLLEGELEVE TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - ChangeRequest 
CREATE TABLE CHANGEREQUEST ( 
           ID                 INTEGER            NOT NULL, 
           FUNCTIONALAREA     TEXT( 30 )                 , 
           DESCRIPTION        MEMO                       , 
           TYPE               TEXT( 5 )                  , 
           FEATURETYPE        TEXT( 5 )                  , 
           PRIORITY           TEXT( 5 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           COMPLETEDDATETIME  TEXT( 25 )                 , 
           DESIREDCOMPLETIOND TEXT( 25 )                 , 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - ChapelSession 
CREATE TABLE CHAPELSESSION ( 
           ID                 INTEGER            NOT NULL, 
           z_DATE             DATE                       , 
           TIMEAMPM           TEXT( 2 )                  , 
           SPEAKERTOPIC       TEXT( 50 )                 , 
           SPEAKERNAME        TEXT( 50 )                 , 
           FK_ID_COLLEGETERM  INTEGER                     ) ;
 
-- Entity - Church 
CREATE TABLE CHURCH ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           SPECIALTYPE        TEXT( 1 )                  , 
           SALUTATION         TEXT( 50 )                 , 
           PHONE              TEXT( 10 )                 , 
           CODE               TEXT( 7 )                  , 
           DISTRICTCODE       TEXT( 3 )                  , 
           DENOMINATION       TEXT( 3 )                  , 
           ATTENDANCE         INTEGER                    , 
           ATTENDANCESS       INTEGER                    , 
           MEMBERSHIP         INTEGER                    , 
           z_NOTE             MEMO                       , 
           WEBSITE            TEXT( 254 )                , 
           EMAILADDRESS       TEXT( 128 )                , 
           CALLBACKDATE       DATE                       , 
           CONTACTPREFERENCE  TEXT( 20 )                 , 
           CONVERTEDKEY       TEXT( 254 )                , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_ADDRESS      INTEGER                     ) ;
 
-- Entity - ChurchPersonRole 
CREATE TABLE CHURCHPERSONROLE ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 30 )         NOT NULL, 
           FK_ID_CHURCH       INTEGER                    , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - CL_ItemEmployee 
CREATE TABLE CL_ITEMEMPLOYEE ( 
           ID                 INTEGER            NOT NULL, 
           AUTOSEQ            INTEGER                    , 
           FK_ID_EMPLOYEE     INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
-- Entity - Class 
CREATE TABLE CLASS ( 
           ID                 INTEGER            NOT NULL, 
           SECTION            TEXT( 2 )                  , 
           STATUS             TEXT( 1 )                  , 
           ENROLLMENTLIMIT    INTEGER                    , 
           NUMBEROFRESERVEDST INTEGER                    , 
           CANCELLEDREASON    TEXT( 2 )                  , 
           CANCELLEDDATE      DATE                       , 
           CREDITHOURS        DOUBLE                     , 
           PRICEPERCLASS      DOUBLE                     , 
           VARIABLECREDITFLAG TEXT( 1 )                  , 
           DIRECTEDSTUDYFLAG  TEXT( 1 )                  , 
           INDEPENDENTSTUDYFL TEXT( 1 )                  , 
           SPECIALPERMISSINFL TEXT( 1 )                  , 
           ATSCHDLNGTHRSHLDPR DOUBLE                     , 
           CLASSSTARTDATE     DATE                       , 
           CLASSENDDATE       DATE                       , 
           PASSFAILCLASS      TEXT( 1 )                  , 
           HONORSFLAG         TEXT( 1 )                  , 
           GRADESVERIFIEDFLAG TEXT( 1 )                  , 
           GRADESVERIFIEDUSRN TEXT( 50 )                 , 
           MIDTERMGRADSVRFDFL TEXT( 1 )                  , 
           MIDTRMGRDSVRFDUSRN TEXT( 50 )                 , 
           z_NOTE             MEMO                       , 
           TOTALSESSIONS      INTEGER                    , 
           HISTORCLENRLLMNTCN INTEGER                    , 
           HISTORICALWTLSTDCN INTEGER                    , 
           LS_INSTRUCTORNAME  TEXT( 12 )                 , 
           LS_COURSEID        TEXT( 254 )                , 
           COURSETITLE        TEXT( 100 )                , 
           LABFEE             DOUBLE                     , 
           DRCTDSTDYINTBYCLGF TEXT( 1 )                  , 
           FINALEXAMDATE      DATE                       , 
           FINALEXAMSTARTTIME TEXT( 25 )                 , 
           FINALEXAMENDTIME   TEXT( 25 )                 , 
           NOFINALEXAMFLAG    TEXT( 1 )                  , 
           OVERRIDEPRCPRCRDTH DOUBLE                     , 
           OVERRIDEFLATPRICE  TEXT( 1 )                  , 
           FACULTYGRADEENTRYN MEMO                       , 
           FCLTYMDTRMGRDENTRY MEMO                       , 
           FCLTYGRDENTRYALWSI TEXT( 1 )                  , 
           FCLTYHSSBMTDGRDSFL TEXT( 1 )                  , 
           FCLTYHSSBMTDMDTRMG TEXT( 1 )                  , 
           DISTRIBUTIONDATE   DATE                       , 
           DISTRIBUTEDDATE    DATE                       , 
           DISTRIBUTEDNOTE    MEMO                       , 
           NOSHOWRSTRSBMTTDFL TEXT( 1 )                  , 
           NOSHOWROSTERNOTE   MEMO                       , 
           NOSHOWROSTERVRFDFL TEXT( 1 )                  , 
           BOOKINFORMATION    TEXT( 254 )                , 
           OVERRIDECLASSTUITI DOUBLE                     , 
           FK_ID_GRADESCALE   INTEGER                    , 
           FKIDCLASSROOMSTAND INTEGER                    , 
           FK_ID_COURSETOPIC  INTEGER                    , 
           FK_ID_COHORT       INTEGER                    , 
           FK_ID_COURSE       INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER                    , 
           FK_ID_ROOM         INTEGER                    , 
           FK_ID_ROOM02       INTEGER                    , 
           FK_ID_FACULTY      INTEGER                     ) ;
 
-- Entity - ClassGradeBook 
CREATE TABLE CLASSGRADEBOOK ( 
           ID                 INTEGER            NOT NULL, 
           POINTSPERCENTTYPE  TEXT( 1 )                  , 
           TOTALPOINTS        INTEGER                    , 
           z_NOTE             MEMO                       , 
           ANNOUNCEMENT       MEMO                       , 
           FK_ID_CLASS        INTEGER            NOT NULL ) ;
 
-- Entity - ClassGradeComponent 
CREATE TABLE CLASSGRADECOMPONENT ( 
           ID                 INTEGER            NOT NULL, 
           RELATIVEWEIGHT     DOUBLE                     , 
           SCORE              DOUBLE                     , 
           GRADE              TEXT( 3 )                  , 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - ClassResource 
CREATE TABLE CLASSRESOURCE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 254 )                , 
           DUEDATE            DATE                       , 
           z_NOTE             MEMO                       , 
           FILENAME           TEXT( 254 )                , 
           DIRECTORY          TEXT( 254 )                , 
           WEBLINK            TEXT( 1 )                  , 
           FK_IDCLASSGRADEBOO INTEGER            NOT NULL ) ;
 
-- Entity - ClassRoomSession 
CREATE TABLE CLASSROOMSESSION ( 
           ID                 INTEGER            NOT NULL, 
           MEETINGDAY         INTEGER                    , 
           MEETINGDATE        DATE                       , 
           STARTTIME          TEXT( 25 )                 , 
           ENDTIME            TEXT( 25 )                 , 
           FKIDSTUDYOPTIONGRO INTEGER                    , 
           FK_ID_CLASS        INTEGER                    , 
           ATID_CLASS         INTEGER                    , 
           FKIDCLASSROOMSTAND INTEGER                     ) ;
 
-- Entity - ClassRoomStandardSchedule 
CREATE TABLE CLASSROOMSTANDARDSCHEDULE ( 
           ID                 INTEGER            NOT NULL, 
           TITLE              TEXT( 50 )                 , 
           SEQUENCENUMBER     INTEGER                     ) ;
 
-- Entity - ClassTemplate 
CREATE TABLE CLASSTEMPLATE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
-- Entity - ClearingHouseReportLog 
CREATE TABLE CLEARINGHOUSEREPORTLOG ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 254 )                , 
           COLLEGETERMREPRTPR TEXT( 1 )                  , 
           TRMDTFRWHCHRPRTWSR DATE                       , 
           z_MONTH            INTEGER                    , 
           z_YEAR             TEXT( 4 )                  , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER                     ) ;
 
-- Entity - COD_Disbursement 
CREATE TABLE COD_DISBURSEMENT ( 
           ID                 INTEGER            NOT NULL, 
           SEQUENCENUMBER     INTEGER                    , 
           AMOUNT             DOUBLE                     , 
           FKIDFINAIDAWARDDIS INTEGER            NOT NULL ) ;
 
-- Entity - Cohort 
CREATE TABLE COHORT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           STATUS             TEXT( 1 )                  , 
           ESTIMATEDSTARTDATE DATE                       , 
           ESTIMATEDYEARMONTH TEXT( 6 )                  , 
           STARTDATE          DATE                       , 
           ENDDATE            DATE                       , 
           z_NOTE             MEMO                       , 
           PRICEPERCREDITHOUR DOUBLE                     , 
           PROJCTDENRLLMNTASG INTEGER                    , 
           PRJCTDENRLMNTASBDG INTEGER                    , 
           PROJECTDENRLLMNTRV DOUBLE                     , 
           MINIMUMENROLLMENT  INTEGER                    , 
           PROJECTEDBOOKREVEN DOUBLE                     , 
           NMBRSTDNTSSTRTNGCH INTEGER                    , 
           FLATPRICE          TEXT( 1 )                  , 
           MEETINGDAYMONDAY   TEXT( 1 )                  , 
           MEETINGDAYTUESDAY  TEXT( 1 )                  , 
           MEETINGDAYWEDNESDA TEXT( 1 )                  , 
           MEETINGDAYTHURSDAY TEXT( 1 )                  , 
           MEETINGDAYFRIDAY   TEXT( 1 )                  , 
           MEETINGDAYSATURDAY TEXT( 1 )                  , 
           MEETINGTIMEMORNING TEXT( 1 )                  , 
           MEETINGTIMEAFTERNO TEXT( 1 )                  , 
           MEETINGTIMEEVENING TEXT( 1 )                  , 
           LS_COHORTID        TEXT( 9 )                  , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_STUDENT      INTEGER                    , 
           FK_ID_PROGRAM      INTEGER                    , 
           FK_IDCAMPUSLOCATIO INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL ) ;
 
-- Entity - CohortActivity 
CREATE TABLE COHORTACTIVITY ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           PREVIOUSDATE       DATE                       , 
           PREVIOUSSTARTDATE  DATE                       , 
           PREVIOUSENDDATE    DATE                       , 
           DATETIMESTAMP      TEXT( 25 )                 , 
           FK_ID_COHORT       INTEGER            NOT NULL ) ;
 
-- Entity - CohortMember 
CREATE TABLE COHORTMEMBER ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           DROPPEDDATE        DATE                       , 
           FK_ID_COHORT       INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - College 
CREATE TABLE COLLEGE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           TYPE               TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - CollegeDegree 
CREATE TABLE COLLEGEDEGREE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           CODE               TEXT( 10 )                 , 
           TRANSCRIPTDISPLAYN TEXT( 50 )                 , 
           TRNSCRPTCRDTCEU_UN TEXT( 1 )                   ) ;
 
-- Entity - CollegeTerm 
CREATE TABLE COLLEGETERM ( 
           ID                 INTEGER            NOT NULL, 
           SEMESTER           TEXT( 2 )                  , 
           YEARSEMESTER       TEXT( 20 )                 , 
           CURRENTTERMFLAG    TEXT( 1 )                  , 
           CURRENTRSDNCYTRMFL TEXT( 1 )                  , 
           OPENFORFACULTYFLAG TEXT( 1 )                  , 
           OPENFORREGISTRARFL TEXT( 1 )                  , 
           OPNFRFNLEXMSCHDLNG TEXT( 1 )                  , 
           FACULTYMIDTRMGRDFL TEXT( 1 )                  , 
           FACULTYFINALGRADFL TEXT( 1 )                  , 
           COURSESTARTDATE    DATE                       , 
           COURSEENDDATE      DATE                       , 
           RESIDENCYSTARTDATE DATE                       , 
           RESIDENCYENDDATE   DATE                       , 
           STUDENTENTRYYERMNT TEXT( 6 )                  , 
           NUMBEROFCHAPELSRQR INTEGER                    , 
           OPENFORCLASSSCHDLN TEXT( 1 )                  , 
           CURRENTFORFINANCLA TEXT( 1 )                  , 
           CURRNTFRSTDNTACCNT TEXT( 1 )                  , 
           CURRENTFREXTRNLUSR TEXT( 1 )                  , 
           FULLTIMEMINCREDITS DOUBLE                     , 
           PARTTIMEMINCREDITS DOUBLE                     , 
           HALFTIMEMINCREDITS DOUBLE                     , 
           GRADUATFLLTMMNCRDT DOUBLE                     , 
           OVERLOADMINCREDITS DOUBLE                     , 
           GRADUATPRTTMMNCRDT DOUBLE                     , 
           ADDDROPDEADLINEDAT DATE                       , 
           TRANSCRIPTTERMDSPL TEXT( 20 )                 , 
           GRADUATHLFTMMNCRDT DOUBLE                     , 
           FCLTYMTGRDENTRYOPN DATE                       , 
           FCLTYMTGRDENTRYCLS DATE                       , 
           FCLTYFGRDENTRYOPND DATE                       , 
           FCLTYFGRDENTRYCLSD DATE                       , 
           CLSRSTRVRFCTNSTRTD DATE                       , 
           CLSSRSTRVRFCTNENDD DATE                       , 
           LS_TERM            TEXT( 4 )                  , 
           FINNCLRGSTRTNSTRTD DATE                       , 
           FINANCLRGSTRTNENDD DATE                       , 
           FK_ID_COLLEGEYEAR  INTEGER                     ) ;
 
-- Entity - CollegeYear 
CREATE TABLE COLLEGEYEAR ( 
           ID                 INTEGER            NOT NULL, 
           z_YEAR             TEXT( 10 )                 , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                        ) ;
 
-- Entity - CommunicationPlan 
CREATE TABLE COMMUNICATIONPLAN ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )         NOT NULL, 
           DESCRIPTION        MEMO                       , 
           TYPE               TEXT( 30 )         NOT NULL, 
           ACTIVE             TEXT( 1 )                  , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           OVERHEADCOST       DOUBLE                     , 
           SORTORDER          INTEGER                    , 
           CONVERTEDKEY       TEXT( 254 )                , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - ContactActivity 
CREATE TABLE CONTACTACTIVITY ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 2 )          NOT NULL, 
           RESULTCODE         TEXT( 1 )                  , 
           FUNCTIONALAREA     TEXT( 50 )                 , 
           PRIVATETOAREA      TEXT( 1 )                  , 
           COMPLETEDDATETIME  TEXT( 25 )                 , 
           z_NOTE             MEMO                       , 
           EMAILSUBJECTLINE   TEXT( 254 )                , 
           USEREMAILRECIPIENT MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_EMPLOYEE     INTEGER                    , 
           FK_ID_FINAIDSOURCE INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_EVENT        INTEGER                    , 
           FK_ID_DOCUMENT     INTEGER                    , 
           FK_ID_ACTIVITY     INTEGER                    , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_SCHOOL       INTEGER                    , 
           FK_ID_CHURCH       INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           PK2_ID_PERSON      INTEGER                    , 
           FK_ID_VENDOR       INTEGER                    , 
           FK_ID_DONOR        INTEGER                    , 
           FK_ID_STUDENT      INTEGER                    , 
           PRIID_STUDENT      INTEGER                     ) ;
 
-- Entity - ContactList 
CREATE TABLE CONTACTLIST ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )          NOT NULL, 
           LISTNAME           TEXT( 50 )                 , 
           DATEGENERATED      DATE                       , 
           DATELASTGNRTDRCRRN DATE                       , 
           FINDCRITERIA       MEMO                       , 
           z_NOTE             MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           DYNAMICFLAG        TEXT( 1 )                  , 
           SAVEFINDFLAG       TEXT( 1 )                  , 
           SENTFLAG           TEXT( 1 )                  , 
           SENTBYNAME         TEXT( 50 )                 , 
           FKIDCONTACTLISTCAT INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_STOREDQUERY  INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_EVENT        INTEGER                     ) ;
 
-- Entity - ContactListCategory 
CREATE TABLE CONTACTLISTCATEGORY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )         NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - ContactListItem 
CREATE TABLE CONTACTLISTITEM ( 
           ID                 INTEGER            NOT NULL, 
           AUTOSEQ            INTEGER                    , 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_VENDOR       INTEGER                    , 
           FK_ID_STUDENT      INTEGER                     ) ;
 
-- Entity - Context 
CREATE TABLE CONTEXT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 32 )         NOT NULL, 
           z_DESC             TEXT( 254 )                , 
           FK_ID_Z_DOMAIN     INTEGER            NOT NULL ) ;
 
-- Entity - Course 
CREATE TABLE COURSE ( 
           ID                 INTEGER            NOT NULL, 
           z_NUMBER           TEXT( 10 )                 , 
           TITLE              TEXT( 100 )                , 
           LONGTITLE          MEMO                       , 
           STATUS             TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           z_NOTE             MEMO                       , 
           CREDITHOURS        DOUBLE                     , 
           UPPERDIVISIONFLAG  TEXT( 1 )                  , 
           REPEATABLEFRCRDTFL TEXT( 1 )                  , 
           VARIABLECREDITFLAG TEXT( 1 )                  , 
           DEVELOPMENTALFLAG  TEXT( 1 )                  , 
           SPECIALPERMISSINFL TEXT( 1 )                  , 
           PREREQUISITBLNOPRT TEXT( 1 )                  , 
           COREQUISITEBLNOPRT TEXT( 1 )                  , 
           MINIMUMCLASSRANKIN TEXT( 5 )                  , 
           PASSFAILFLAG       TEXT( 1 )                  , 
           GENERICCOURSEFLAG  TEXT( 1 )                  , 
           MAXCREDTSFRRPTBLCR DOUBLE                     , 
           NOFINALEXAMFLAG    TEXT( 1 )                  , 
           COURSEHOURS        DOUBLE                     , 
           HOURSTHEORY        DOUBLE                     , 
           HOURSACTIVITY      DOUBLE                     , 
           HOURSPRACTICUM     DOUBLE                     , 
           COURSETYPE         TEXT( 20 )                 , 
           SUBSECTIONTYPE     TEXT( 5 )                  , 
           COURSELABFEEFLAG   TEXT( 1 )                  , 
           INTERNSHIPFLAG     TEXT( 1 )                  , 
           FK_ID_COLLEGEYEAR  INTEGER                    , 
           FK_ID_COLLEGEYEA02 INTEGER                    , 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_COLLEGE      INTEGER            NOT NULL, 
           FK_ID_DEPARTMENT   INTEGER                     ) ;
 
-- Entity - CoursePrerequisiteGroup 
CREATE TABLE COURSEPREREQUISITEGROUP ( 
           ID                 INTEGER            NOT NULL, 
           PREREQUISITBLNOPRT TEXT( 1 )                  , 
           AUTOSEQ            INTEGER                    , 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_COURSE02     INTEGER            NOT NULL ) ;
 
-- Entity - CourseTopic 
CREATE TABLE COURSETOPIC ( 
           ID                 INTEGER            NOT NULL, 
           z_NUMBER           TEXT( 5 )                  , 
           TITLE              TEXT( 100 )                , 
           STATUS             TEXT( 1 )                  , 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
-- Entity - CourseWithinRequiredGroup 
CREATE TABLE COURSEWITHINREQUIREDGROUP ( 
           ID                 INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_REQUIREDGROU INTEGER                    , 
           FKIDREQUIREDSUBGRO INTEGER                     ) ;
 
-- Entity - CustomTransciptTerm 
CREATE TABLE CUSTOMTRANSCIPTTERM ( 
           ID                 INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
-- Entity - CustomTranscriptLine 
CREATE TABLE CUSTOMTRANSCRIPTLINE ( 
           ID                 INTEGER            NOT NULL, 
           LINETEXT           TEXT( 254 )                , 
           FKIDCUSTOMTRANSCIP INTEGER            NOT NULL ) ;
 
-- Entity - DashboardFrame 
CREATE TABLE DASHBOARDFRAME ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           TYPE               TEXT( 2 )                  , 
           OBJECTINSTANCENAME TEXT( 8 )                  , 
           DASHBOARDDISPLAYUR TEXT( 254 )                , 
           EXPANDEDDISPLAYURL TEXT( 254 )                 ) ;
 
-- Entity - DashboardFrameUser 
CREATE TABLE DASHBOARDFRAMEUSER ( 
           ID                 INTEGER            NOT NULL, 
           ACTIVEONCRRNTDSHBR TEXT( 1 )                  , 
           PRESENTATIONSRTORD INTEGER                    , 
           FK_IDDASHBOARDFRAM INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - DataEntryBatch 
CREATE TABLE DATAENTRYBATCH ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           TYPE               TEXT( 1 )                  , 
           SINGLEPRSNDPLCTNFL TEXT( 1 )                  , 
           OBJECTNAME         TEXT( 8 )                  , 
           DATECREATED        DATE                       , 
           MRGPRSNLSTNMSTRTST TEXT( 5 )                  , 
           MRGPRSNLSTNMENDSTR TEXT( 5 )                  , 
           ONLINEORMNLENTRYTY TEXT( 1 )                  , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - DegreeAuditSpecification 
CREATE TABLE DEGREEAUDITSPECIFICATION ( 
           ID                 INTEGER            NOT NULL, 
           FK_ID_DEGREETRACK  INTEGER            NOT NULL, 
           FKIDENROLLMENTORFO INTEGER            NOT NULL, 
           FK_ID_REQUIREDGROU INTEGER                    , 
           FKIDREQUIREDSUBGRO INTEGER                    , 
           FK_ID_COURSE       INTEGER                     ) ;
 
-- Entity - DegreeCandidacy 
CREATE TABLE DEGREECANDIDACY ( 
           ID                 INTEGER            NOT NULL, 
           RECEIVEDDATE       DATE                       , 
           DIPLOMAFULLNAME    TEXT( 50 )                 , 
           DIPLOMARECEIVEDDAT DATE                       , 
           DIPLOMAORDERSENTFL TEXT( 1 )                  , 
           DIPLOMAORDERSENTDA DATE                       , 
           LATESUBMISSIONFLAG TEXT( 1 )                  , 
           STUDENTHEIGHTFEET  INTEGER                    , 
           STUDENTHEIGHTINCHE INTEGER                    , 
           GOWNCUT            TEXT( 1 )                  , 
           GOWNORDERSENTFLAG  TEXT( 1 )                  , 
           GOWNORDERSENTDATE  DATE                       , 
           GRADPARTICIPATINFL TEXT( 1 )                  , 
           PETITIONTOPRTCPTST TEXT( 1 )                  , 
           FK_IDGRADUATIONDAT INTEGER                    , 
           FK_IDGRADUATIOND02 INTEGER                    , 
           FK_IDGRADUATIOND03 INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - DegreeMajor 
CREATE TABLE DEGREEMAJOR ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           DEGREECODE         TEXT( 5 )                  , 
           INACTIVEFLAG       TEXT( 1 )                  , 
           CLEARINGHOUSRPRTTY TEXT( 1 )                  , 
           CIP_CATEGORY       TEXT( 5 )                  , 
           CIP_SUBCATEGORY    TEXT( 15 )                 , 
           FK_ID_COLLEGE      INTEGER                    , 
           FK_ID_DEPARTMENT   INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - DegreeMinor 
CREATE TABLE DEGREEMINOR ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           TRANSCRIPTNAMEDSPL TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           INACTIVEFLAG       TEXT( 1 )                  , 
           DEGREECODE         TEXT( 5 )                  , 
           CIP_CATEGORY       TEXT( 5 )                  , 
           CIP_SUBCATEGORY    TEXT( 15 )                 , 
           FK_ID_COLLEGE      INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_DEPARTMENT   INTEGER                     ) ;
 
-- Entity - DegreeTrack 
CREATE TABLE DEGREETRACK ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           DEGREECODE         TEXT( 5 )                  , 
           EXCEPTIONFLAG      TEXT( 1 )                  , 
           TYPE               TEXT( 1 )                  , 
           MINIMUMCREDIT      DOUBLE                     , 
           MINIMUMGPA         DOUBLE                     , 
           STATUS             TEXT( 5 )                  , 
           TRANSCRIPTDISPLAYN TEXT( 50 )                 , 
           RGRQRSADVSRAPRVLFL TEXT( 1 )                  , 
           AUDITTOTALCREDTSTK DOUBLE                     , 
           AUDITTOTALCRDTSERN DOUBLE                     , 
           AUDITGRADUATINCRDT DOUBLE                     , 
           AUDITDEVLPMNTLCRDT DOUBLE                     , 
           AUDITENROLLEDCREDT DOUBLE                     , 
           ADTENRLLDCRDTSRPTN DOUBLE                     , 
           AUDITPRETRNSFRCRDT DOUBLE                     , 
           AUDITMINMMCRDTSRQR DOUBLE                     , 
           AUDITGPA           DOUBLE                     , 
           AUDITMAJORGPA      DOUBLE                     , 
           AUDITLOCALCOLLEGGP DOUBLE                     , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           FK_ID_DEGREEMINOR  INTEGER                    , 
           FK_ID_DEPARTMENT   INTEGER                    , 
           FK_ID_DEGREEMAJOR  INTEGER                    , 
           FK_ID_COLLEGEDEGRE INTEGER                    , 
           FK_ID_COLLEGEYEAR  INTEGER                     ) ;
 
-- Entity - DegreeTrackRequiredGroup 
CREATE TABLE DEGREETRACKREQUIREDGROUP ( 
           SEQUENCENUMBER     INTEGER                    , 
           FK_ID_REQUIREDGROU INTEGER            NOT NULL, 
           FK_ID_DEGREETRACK  INTEGER            NOT NULL ) ;
 
-- Entity - DegreeYearData 
CREATE TABLE DEGREEYEARDATA ( 
           ID                 INTEGER            NOT NULL, 
           FROMYEAR           TEXT( 4 )                  , 
           THROUGHYEAR        TEXT( 4 )                  , 
           MINIMUMCREDITSREQR DOUBLE                     , 
           FK_ID_COLLEGEDEGRE INTEGER            NOT NULL ) ;
 
-- Entity - DeleteTrace 
CREATE TABLE DELETETRACE ( 
           ID                 INTEGER            NOT NULL, 
           ROOTENTITYNAME     TEXT( 32 )                 , 
           STOREDOI           LONGBINARY                 , 
           OBJECTNAME         TEXT( 8 )          NOT NULL, 
           CREATEDDATETIME    TEXT( 25 )                 , 
           DELETEDDATETIME    TEXT( 25 )                 , 
           USERNAME           TEXT( 50 )                 , 
           INSTANCEID         INTEGER                    , 
           INSTANCENAME       TEXT( 50 )                  ) ;
 
-- Entity - Demographics 
CREATE TABLE DEMOGRAPHICS ( 
           ID                 INTEGER            NOT NULL, 
           PLACEOFBIRTHCITY   TEXT( 50 )                 , 
           PLACEOFBRTHSTTPRVN TEXT( 2 )                  , 
           PLACEOFBIRTHCOUNTR TEXT( 3 )                  , 
           CITIZENSHIPCODE    TEXT( 2 )                  , 
           PRIMARYLANGUAGE    TEXT( 2 )                  , 
           ALIENREGNUMBER     TEXT( 10 )                 , 
           IPEDS_ETHNICITY    TEXT( 254 )                , 
           ETHNICITY          TEXT( 2 )                  , 
           NEWETHNICITYRACE   TEXT( 10 )                 , 
           NATIONOFCITIZENSHI TEXT( 10 )                 , 
           VISACLASSIFICATION TEXT( 20 )                 , 
           SPECLACCMMDTNSRQST TEXT( 1 )                  , 
           FATHERDECEASED     TEXT( 1 )                  , 
           MOTHERDECEASED     TEXT( 1 )                  , 
           PARENTSDIVORCED    TEXT( 1 )                  , 
           PARENTSSEPARATED   TEXT( 1 )                  , 
           FATHERREMARRIED    TEXT( 1 )                  , 
           MOTHERREMARRIED    TEXT( 1 )                  , 
           MOTHERCOLLEGEGRAD  TEXT( 1 )                  , 
           FATHERCOLLEGEGRAD  TEXT( 1 )                  , 
           PARENTISALUMNI     TEXT( 1 )                  , 
           FATHERISALUM       TEXT( 1 )                  , 
           MOTHERISALUM       TEXT( 1 )                  , 
           SIBLINGISALUM      TEXT( 1 )                  , 
           SIBLINGSATTEND     TEXT( 1 )                  , 
           PARENTISPASTOR     TEXT( 1 )                  , 
           PARENTISMISSIONARY TEXT( 1 )                  , 
           FATHERINFLLTMMNSTR TEXT( 1 )                  , 
           MOTHERINFLLTMMNSTR TEXT( 1 )                  , 
           SPECIALCIRCUMSTANC TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           ACADEMICDIVISION   TEXT( 2 )                  , 
           ANNIVERSARYDATE    DATE                       , 
           ETHNICITYHISPANIC  TEXT( 1 )                  , 
           ETHNICITYAMERINDIA TEXT( 1 )                  , 
           ETHNICITYASIAN     TEXT( 1 )                  , 
           ETHNICITYBLACK     TEXT( 1 )                  , 
           ETHNICITYPACIFIC   TEXT( 1 )                  , 
           ETHNICITYWHITE     TEXT( 1 )                  , 
           ETHNICITYOPTIONGIV TEXT( 1 )                  , 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
-- Entity - Department 
CREATE TABLE DEPARTMENT ( 
           ID                 INTEGER            NOT NULL, 
           DEPARTMENTCODE     TEXT( 254 )                , 
           NAME               TEXT( 50 )                 , 
           FACULTYSHRDADVSRFL TEXT( 1 )                  , 
           INACTIVE           TEXT( 1 )                  , 
           PHONEEXTENSION     TEXT( 4 )                  , 
           USEDBYREGISTRARFLA TEXT( 1 )                  , 
           USEDBYHUMANRSRCSFL TEXT( 1 )                  , 
           FK_ID_DIVISION     INTEGER                    , 
           FKIDACADEMICDIVISI INTEGER                    , 
           FK_ID_FACULTY      INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - DepartmentContractDistribution 
CREATE TABLE DEPARTMENTCONTRACTDISTRIBUTION ( 
           ID                 INTEGER            NOT NULL, 
           DISTRIBUTIONTYPE   TEXT( 15 )                 , 
           DISTRIBUTIONPERCEN DOUBLE                     , 
           DISTRIBUTIONAMOUNT DOUBLE                     , 
           FK_IDYEARLYCONTRAC INTEGER            NOT NULL, 
           FK_ID_GLCOSTCENTER INTEGER                    , 
           FK_ID_GLACCOUNTS   INTEGER                     ) ;
 
-- Entity - Deposit 
CREATE TABLE DEPOSIT ( 
           ID                 INTEGER            NOT NULL, 
           DEPOSITDATE        DATE               NOT NULL, 
           TOTALAMOUNT        DOUBLE             NOT NULL, 
           POSTEDDATE         DATE                       , 
           REFERENCE          TEXT( 254 )                , 
           z_NOTE             MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                  ) ;
 
-- Entity - DepositGrouping 
CREATE TABLE DEPOSITGROUPING ( 
           ID                 INTEGER            NOT NULL, 
           BANKSTATUS         TEXT( 1 )                  , 
           REFERENCEID        TEXT( 254 )                , 
           DATEOFDEPOSIT      DATE                       , 
           DEPOSITMETHOD      TEXT( 3 )                  , 
           AMOUNT             DOUBLE                     , 
           FKIDFINANCIALACCOU INTEGER                     ) ;
 
-- Entity - DevProject 
CREATE TABLE DEVPROJECT ( 
           ID                 INTEGER            NOT NULL, 
           PROJECTNAME        TEXT( 254 )                , 
           CODE               TEXT( 254 )                , 
           ACTIVE             TEXT( 1 )                  , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                        ) ;
 
-- Entity - DirectoryRestrictions 
CREATE TABLE DIRECTORYRESTRICTIONS ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 1 )                  , 
           HOMEPHONE          TEXT( 1 )                  , 
           HOMEADDRESS        TEXT( 1 )                  , 
           EMAILADDRESS       TEXT( 1 )                  , 
           PICTURE            TEXT( 1 )                  , 
           DISPLAYHOMEPHONE   TEXT( 1 )                  , 
           DISPLAYMOBILEPHONE TEXT( 1 )                  , 
           DISPLAYHOMEADDRESS TEXT( 1 )                  , 
           DISPLAYPICTURE     TEXT( 1 )                  , 
           DISPLAYHOMEMLADDRS TEXT( 1 )                  , 
           DISPLAYCAMPUSPHONE TEXT( 1 )                  , 
           DISPLAYCAMPUSROOM  TEXT( 1 )                  , 
           CLASSHOMEPHONE     TEXT( 1 )                  , 
           CLASSMOBILEPHONE   TEXT( 1 )                  , 
           CLASSHOMEADDRESS   TEXT( 1 )                  , 
           CLASSPICTURE       TEXT( 1 )                  , 
           CLASSHOMEEMALADDRS TEXT( 1 )                  , 
           CLASSCAMPUSPHONE   TEXT( 1 )                  , 
           CLASSCAMPUSROOM    TEXT( 1 )                  , 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
-- Entity - Division 
CREATE TABLE DIVISION ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        TEXT( 254 )                , 
           FK_ID_EMPLOYEE     INTEGER                     ) ;
 
-- Entity - Document 
CREATE TABLE DOCUMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           DOCTYPE            TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           OBJECTNAME         TEXT( 8 )                  , 
           FORMATOVERRDOBJCTN TEXT( 8 )                  , 
           EXTERNALREPORTNAME TEXT( 8 )                  , 
           EXTERNALRPRTOBJCTN TEXT( 8 )                  , 
           TEMPLATEFILENAME   MEMO                       , 
           TEXTTEMPLATEFILENA MEMO                       , 
           OUTPUTFILENAME     MEMO                       , 
           TEXTOUTPUTFILENAME MEMO                       , 
           FUNCTIONALAREANAME TEXT( 30 )                 , 
           GENRTCNTCTACTVTYFL TEXT( 1 )                  , 
           GNRTCNTCTEMLCNTNTF TEXT( 1 )                  , 
           EMAILSUBJECTTITLE  TEXT( 254 )                , 
           EMAILSUBJCTTTLNMFL TEXT( 1 )                  , 
           EMAILATTACHMENTFLN MEMO                       , 
           MAILTYPE           TEXT( 1 )                  , 
           COUNSELORSELCTBLFL TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FKIDDOCUMENTCATEGO INTEGER                     ) ;
 
-- Entity - DocumentCategory 
CREATE TABLE DOCUMENTCATEGORY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )         NOT NULL ) ;
 
-- Entity - DocumentToSend 
CREATE TABLE DOCUMENTTOSEND ( 
           ID                 INTEGER            NOT NULL, 
           DATETOSEND         DATE                       , 
           FK_ID_STAFF        INTEGER                    , 
           FK_ID_DOCUMENT     INTEGER            NOT NULL, 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
-- Entity - Domain 
CREATE TABLE z_DOMAIN ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 32 )         NOT NULL, 
           z_DESC             TEXT( 254 )                , 
           SYSTEMREQUIRED     TEXT( 1 )                  , 
           REQUIRESPRELOADFLA TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - DomainValue 
CREATE TABLE DOMAINVALUE ( 
           DOMAINVALUE_TOKEN  INTEGER            NOT NULL, 
           INTERNALINTEGERVAL INTEGER                    , 
           INTERNALSTRINGVALU TEXT( 64 )         NOT NULL, 
           SYSTEMREQUIRED     TEXT( 1 )                  , 
           EXTERNALDESCRIPTIO TEXT( 64 )                 , 
           AUTOSEQ            INTEGER                    , 
           AUTOSEQ02          INTEGER                    , 
           FK_ID_CONTEXT      INTEGER                    , 
           FK_ID_Z_DOMAIN     INTEGER            NOT NULL ) ;
 
-- Entity - Donation 
CREATE TABLE DONATION ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 10 )                 , 
           DESCRIPTION        MEMO                       , 
           RECEIVEDDATE       DATE                       , 
           RECEIPTISSUEDDATE  DATE                       , 
           POSTEDDATE         TEXT( 25 )                 , 
           FISCALYEAR         TEXT( 4 )                  , 
           AMOUNTRECEIVED     DOUBLE                     , 
           INCENTIVEVALUE     DOUBLE                     , 
           AMOUNT             DOUBLE                     , 
           ANONYMOUS          TEXT( 1 )                  , 
           VOIDEDDONATATION   TEXT( 1 )                  , 
           VOIDEDDATE         DATE                       , 
           NONTAXDEDUCTIBLE   TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           DRAFTNUMBER        TEXT( 254 )                , 
           ONLINERECEIPTNUMBE TEXT( 254 )                , 
           SCANFILENAME       TEXT( 254 )                , 
           CONVERTEDSTRING    MEMO                       , 
           CONVERTEDKEY       TEXT( 9 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_EVENT        INTEGER                    , 
           FK_ID_DONOR        INTEGER            NOT NULL, 
           FK_ID_DEPOSIT      INTEGER                     ) ;
 
-- Entity - Donor 
CREATE TABLE DONOR ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           STATUS             TEXT( 3 )                  , 
           z_NOTE             MEMO                       , 
           EMPLOYERMATCH      TEXT( 1 )                  , 
           EMPLOYERPOTENTLMTC DOUBLE                     , 
           SALARYRANGE        TEXT( 2 )                  , 
           ESTIMATEDNETWORTH  DOUBLE                     , 
           PRIMARYSOURCECODE  TEXT( 5 )                  , 
           SECONDARYSOURCECOD TEXT( 5 )                  , 
           PRIORHISTORICALGVN DOUBLE                     , 
           PRIORHISTRCLSFTGVN DOUBLE                     , 
           PRIORHISTORCLMTCHN DOUBLE                     , 
           MEMBERSHIPRENEWALD DATE                       , 
           LIFETIMENUMBROFGFT INTEGER                    , 
           LIFETIMETOTAL      DOUBLE                     , 
           LIFETIMERESTRICTED DOUBLE                     , 
           LIFETIMEUNRESTRICT DOUBLE                     , 
           LIFETIMECAPITAL    DOUBLE                     , 
           LIFETIMEMATCH      DOUBLE                     , 
           LIFETIMEINKIND     DOUBLE                     , 
           LIFETIMESOFTCRDTTT DOUBLE                     , 
           LIFTMSFTCRDTRSTRCT DOUBLE                     , 
           LFTMSFTCRDTUNRSTRC DOUBLE                     , 
           LIFETIMESFTCRDTCPT DOUBLE                     , 
           LIFETIMESFTCRDTMTC DOUBLE                     , 
           LIFETIMSFTCRDTINKN DOUBLE                     , 
           LARGESTDONATION    DOUBLE                     , 
           LARGESTDONATIONDAT DATE                       , 
           FIRSTDONATION      DOUBLE                     , 
           FIRSTDONATIONDATE  DATE                       , 
           CLUBLEVEL          TEXT( 254 )                , 
           ENC_SOCIETYTYPE    TEXT( 5 )                  , 
           MOSTRECENTDONATIND DATE                       , 
           FISCALYEARLASTDONT TEXT( 4 )                  , 
           CONVERTEDKEY       TEXT( 254 )                , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_CHURCH       INTEGER                    , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_FUND         INTEGER                     ) ;
 
-- Entity - DonorAnnualSummary 
CREATE TABLE DONORANNUALSUMMARY ( 
           ID                 INTEGER            NOT NULL, 
           z_YEAR             TEXT( 4 )                  , 
           NUMBEROFDONATIONS  INTEGER                    , 
           LARGESTDONATION    DOUBLE                     , 
           LARGESTDONATIONDAT DATE                       , 
           RESTRICTEDTOTAL    DOUBLE                     , 
           UNRESTRICTEDTOTAL  DOUBLE                     , 
           CAPITALTOTAL       DOUBLE                     , 
           MATCHTOTAL         DOUBLE                     , 
           INKINDTOTAL        DOUBLE                     , 
           TOTAL              DOUBLE                     , 
           SOFTCREDITTOTAL    DOUBLE                     , 
           SOFTCREDITRESTRICT DOUBLE                     , 
           SOFTCREDITUNRSTRCT DOUBLE                     , 
           SOFTCREDITCAPITAL  DOUBLE                     , 
           SOFTCREDITMATCH    DOUBLE                     , 
           SOFTCREDITINKIND   DOUBLE                     , 
           FK_ID_DONOR        INTEGER            NOT NULL ) ;
 
-- Entity - DonorContactType 
CREATE TABLE DONORCONTACTTYPE ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           FK_ID_FUND         INTEGER            NOT NULL, 
           FK_ID_DONOR        INTEGER            NOT NULL ) ;
 
-- Entity - Emailback 
CREATE TABLE EMAILBACK ( 
           ID                 INTEGER            NOT NULL, 
           z_DATE             DATE                       , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - Employee 
CREATE TABLE EMPLOYEE ( 
           ID                 INTEGER            NOT NULL, 
           FACULTYTENUREFLAG  TEXT( 1 )                  , 
           EMAILADDRESS       TEXT( 128 )                , 
           STATUS             TEXT( 1 )                  , 
           EMPLOYEETYPE       TEXT( 1 )                  , 
           CONTACTDATE        DATE                       , 
           z_NOTE             MEMO                       , 
           PAYROLLCODE        TEXT( 2 )                  , 
           DATEOFHIRE         DATE                       , 
           DATEOFTERMINATION  DATE                       , 
           CURRENTCLASSIFICAT TEXT( 2 )                  , 
           WORKSTUDYFLAG      TEXT( 1 )                  , 
           EMERGENCYCONTACT   TEXT( 50 )                 , 
           EMERGENCYPHONENO   TEXT( 10 )                 , 
           EMERGENCYRELATINSH TEXT( 50 )                 , 
           FACULTYTENURE      TEXT( 1 )                  , 
           FK_IDYEARLYCONTRAC INTEGER                    , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - EmployeeClassCompensation 
CREATE TABLE EMPLOYEECLASSCOMPENSATION ( 
           ID                 INTEGER            NOT NULL, 
           HR_EMPLOYEECLSSFTY TEXT( 1 )                  , 
           AMOUNT             DOUBLE                     , 
           FK_ID_EMPLOYEE     INTEGER            NOT NULL, 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_GLCOSTCENTER INTEGER                    , 
           FK_ID_GLACCOUNTS   INTEGER                     ) ;
 
-- Entity - EmploymentPeriod 
CREATE TABLE EMPLOYMENTPERIOD ( 
           ID                 INTEGER            NOT NULL, 
           EFFECTIVEDATE      DATE                       , 
           TERMINATIONDATE    DATE                       , 
           EMPLOYEETYPE       TEXT( 1 )                  , 
           TERMINATIONREASON  TEXT( 10 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_EMPLOYEE     INTEGER            NOT NULL ) ;
 
-- Entity - EnrollmentHistory 
CREATE TABLE ENROLLMENTHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           ACTIVEFLAG         TEXT( 1 )                  , 
           STUDENTTYPE        TEXT( 254 )                , 
           STUDENTWITHDRAWLRS TEXT( 5 )                  , 
           STUDENTWITHDRAWLSR TEXT( 10 )                 , 
           PROSPECTWITHDRWLRS TEXT( 10 )                 , 
           WITHDRAWALCLASSFCT TEXT( 5 )                  , 
           PROSPECTBEGINDATE  DATE                       , 
           STUDENTBEGINDATE   DATE                       , 
           TERMINATIONDATE    DATE                       , 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
-- Entity - EnrollmentModification 
CREATE TABLE ENROLLMENTMODIFICATION ( 
           ID                 INTEGER            NOT NULL, 
           COURSENUMBER       TEXT( 10 )                 , 
           YEARSEMESTER       TEXT( 20 )                 , 
           NEWSTATUS          TEXT( 1 )                  , 
           NEWFINALGRADE      TEXT( 3 )                  , 
           NEWTAKINGCLASSTYPE TEXT( 1 )                  , 
           NEWCREDITHOURS     DOUBLE                     , 
           NEWFOREIGNCLASSTIT TEXT( 100 )                , 
           NEWMANLRPTFRCRDTFL TEXT( 1 )                  , 
           ORIGINALSTATUS     TEXT( 1 )                  , 
           ORIGINALFINALGRADE TEXT( 3 )                  , 
           ORIGINALTKNGCLSSTY TEXT( 1 )                  , 
           ORIGINALCREDITHOUR DOUBLE                     , 
           ORIGINALFRGNCLSSTT TEXT( 100 )                , 
           ORIGMNLRPTFRCRDTFL TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           REASONFORGRADECHAN TEXT( 10 )                 , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - EnrollmentOrForeignEquivalent 
CREATE TABLE ENROLLMENTORFOREIGNEQUIVALENT ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 1 )                  , 
           FINALGRADE         TEXT( 3 )                  , 
           MIDTERMGRADE       TEXT( 3 )                  , 
           RESERVEDSEATFLAG   TEXT( 1 )                  , 
           TAKINGCLASSTYPE    TEXT( 1 )                  , 
           CREDITHOURS        DOUBLE                     , 
           CEU                DOUBLE                     , 
           FOREIGNCLASSNAME   TEXT( 100 )                , 
           WAIVERREASON       TEXT( 10 )                 , 
           CREATIONDATETIME   TEXT( 25 )                 , 
           LS_ENROLLMENTID    TEXT( 254 )                , 
           DROPPEDDATE        DATE                       , 
           PRICEPERCREDITHOUR DOUBLE                     , 
           FLATPRICE          TEXT( 1 )                  , 
           GRADUNDRGRDOVRRDFL TEXT( 1 )                  , 
           MANLLYRPTDRGSTRTNI INTEGER                    , 
           MNLLYRPTNGRGSTRTNI INTEGER                    , 
           OVERRIDINGGRADPNTV DOUBLE                     , 
           TRANSFERDENIEDREAS TEXT( 2 )                  , 
           PREREQSNOTMET      TEXT( 1 )                  , 
           FACULTYGRADEENTRYN MEMO                       , 
           FACULTYGRDBKENTRYN MEMO                       , 
           FCLTYGRDBKEXTRCRDT DOUBLE                     , 
           FACULTYENTERDFNLGR TEXT( 3 )                  , 
           FACLTYENTRDMDTRMGR TEXT( 3 )                  , 
           FACULTYMIDTERMGRDN MEMO                       , 
           NOSHOWFLAG         TEXT( 1 )                  , 
           NOSHOWNUMBERABSENC INTEGER                    , 
           NOSHOWCOMMENT      MEMO                       , 
           AUTOSEQ            INTEGER                    , 
           AUTOSEQ02          INTEGER                    , 
           FK_ID_TRANSFERGROU INTEGER                    , 
           FK2_ID_COLLEGETERM INTEGER                    , 
           FKIDLEGACYTRANSCRI INTEGER                    , 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_FOREIGNCOURS INTEGER                    , 
           FK_ID_COLLEGETERM  INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_CLASS        INTEGER                    , 
           FK_ID_COURSE02     INTEGER                     ) ;
 
-- Entity - Event 
CREATE TABLE EVENT ( 
           ID                 INTEGER            NOT NULL, 
           PUBLICPRIVATEINDCT TEXT( 1 )                  , 
           FUNCTIONALAREA     TEXT( 30 )                 , 
           TITLE              TEXT( 254 )                , 
           CODE               TEXT( 30 )                 , 
           SORTORDER          INTEGER                    , 
           DESCRIPTION        MEMO                       , 
           EVENTTYPE          TEXT( 1 )                  , 
           EVENTCOST          DOUBLE                     , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           BEGINTIME          TEXT( 25 )                 , 
           ENDTIME            TEXT( 25 )                 , 
           CALENDAREVENTFLAG  TEXT( 1 )                  , 
           MEETINGEVENTFLAG   TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_CALENDARGROU INTEGER                    , 
           FK_ID_FOLDER       INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FKIDCOMMUNICATIONP INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_EVENT        INTEGER                     ) ;
 
-- Entity - ExamHistory 
CREATE TABLE EXAMHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           EXAMTYPE           TEXT( 10 )         NOT NULL, 
           AREA               TEXT( 50 )                 , 
           DATERECEIVED       DATE                       , 
           DATETAKEN          DATE                       , 
           VERBAL             DOUBLE                     , 
           MATHQUANTITATIVE   DOUBLE                     , 
           READINGCOMPREHENSI DOUBLE                     , 
           WRITING            DOUBLE                     , 
           SCIENCE            DOUBLE                     , 
           TOTALCOMPOSITE     DOUBLE                     , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
-- Entity - ExtraCurricularActivity 
CREATE TABLE EXTRACURRICULARACTIVITY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           INSTITUTIONLORGNZT TEXT( 1 )                  , 
           TYPE               TEXT( 4 )                  , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           FKIDEXTRACURRICULA INTEGER            NOT NULL, 
           FK_ID_COLLEGEYEAR  INTEGER                     ) ;
 
-- Entity - ExtraCurricularActivityGroup 
CREATE TABLE EXTRACURRICULARACTIVITYGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           INSTITUTIONLORGNZT TEXT( 1 )                  , 
           TYPE               TEXT( 4 )                   ) ;
 
-- Entity - ExtraCurricularAward 
CREATE TABLE EXTRACURRICULARAWARD ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        TEXT( 254 )                , 
           FKIDEXTRACURRICULA INTEGER                     ) ;
 
-- Entity - ExtraCurricularRole 
CREATE TABLE EXTRACURRICULARROLE ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           PARTICIPATIONLEVEL TEXT( 2 )                  , 
           NAME               TEXT( 50 )                 , 
           FKIDEXTRACURRICULA INTEGER                    , 
           FKIDEXTRACURRICU02 INTEGER                     ) ;
 
-- Entity - ExtraCurricularStandardRole 
CREATE TABLE EXTRACURRICULARSTANDARDROLE ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 4 )                   ) ;
 
-- Entity - FA_AutoAwardEligibility 
CREATE TABLE FA_AUTOAWARDELIGIBILITY ( 
           ID                 INTEGER            NOT NULL, 
           AWARDAMOUNT        DOUBLE                     , 
           FALLDISBURSEMNTAMN DOUBLE                     , 
           SPRINGDISBRSMNTAMN DOUBLE                     , 
           AWARDPRIORITY      INTEGER                    , 
           SELECTEDTOAWARDFLA TEXT( 1 )                  , 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGEYEAR  INTEGER            NOT NULL ) ;
 
-- Entity - FA_AutoAwardGenerateMessage 
CREATE TABLE FA_AUTOAWARDGENERATEMESSAGE ( 
           ID                 INTEGER            NOT NULL, 
           SUMMARYMESSAGES    MEMO                       , 
           DETAILMESSAGES     MEMO                       , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
-- Entity - FA_AutoAwardVariable 
CREATE TABLE FA_AUTOAWARDVARIABLE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           AMOUNT             DOUBLE                     , 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL ) ;
 
-- Entity - FA_AwardMatrix 
CREATE TABLE FA_AWARDMATRIX ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL, 
           FK_ID_COLLEGEYEAR  INTEGER            NOT NULL ) ;
 
-- Entity - FA_AwardMatrixCell 
CREATE TABLE FA_AWARDMATRIXCELL ( 
           ID                 INTEGER            NOT NULL, 
           AMOUNTTOAWARD      DOUBLE                     , 
           PELL_COA           DOUBLE                     , 
           PELL_EFC           DOUBLE                     , 
           GNRLAWRDAMNTDSCRPT TEXT( 254 )                , 
           ADDITIONVALUE      DOUBLE                     , 
           CELLNUMBER         INTEGER                    , 
           AUTOSEQ            INTEGER                    , 
           FK_ID_FAAWARDMATRI INTEGER            NOT NULL ) ;
 
-- Entity - FA_CL_ImportExportFileHistory 
CREATE TABLE FA_CL_IMPORTEXPORTFILEHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           COMMONLINERECORDTY TEXT( 2 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           COD_COMMNLNOBJCTBL LONGBINARY                  ) ;
 
-- Entity - FA_LoanImportExportHistory 
CREATE TABLE FA_LOANIMPORTEXPORTHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           COMMONLINERECORDTY TEXT( 2 )                  , 
           COMMONLINEUNQIDNTF TEXT( 17 )                 , 
           COMMONLINESEQNCNMB TEXT( 2 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           COD_COMMNLNOBJCTBL LONGBINARY                 , 
           FKIDFACLIMPORTEXPO INTEGER            NOT NULL, 
           FK_ID_FINAIDLOAN   INTEGER            NOT NULL ) ;
 
-- Entity - Faculty 
CREATE TABLE FACULTY ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 1 )                  , 
           TYPE               TEXT( 1 )                  , 
           SHORTNAME          TEXT( 30 )                 , 
           ADMINISTRTVFCLTYFL TEXT( 1 )                  , 
           DEPARTMENTHEADFLAG TEXT( 1 )                  , 
           DIVISIONCHAIRFLAG  TEXT( 1 )                  , 
           ADJUNCTFLAG        TEXT( 1 )                  , 
           PARTTIMEFLAG       TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - FAISIR 
CREATE TABLE FAISIR ( 
           ID                 INTEGER            NOT NULL, 
           CURRENTISIR_MNLLYS TEXT( 1 )                  , 
           DOCUMENTID         TEXT( 20 )                 , 
           CREATEDDATETIME    TEXT( 20 )                 , 
           YEARINDICATOR      TEXT( 4 )                  , 
           ORIGINALSSN        TEXT( 9 )                  , 
           ORIGINALNAMEID     TEXT( 2 )                  , 
           TRANSACTIONNUMBER  TEXT( 2 )                  , 
           SSN                TEXT( 9 )                  , 
           DRIVERSLICENSENUMB TEXT( 20 )                 , 
           DRIVERSLICENSESTTC TEXT( 2 )                  , 
           BIRTHDATE          DATE                       , 
           LASTNAME           TEXT( 16 )                 , 
           FIRSTNAME          TEXT( 12 )                 , 
           MIDDLEINITIAL      TEXT( 1 )                  , 
           ADDRESSLINE        TEXT( 35 )                 , 
           CITY               TEXT( 16 )                 , 
           STATE              TEXT( 2 )                  , 
           POSTALCODE         TEXT( 5 )                  , 
           PHONENUMBER        TEXT( 10 )                 , 
           EMAILADDRESS       TEXT( 50 )                 , 
           CITIZENSHIPSTATUSC TEXT( 1 )                  , 
           ALIENREGISTRATNNMB TEXT( 9 )                  , 
           MARITALSTATUSCODE  TEXT( 1 )                  , 
           MARITALSTATUSDATE  TEXT( 6 )                  , 
           RESIDENCYSTTPRVNCC TEXT( 2 )                  , 
           LEGALRESIDENTBYCTF TEXT( 1 )                  , 
           RESIDENCYESTBLSHDD TEXT( 6 )                  , 
           MEMBERSINFAMILY    TEXT( 2 )                  , 
           NUMBERINCOLLEGE    TEXT( 1 )                  , 
           TAXRETURNSTATUSCOD TEXT( 1 )                  , 
           TAXFORMTYPECODE    TEXT( 1 )                  , 
           FORM1040AEZELIGBLC TEXT( 1 )                  , 
           ADJUSTEDGROSSINCOM DOUBLE                     , 
           INCOMETAXPAID      DOUBLE                     , 
           EXEMPTIONSCLAIMED  DOUBLE                     , 
           STUDENTEARNEDINCOM DOUBLE                     , 
           SPOUSEEARNEDINCOME DOUBLE                     , 
           WORKSHEETA         DOUBLE                     , 
           WORKSHEETB         DOUBLE                     , 
           WORKSHEETC         DOUBLE                     , 
           CASHSAVINGSCHECKIN DOUBLE                     , 
           INVESTMENTNETWORTH DOUBLE                     , 
           BUSINESSFARMNETWRT DOUBLE                     , 
           NUMBEROFMONTHS     TEXT( 2 )                  , 
           MONTHLYBENEFITAMON DOUBLE                     , 
           SELECTIVESERVICEMA TEXT( 1 )                  , 
           SELECTIVESERVCRGST TEXT( 1 )                  , 
           DEGREEORCERTIFICTC TEXT( 1 )                  , 
           STUDENTLEVELCODE   TEXT( 1 )                  , 
           ENROLLMENTSTATUSCO TEXT( 1 )                  , 
           HIGHSCHOOLDPLMORGE TEXT( 1 )                  , 
           FIRSTBACHELRSBYCTF TEXT( 1 )                  , 
           INTERESTEDINSTDNTL TEXT( 1 )                  , 
           INTERESTEDINWRKSTD TEXT( 1 )                  , 
           DRUGCONVICTIONCODE TEXT( 1 )                  , 
           BORNBEFORCTFFINDCT TEXT( 1 )                  , 
           MASTRSORDCTRTINDCT TEXT( 1 )                  , 
           MARRIEDINDICATOR   TEXT( 1 )                  , 
           SUPPRTSCHLDRNINDCT TEXT( 1 )                  , 
           LEGALDEPNDNTSINDCT TEXT( 1 )                  , 
           ORPHNWRDOFCRTINDCT TEXT( 1 )                  , 
           VETERANINDICATOR   TEXT( 1 )                  , 
           DEPENDENCYOVERRIDC TEXT( 1 )                  , 
           EFCADJUSTMENTCODE  TEXT( 1 )                  , 
           FEDERALSCHOOLCODE  TEXT( 6 )                  , 
           SIGNATURESOURCECOD TEXT( 1 )                  , 
           SIGNATUREDATE      TEXT( 8 )                  , 
           PREPARERSSN        TEXT( 9 )                  , 
           EMPLYRSIDNTFCTNNMB TEXT( 9 )                  , 
           SIGNATUREINDICATOR TEXT( 1 )                  , 
           FAAADJUSTMENT      TEXT( 1 )                  , 
           TRANSACTNDTSRCTYPC TEXT( 2 )                  , 
           TRANSACTIONRECEPTD DATE                       , 
           APPLICATIONRECEPTD DATE                       , 
           APPLICATIONSOURCEC TEXT( 2 )                  , 
           TRANSACTIONPRCSSDD DATE                       , 
           ADDRESSCHANGECODE  TEXT( 1 )                  , 
           CORRECTINAPPLDAGNS TEXT( 2 )                  , 
           DATAREQUESTNUMBER  TEXT( 4 )                  , 
           PERSONLIDNTFRCHNGC TEXT( 1 )                  , 
           ETIDESTINATIONNUMB TEXT( 7 )                  , 
           STDNTSLNMSSNCHNGFL MEMO                       , 
           VERFCTNSLCTNCHNGFL TEXT( 1 )                  , 
           REJECTSTATUSCHNGFL TEXT( 1 )                  , 
           INTRSTDWRKSTDYORST MEMO                       , 
           ACTIVEDUTYARMEDFRC TEXT( 1 )                  , 
           STDNTSCRTYINCMBNFT TEXT( 1 )                  , 
           STUDENTFOODSTMBNFT TEXT( 1 )                  , 
           STUDENTLUNCHBENEFT TEXT( 1 )                  , 
           STUDENTTANFBENEFIT TEXT( 1 )                  , 
           STUDENTWICBENEFITS TEXT( 1 )                  , 
           TEACHERCOURSEWORK  TEXT( 1 )                  , 
           STUDENTEDUCATNLCRD DOUBLE                     , 
           STUDENTSCHLDSPPRTP DOUBLE                     , 
           STDNTSNDBSDEMPLYMN DOUBLE                     , 
           STDNTSGRNTSCHLRSHP DOUBLE                     , 
           STUDENTSCOMBATPAY  DOUBLE                     , 
           STUDENTSPENSINPYMN DOUBLE                     , 
           STUDENTSIRAPAYMENT DOUBLE                     , 
           STDNTSCHLDSPPRTRCV DOUBLE                     , 
           STUDENTSINTERSTINC DOUBLE                     , 
           STUDENTSIRADISTRBT DOUBLE                     , 
           STUDENTSUNTAXEDPNS DOUBLE                     , 
           STDNTSMLTRYCLRGYAL DOUBLE                     , 
           STDNTSVTRNSNNDCTNB DOUBLE                     , 
           STDNTSOTHRUNTXDINC DOUBLE                     , 
           STDNTSOTHRNNRPRTDM DOUBLE                     , 
           EMANCIPATEDMINOR   TEXT( 1 )                  , 
           LEGALGUARDIANSHIP  TEXT( 1 )                  , 
           UNCMPNDYTHBYDSTRCT TEXT( 1 )                  , 
           UNACCOMPANDYTHBYHU TEXT( 1 )                  , 
           ATRISKOFHOMELESSNS TEXT( 1 )                  , 
           STUDNTSPSDSLCTDWRK TEXT( 1 )                  , 
           SPECIALCRCMSTNCSFL TEXT( 1 )                  , 
           STUDENTCOOPEARNING DOUBLE                     , 
           STUDENTIRSREQUSTFL TEXT( 2 )                  , 
           HIGHSCHOOLNAME     TEXT( 254 )                , 
           HIGHSCHOOLCITY     TEXT( 254 )                , 
           HIGHSCHOOLSTATE    TEXT( 254 )                , 
           HIGHSCHOOLCODE     TEXT( 254 )                , 
           HIGHSCHOOLFLAG     TEXT( 1 )                  , 
           FK_ID_COLLEGEYEAR  INTEGER                    , 
           FK_ID_FINAIDPROFIL INTEGER                    , 
           FK_ID_STUDENT      INTEGER                    , 
           FK_ID_PROSPECT     INTEGER                     ) ;
 
-- Entity - FAISIRAcg 
CREATE TABLE FAISIRACG ( 
           ID                 INTEGER            NOT NULL, 
           SEQUENCENUMBER     INTEGER                    , 
           SCHOOLOPEID        TEXT( 254 )                , 
           TRANSACTIONNUMBER  TEXT( 254 )                , 
           LASTUPDATEDATE     TEXT( 254 )                , 
           PAIDTODATEAMOUNT   DOUBLE                     , 
           AWARDAMOUNT        DOUBLE                     , 
           SCHOOLYEAR         TEXT( 254 )                , 
           ELIGIBILITYCODE    TEXT( 254 )                , 
           PROGRAMCODE        TEXT( 254 )                , 
           SEQUENCECODE       TEXT( 254 )                , 
           SCHEDULEDAWARDAMON DOUBLE                     , 
           PERCENTELIGBLTYAMN DOUBLE                     , 
           AWARDYEAR          TEXT( 254 )                , 
           TTLPRCNTELGBLTYAMN DOUBLE                     , 
           FK_ID_FAISIR       INTEGER            NOT NULL ) ;
 
-- Entity - FAISIRAcknowledgementCommentCode 
CREATE TABLE FAISIRACKNOWLEDGEMENTCOMMENTCO ( 
           ACKNOWLDGMNTCMMNTC TEXT( 20 )         NOT NULL, 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIRAssumption 
CREATE TABLE FAISIRASSUMPTION ( 
           ID                 INTEGER            NOT NULL, 
           FIELDVALUE         TEXT( 50 )                 , 
           FIELDNAME          TEXT( 50 )                 , 
           ASSUMEDCITIZENSHIP TEXT( 1 )                  , 
           ASSMDSTDNTSMRTLSTT TEXT( 1 )                  , 
           ASSUMEDSTUDENTSAGI DOUBLE                     , 
           ASSUMEDSTDNTSUSTXP DOUBLE                     , 
           ASMDSTDNTSINCMFRMW DOUBLE                     , 
           ASSMDSPSSINCMFRMWR DOUBLE                     , 
           ASSUMEDSTUDENTSTTL DOUBLE                     , 
           ASSUMEDDATEFBRTHPR TEXT( 1 )                  , 
           ASSMDSTDNTISMRDRMR TEXT( 1 )                  , 
           ASSUMDHVCHLDRNSPPR TEXT( 1 )                  , 
           ASMDHVOTHRLGLDPNDN TEXT( 1 )                  , 
           ASSUMEDVASTATUS    TEXT( 1 )                  , 
           ASSUMEDSTUDNTSNFML TEXT( 2 )                  , 
           ASSUMEDSTUDNTSNCLL TEXT( 1 )                  , 
           ASSUMDPRNTSMRTLSTT TEXT( 1 )                  , 
           ASMDFTHRSSTPFTHRSS TEXT( 9 )                  , 
           ASMDMTHRSSTPMTHRSS TEXT( 9 )                  , 
           ASSUMEDPARENTSNFML TEXT( 2 )                  , 
           ASSUMEDPARENTSNCLL TEXT( 1 )                  , 
           ASSUMEDPARENTSAGI  DOUBLE                     , 
           ASSUMEDPARNTSUSTXP DOUBLE                     , 
           ASMDFTHRSINCMFRMWR DOUBLE                     , 
           ASMDMTHRSINCMFRMWR DOUBLE                     , 
           ASSUMEDPRNTSTTLFRM DOUBLE                     , 
           ASMDHMLSYSCHLDTRMN TEXT( 1 )                  , 
           ASSUMEDHOMLSSYTHHU TEXT( 1 )                  , 
           ASSMDATRSKOFHMLSSN TEXT( 1 )                  , 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIRAssumptionOverride 
CREATE TABLE FAISIRASSUMPTIONOVERRIDE ( 
           ASSUMPTIONOVERRIDC TEXT( 1 )          NOT NULL, 
           FK_ID_FAISIR       INTEGER                     ) ;
 
-- Entity - FAISIRChange 
CREATE TABLE FAISIRCHANGE ( 
           ID                 INTEGER            NOT NULL, 
           FROMTRANSACTIONNMB TEXT( 254 )                , 
           TOTRANSACTIONNUMBE TEXT( 254 )                , 
           FIELDNAME          TEXT( 254 )                , 
           FIELDNUMBER        INTEGER                    , 
           FROMVALUE          TEXT( 254 )                , 
           TOVALUE            TEXT( 254 )                , 
           FK_ID_FAISIR       INTEGER                     ) ;
 
-- Entity - FAISIRCommentCode 
CREATE TABLE FAISIRCOMMENTCODE ( 
           COMMENTCODE        TEXT( 20 )         NOT NULL, 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIRCorrectionCode 
CREATE TABLE FAISIRCORRECTIONCODE ( 
           FIELDNAME          TEXT( 20 )         NOT NULL, 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIRDataVerifyCodes 
CREATE TABLE FAISIRDATAVERIFYCODES ( 
           FIELDNAME          TEXT( 20 )         NOT NULL, 
           VERIFYCODE         TEXT( 20 )                 , 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIRDomain 
CREATE TABLE FAISIRDOMAIN ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 32 )                 , 
           z_YEAR             TEXT( 10 )                 , 
           YEARINDICATOR      TEXT( 4 )                  , 
           SHORTTITLE         TEXT( 254 )                , 
           z_DESC             TEXT( 254 )                 ) ;
 
-- Entity - FAISIRDomainValue 
CREATE TABLE FAISIRDOMAINVALUE ( 
           ID                 INTEGER            NOT NULL, 
           INTERNALSTRINGVALU TEXT( 64 )                 , 
           EXTERNALDESCRIPTIO MEMO                       , 
           FK_ID_FAISIRDOMAIN INTEGER            NOT NULL ) ;
 
-- Entity - FAISIREFCInformation 
CREATE TABLE FAISIREFCINFORMATION ( 
           ID                 INTEGER            NOT NULL, 
           ZEROEFCINDICATOR   TEXT( 1 )                  , 
           SIMPLIFIEDINDICATO TEXT( 1 )                  , 
           EFCCHANGECODE      TEXT( 1 )                  , 
           PEFC               DOUBLE                     , 
           PFORMULATYPECODE   TEXT( 1 )                  , 
           PALTERNATEMONTH1   DOUBLE                     , 
           PALTERNATEMONTH2   DOUBLE                     , 
           PALTERNATEMONTH3   DOUBLE                     , 
           PALTERNATEMONTH4   DOUBLE                     , 
           PALTERNATEMONTH5   DOUBLE                     , 
           PALTERNATEMONTH6   DOUBLE                     , 
           PALTERNATEMONTH7   DOUBLE                     , 
           PALTERNATEMONTH8   DOUBLE                     , 
           PALTERNATEMONTH10  DOUBLE                     , 
           PALTERNATEMONTH11  DOUBLE                     , 
           PALTERNATEMONTH12  DOUBLE                     , 
           PTOTALINCOME       DOUBLE                     , 
           PTOTALINCOMEALLWNC DOUBLE                     , 
           PSTATETAXALLOWANCE DOUBLE                     , 
           PEMPLOYMENTALLOWAN DOUBLE                     , 
           PINCOMEPRTCTNALLWN DOUBLE                     , 
           PAVAILABLEINCOME   DOUBLE                     , 
           PAVAILBLINCMCNTRBT DOUBLE                     , 
           PDISCRETIONRYNTWRT DOUBLE                     , 
           PNETWORTH          DOUBLE                     , 
           PASSETPROTCTNALLWN DOUBLE                     , 
           PPARENTASSETCNTRBT DOUBLE                     , 
           PADJUSTEDAVALBLINC DOUBLE                     , 
           PTOTALSTUDNTCNTRBT DOUBLE                     , 
           PTOTALPARENTCNTRBT DOUBLE                     , 
           PPARENTCONTRIBUTIO DOUBLE                     , 
           PSTUDENTTOTALINCOM DOUBLE                     , 
           PSTUDENTINCOMALLWN DOUBLE                     , 
           PSTUDENTINCMCNTRBT DOUBLE                     , 
           PSTDNTDSCRTNRYNTWR DOUBLE                     , 
           PSTUDENTASSTCNTRBT DOUBLE                     , 
           PFISAPTOTALINCOME  DOUBLE                     , 
           SEFC               DOUBLE                     , 
           SFORMULATYPECODE   TEXT( 1 )                  , 
           SALTERNATEMONTH1   DOUBLE                     , 
           SALTERNATEMONTH2   DOUBLE                     , 
           SALTERNATEMONTH3   DOUBLE                     , 
           SALTERNATEMONTH4   DOUBLE                     , 
           SALTERNATEMONTH5   DOUBLE                     , 
           SALTERNATEMONTH6   DOUBLE                     , 
           SALTERNATEMONTH7   DOUBLE                     , 
           SALTERNATEMONTH8   DOUBLE                     , 
           SALTERNATEMONTH10  DOUBLE                     , 
           SALTERNATEMONTH11  DOUBLE                     , 
           SALTERNATEMONTH12  DOUBLE                     , 
           STOTALINCOME       DOUBLE                     , 
           STOTALINCOMEALLWNC DOUBLE                     , 
           SSTATETAXALLOWANCE DOUBLE                     , 
           SEMPLOYMENTALLOWAN DOUBLE                     , 
           SINCOMEPRTCTNALLWN DOUBLE                     , 
           SAVAILABLEINCOME   DOUBLE                     , 
           SAVAILBLINCMCNTRBT DOUBLE                     , 
           SDISCRETIONRYNTWRT DOUBLE                     , 
           SNETWORTH          DOUBLE                     , 
           SASSETPROTCTNALLWN DOUBLE                     , 
           SPARENTASSETCNTRBT DOUBLE                     , 
           SADJUSTEDAVALBLINC DOUBLE                     , 
           STOTALSTUDNTCNTRBT DOUBLE                     , 
           STOTALPARENTCNTRBT DOUBLE                     , 
           SPARENTCONTRIBUTIO DOUBLE                     , 
           SSTUDENTTOTALINCOM DOUBLE                     , 
           SSTUDENTINCOMALLWN DOUBLE                     , 
           SSTUDENTINCMCNTRBT DOUBLE                     , 
           SSTDNTDSCRTNRYNTWR DOUBLE                     , 
           SSTUDENTASSTCNTRBT DOUBLE                     , 
           SFISAPTOTALINCOME  DOUBLE                     , 
           SIGNATUREREJECTEFC DOUBLE                     , 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIREligibility 
CREATE TABLE FAISIRELIGIBILITY ( 
           ID                 INTEGER            NOT NULL, 
           NSLDSMATCHCODE     TEXT( 1 )                  , 
           NSLDSPOSTSCREENNGC TEXT( 6 )                  , 
           SELECTIVESRVCMTCHC TEXT( 1 )                  , 
           SELCTVSRVCRGSTRTNC TEXT( 1 )                  , 
           DHSMATCHCODE       TEXT( 1 )                  , 
           DHSSECNDRYCNFRMTNC TEXT( 1 )                  , 
           DHSVERIFICATIONNMB TEXT( 15 )                 , 
           SSNMATCHCODE       TEXT( 1 )                  , 
           SAACITIZENSHIPFLAG TEXT( 1 )                  , 
           FTHRSTPFTHRSSNMTCH TEXT( 1 )                  , 
           MTHRSSTPMTHRSSNMTC TEXT( 1 )                  , 
           VAMATCHCODE        TEXT( 1 )                  , 
           SARCINDICATOR      TEXT( 20 )                 , 
           SARC               TEXT( 1 )                  , 
           PROCESSEDRECRDTYPC TEXT( 1 )                  , 
           SYSTEMGENERATEDCOD TEXT( 1 )                  , 
           CORRECTIONSOURCECO TEXT( 1 )                  , 
           CORRECTNTRNSCTNNMB TEXT( 2 )                  , 
           REPROCESSEDREASONC TEXT( 2 )                  , 
           ESCHOOLPOSITION    TEXT( 1 )                  , 
           EDESTINATIONNUMBER TEXT( 7 )                  , 
           ETRANSACTIONCODE   TEXT( 1 )                  , 
           COMPUTENUMBER      TEXT( 3 )                  , 
           VERIFICATINTRCKNGC TEXT( 4 )                  , 
           MULTISCHOOLCODEFLG TEXT( 6 )                  , 
           VERIFICATIONSLCTDC TEXT( 1 )                  , 
           DUPLICATESSNINDICT TEXT( 1 )                  , 
           SARCCHANGEINDICATO TEXT( 1 )                  , 
           CPSPUSHEDISIRINDCT TEXT( 1 )                  , 
           DEPENDENCYSTATUSCO TEXT( 1 )                  , 
           PELLELIGIBLTYINDCT TEXT( 1 )                  , 
           GRADUATEINDICATOR  TEXT( 1 )                  , 
           STUDENTTXFLNGSTTSC TEXT( 1 )                  , 
           PARENTTAXFLNGSTTSC TEXT( 1 )                  , 
           FAFSADATAVERIFYFLG TEXT( 120 )                , 
           REJECTREASONCODES  TEXT( 14 )                 , 
           CORRECTIONFLAGS    TEXT( 120 )                , 
           HIGHLIGHTFLAGS     TEXT( 120 )                , 
           COMMENTCODES       TEXT( 60 )                 , 
           STUDENTSTOTALBYCPS DOUBLE                     , 
           STUDNTSUNTXDINCMTT DOUBLE                     , 
           PARENTSTOTALBYCPS  DOUBLE                     , 
           PARENTSUNTXDINCMTT DOUBLE                     , 
           DODMATCHFLAG       TEXT( 1 )                  , 
           DODPARENTDATEOFDET DATE                       , 
           FK_ID_FAISIR       INTEGER                     ) ;
 
-- Entity - FAISIRFinAidHistory 
CREATE TABLE FAISIRFINAIDHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           MATCHRESULTSCODE   TEXT( 1 )                  , 
           NSLDSTRANSACTINNMB TEXT( 2 )                  , 
           PELLOVERPAYMENTSTT TEXT( 1 )                  , 
           PELLSCHOOLOPEID    TEXT( 8 )                  , 
           SEOGOVERPAYMENTSTT TEXT( 1 )                  , 
           SEOGSCHOOLOPEID    TEXT( 8 )                  , 
           PERKINSOVRPYMNTSTT TEXT( 1 )                  , 
           PERKINSSCHOLMRTHNO TEXT( 8 )                  , 
           LOANDEFAULTEDINDCT TEXT( 1 )                  , 
           LOANDISCHARGEDCODE TEXT( 1 )                  , 
           STSFCTRYPYMNTARNGM TEXT( 1 )                  , 
           ACTIVBNKRPTCYINDCT TEXT( 1 )                  , 
           LOANDFLTDCHNGINDCT TEXT( 1 )                  , 
           LNDSCHRGDCHNGINDCT TEXT( 1 )                  , 
           PYMNTARNGMNTSCHNGI TEXT( 1 )                  , 
           ACTVBNKRPTCYCHNGIN TEXT( 1 )                  , 
           OVERPYMNTCHNGINDCT TEXT( 1 )                  , 
           AGGREGTLNCHNGINDCT TEXT( 1 )                  , 
           PERKINSLNCHNGINDCT TEXT( 1 )                  , 
           PELLPYMNTCHNGINDCT TEXT( 1 )                  , 
           ADDITIONALPLLINDCT TEXT( 1 )                  , 
           ADDITIONALLONINDCT TEXT( 1 )                  , 
           DIRECTLNPRMSSRYNTC TEXT( 1 )                  , 
           PLUSPROMISSORYNOTC TEXT( 1 )                  , 
           PERKINSPRINCIPLBLN DOUBLE                     , 
           PERKNSCRRNTYRLNAMN DOUBLE                     , 
           AGGSUBSUMLOANLIMTC TEXT( 1 )                  , 
           AGSBSMOTSTNDNGPRNC DOUBLE                     , 
           AGSBSMPNDNGDSBRSMN DOUBLE                     , 
           AGGSUBSUMTOTAL     DOUBLE                     , 
           AGUNSMOTSTNDNGPRNC DOUBLE                     , 
           AGUNSMPNDNGDSBRSMN DOUBLE                     , 
           AGGUNSUMTOTAL      DOUBLE                     , 
           AGGCOMSUMLOANLIMTC TEXT( 1 )                  , 
           AGCMSMOTSTNDNGPRNC DOUBLE                     , 
           AGCMSMPNDNGDSBRSMN DOUBLE                     , 
           AGGCOMSUMTOTAL     DOUBLE                     , 
           UNLCOTSTNDNGPRNCPL DOUBLE                     , 
           UNALLOCTOTAL       DOUBLE                     , 
           ACGOVERPAYMENTFLAG MEMO                       , 
           ACGOVERPAYMENTCNTC MEMO                       , 
           SMARTOVERPAYMENTFL MEMO                       , 
           SMARTOVERPYMNTCNTC MEMO                       , 
           ACGPAYMNTCHNGINDCT TEXT( 254 )                , 
           ACGLOANCHANGEINDCT TEXT( 254 )                , 
           ADDITIONALACGINDCT TEXT( 254 )                , 
           ADDITINLSMARTINDCT TEXT( 254 )                , 
           PLUSDRCTPRMSSRYNTC MEMO                       , 
           FRAUDLOANFLAG      TEXT( 1 )                  , 
           FRAUDLOANCHANGEFLA TEXT( 1 )                  , 
           UNDERGRADSUBLOANFL TEXT( 1 )                  , 
           UNDERGRADCMBNDLNFL TEXT( 1 )                  , 
           OVERPAYMENTFLAG    MEMO                       , 
           OVERPAYMENTCONTACT MEMO                       , 
           LOANCONVERSIONFLAG TEXT( 1 )                  , 
           LOANTOTAL          DOUBLE                     , 
           AGGREGTDSBRSMNTAMN DOUBLE                     , 
           AGRGTGRDTDSBRSMNTA DOUBLE                     , 
           LOANCONVERSNCHNGFL TEXT( 1 )                  , 
           CHANGEFLAG         TEXT( 1 )                  , 
           ADDITIONALCHANGEFL TEXT( 1 )                  , 
           LOANPRINCIPALBALAN DOUBLE                     , 
           IRQAFGHNSRVCOVRPYM MEMO                       , 
           IRQAFGHNSRVCOVRP02 TEXT( 1 )                  , 
           FK_ID_FAISIR       INTEGER                     ) ;
 
-- Entity - FAISIRHighlightFields 
CREATE TABLE FAISIRHIGHLIGHTFIELDS ( 
           FIELDNAME          TEXT( 20 )         NOT NULL, 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIRImportLog 
CREATE TABLE FAISIRIMPORTLOG ( 
           ID                 INTEGER            NOT NULL, 
           FILENAME           TEXT( 254 )                , 
           IMPORTDATE         DATE                        ) ;
 
-- Entity - FAISIRLoan 
CREATE TABLE FAISIRLOAN ( 
           SEQUENCENUMBER     TEXT( 2 )          NOT NULL, 
           LOANTYPECODE       TEXT( 1 )                  , 
           CHANGEDINDICATOR   TEXT( 1 )                  , 
           PROGRAMCODE        TEXT( 2 )                  , 
           NETAMOUNT          DOUBLE                     , 
           STATUSCODE         TEXT( 2 )                  , 
           STATUSDATE         TEXT( 8 )                  , 
           OUTSTNDNGPRNCPLBLN DOUBLE                     , 
           OTSTNDNGPRNCPLBLNC TEXT( 8 )                  , 
           FINANCIALAWARDBGND TEXT( 8 )                  , 
           FINANCIALAWARDENDD TEXT( 8 )                  , 
           GUARANTORAGENCY    TEXT( 3 )                  , 
           CONTACTTYPECODE    TEXT( 3 )                  , 
           SCHOOLOPEID        TEXT( 8 )                  , 
           CONTACTCODE        TEXT( 8 )                  , 
           STUDENTLEVELCODE   TEXT( 3 )                  , 
           ADDITIONLUNSBSDZDC TEXT( 1 )                  , 
           CAPTLZDINTRSTINDCT TEXT( 6 )                  , 
           LASTDISBURSEMNTAMN DOUBLE                     , 
           LASTDISBURSEMENTDA TEXT( 8 )                  , 
           FKIDFAISIRFINAIDHI INTEGER                     ) ;
 
-- Entity - FAISIRParent 
CREATE TABLE FAISIRPARENT ( 
           FATHERSTEPFATHERSS TEXT( 9 )                  , 
           FATHRSSTPFTHRBRTHD TEXT( 8 )                  , 
           FTHRSSTPFTHRFRSTIN TEXT( 1 )                  , 
           FATHERSSTPFTHRLSTN TEXT( 16 )                 , 
           FATHEREDUCATINLVLC TEXT( 1 )                  , 
           MOTHERSTEPMOTHERSS TEXT( 9 )                  , 
           MOTHERSTPMTHRBRTHD TEXT( 8 )                  , 
           MTHRSTPMTHRFRSTINT TEXT( 1 )                  , 
           MOTHERSTEPMTHRLSTN TEXT( 16 )                 , 
           MOTHEREDUCATINLVLC TEXT( 1 )                  , 
           EMAILADDRESS       TEXT( 128 )                , 
           PARENTMARITALSTTSC TEXT( 1 )                  , 
           MARITALSTATUSDATE  TEXT( 6 )                  , 
           RESIDENCYSTTPRVNCC TEXT( 2 )                  , 
           LEGALRESIDENTBYCTF TEXT( 1 )                  , 
           RESIDENCYESTBLSHDD TEXT( 6 )                  , 
           MEMBERSINFAMILY    TEXT( 2 )                  , 
           NUMBERINCOLLEGE    TEXT( 1 )                  , 
           PARENTTAXRTRNSTTSC TEXT( 1 )                  , 
           PARENTTAXFORMTYPEC TEXT( 1 )                  , 
           PRNTFRM1040AEZELGB TEXT( 1 )                  , 
           ADJUSTEDGROSSINCOM DOUBLE                     , 
           INCOMETAXPAID      DOUBLE                     , 
           EXEMPTIONSCLAIMED  TEXT( 2 )                  , 
           FATHERSEARNEDINCOM DOUBLE                     , 
           MOTHERSEARNEDINCOM DOUBLE                     , 
           WORKSHEETA         DOUBLE                     , 
           WORKSHEETB         DOUBLE                     , 
           WORKSHEETC         DOUBLE                     , 
           CASHSAVINGSCHECKIN DOUBLE                     , 
           INVESTMENTNETWORTH DOUBLE                     , 
           BUSINESSFARMNETWRT DOUBLE                     , 
           PARNTSCRTYINCMBNFT TEXT( 1 )                  , 
           PARENTFOODSTAMBNFT TEXT( 1 )                  , 
           PARENTLUNCHBENEFIT TEXT( 1 )                  , 
           PARENTTANFBENEFITS TEXT( 1 )                  , 
           PARENTWICBENEFITS  TEXT( 1 )                  , 
           PARENTDISLOCATDWRK TEXT( 1 )                  , 
           PARENTSEDUCTNLCRDT DOUBLE                     , 
           PARENTSCHILDSPPRTP DOUBLE                     , 
           PARNTSNDBSDEMPLYMN DOUBLE                     , 
           PRNTSGRNTSCHLRSHPA DOUBLE                     , 
           PARENTSCOMBATPAY   DOUBLE                     , 
           PARENTSPENSIONPYMN DOUBLE                     , 
           PARENTSIRAPAYMENTS DOUBLE                     , 
           PARNTSCHLDSPPRTRCV DOUBLE                     , 
           PARENTSINTERESTINC DOUBLE                     , 
           PARENTSIRADISTRIBT DOUBLE                     , 
           PARENTSUNTAXEDPENS DOUBLE                     , 
           PRNTSMLTRYCLRGYALW DOUBLE                     , 
           PRNTSVTRNSNNDCTNBN DOUBLE                     , 
           PARNTSOTHRUNTXDINC DOUBLE                     , 
           PARENTCOOPEARNINGS DOUBLE                     , 
           PARENTIRSREQUESTFL TEXT( 2 )                  , 
           FK_ID_FAISIR       INTEGER            NOT NULL ) ;
 
-- Entity - FAISIRPell 
CREATE TABLE FAISIRPELL ( 
           SEQUENCENUMBER     TEXT( 2 )          NOT NULL, 
           VERIFICATIONCODE   TEXT( 3 )                  , 
           EFC                DOUBLE                     , 
           SCHOOLOPEID        TEXT( 8 )                  , 
           NSLDSTRANSACTINNMB TEXT( 2 )                  , 
           LASTDATEUPDATED    TEXT( 1 )                  , 
           SCHEDULEDPELLGRANT DOUBLE                     , 
           AWARDAMOUNTPAID    DOUBLE                     , 
           TOTALELIGIBILITYUS DOUBLE                     , 
           FINANCIALAWARDAMON DOUBLE                     , 
           ADDTNLELGBLTYINDCT TEXT( 1 )                  , 
           FKIDFAISIRFINAIDHI INTEGER                     ) ;
 
-- Entity - FAISIRRejectOverride 
CREATE TABLE FAISIRREJECTOVERRIDE ( 
           REJECTOVERRIDECODE TEXT( 1 )          NOT NULL, 
           FK_ID_FAISIR       INTEGER                     ) ;
 
-- Entity - FAISIRRejectReason 
CREATE TABLE FAISIRREJECTREASON ( 
           REJECTCODE         TEXT( 6 )          NOT NULL, 
           FKIDFAISIRELIGIBIL INTEGER                     ) ;
 
-- Entity - FAISIRSchool 
CREATE TABLE FAISIRSCHOOL ( 
           SCHOOLNUMBER       TEXT( 1 )          NOT NULL, 
           FEDERALSCHOOLCODE  TEXT( 6 )          NOT NULL, 
           HOUSINGCODE        TEXT( 1 )                  , 
           FK_ID_FAISIR       INTEGER            NOT NULL ) ;
 
-- Entity - FAISIRSchoolTrans 
CREATE TABLE FAISIRSCHOOLTRANS ( 
           SCHOOLNUMBER       TEXT( 1 )          NOT NULL, 
           ETRANSACTIONCODE   TEXT( 2 )                  , 
           FK_ID_FAISIR       INTEGER                     ) ;
 
-- Entity - FAISIRSMart 
CREATE TABLE FAISIRSMART ( 
           ID                 INTEGER            NOT NULL, 
           SEQUENCENUMBER     INTEGER                    , 
           SCHOOLOPEID        TEXT( 254 )                , 
           TRANSACTIONNUMBER  TEXT( 254 )                , 
           LASTUPDATEDATE     TEXT( 254 )                , 
           PAIDTODATEAMOUNT   DOUBLE                     , 
           AWARDAMOUNT        DOUBLE                     , 
           SCHOOLYEAR         TEXT( 254 )                , 
           INSTRUCTIONALCODE  TEXT( 254 )                , 
           SEQUENCECODE       TEXT( 254 )                , 
           SCHEDULEDAWARDAMON DOUBLE                     , 
           PERCENTELIGBLTYAMN DOUBLE                     , 
           AWARDYEAR          TEXT( 254 )                , 
           TOTLPCNTELGBLTYAMN DOUBLE                     , 
           FK_ID_FAISIR       INTEGER            NOT NULL ) ;
 
-- Entity - FAISIRTeach 
CREATE TABLE FAISIRTEACH ( 
           ID                 INTEGER            NOT NULL, 
           SEQUENCENUMBER     TEXT( 2 )                  , 
           SCHOOLOPEID        TEXT( 254 )                , 
           TRANSACTIONNUMBER  TEXT( 254 )                , 
           LASTUPDATEDATE     TEXT( 254 )                , 
           PAIDTODATEAMOUNT   DOUBLE                     , 
           AWARDAMOUNT        DOUBLE                     , 
           SCHOOLYEAR         TEXT( 254 )                , 
           SEQUENCECODE       TEXT( 254 )                , 
           SCHEDULEDAWARDAMON DOUBLE                     , 
           AWARDYEAR          TEXT( 254 )                , 
           LOANCONVERSIONFLAG TEXT( 254 )                , 
           FK_ID_FAISIR       INTEGER            NOT NULL ) ;
 
-- Entity - FinAidAdmin 
CREATE TABLE FINAIDADMIN ( 
           ID                 INTEGER            NOT NULL, 
           DISBURSEMNTPRDSPRY INTEGER                    , 
           FULLTIMEMINCREDITS DOUBLE                     , 
           PARTTIMEMINCREDITS DOUBLE                     , 
           THREEQURTRTMMNCRDT DOUBLE                     , 
           HALFTIMEMINCREDITS DOUBLE                     , 
           ONEQUARTERTMMNCRDT DOUBLE                     , 
           GRADUATFLLTMMNCRDT DOUBLE                     , 
           FULLTIMECALCULATED TEXT( 1 )                  , 
           GRADUATPRTTMMNCRDT DOUBLE                     , 
           CURRENTFORFINANCLA TEXT( 1 )                  , 
           GRADUATHLFTMMNCRDT DOUBLE                     , 
           CURRENTFREXTRNLUSR TEXT( 1 )                  , 
           THIRDTERMSTARTDATE DATE                       , 
           THIRDTERMENDDATE   DATE                       , 
           FK_ID_COLLEGEYEAR  INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - FinAidAnnualBudgeted 
CREATE TABLE FINAIDANNUALBUDGETED ( 
           AMOUNT             DOUBLE                     , 
           FK_ID_FINAIDSOURCE INTEGER                    , 
           FK_ID_FINAIDADMIN  INTEGER                     ) ;
 
-- Entity - FinAidAwardAssigned 
CREATE TABLE FINAIDAWARDASSIGNED ( 
           ID                 INTEGER            NOT NULL, 
           AWARDTYPE          TEXT( 10 )                 , 
           AWARDSTATUS        TEXT( 5 )                  , 
           DATEOFFERED        DATE                       , 
           AMOUNTOFFERED      DOUBLE                     , 
           ORIGINALAMOUNTOFFR DOUBLE                     , 
           DATEACCEPTED       DATE                       , 
           AMOUNT             DOUBLE                     , 
           AMOUNTTOOFFSETEFC  DOUBLE                     , 
           AMOUNTELIGIBLE     DOUBLE                     , 
           AWARDREVISEDFLAG   TEXT( 1 )                  , 
           CERTIFICATIONCOMPL DATE                       , 
           LOANDISBURSEMNTNMB INTEGER                    , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           AMOUNTCANCELED     DOUBLE                     , 
           AMOUNTREFUNDED     DOUBLE                     , 
           z_NOTE             MEMO                       , 
           FK_ID_FINAIDLOAN   INTEGER                    , 
           FK_ID_FINAIDPROFIL INTEGER                    , 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL ) ;
 
-- Entity - FinAidAwardDisbursement 
CREATE TABLE FINAIDAWARDDISBURSEMENT ( 
           ID                 INTEGER            NOT NULL, 
           REVISIONTYPE       TEXT( 10 )                 , 
           AMOUNTEXPECTED     DOUBLE                     , 
           ORIGINALAMONTEXPCT DOUBLE                     , 
           AMOUNT             DOUBLE                     , 
           DISBURSEMENTDATE   DATE                       , 
           APPLIEDTOACCOUNT   TEXT( 1 )                  , 
           APPLIEDTOACCOUNTDA DATE                       , 
           APPROVEDDATE       DATE                       , 
           z_NOTE             MEMO                       , 
           CL_COD_SEQUENCENMB INTEGER                    , 
           CLDRCTDSBRSMNTINDC TEXT( 1 )                  , 
           CL_HOLDRELEASINDCT TEXT( 1 )                  , 
           CLR_ORIGINATIONFEE DOUBLE                     , 
           CLR_GUARANTEEFEE   DOUBLE                     , 
           CLR_ORIGINATIONFSP DOUBLE                     , 
           CLR_GUARANTEEFEESP DOUBLE                     , 
           CLCODNTDSBRSMNTAMN DOUBLE                     , 
           CLR_DISBRSMNTSTTSC TEXT( 254 )                , 
           COD_RELEASEINDICAT TEXT( 1 )                  , 
           CODFRSTDSBRSMNTIND TEXT( 254 )                , 
           COD_DISBURSMNTFAMN DOUBLE                     , 
           COD_INTERESTRBTAMN DOUBLE                     , 
           faDisbID           INTEGER                    , 
           SEQUENCENUMBER     INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FKIDFINAIDAWARDDIS INTEGER                    , 
           FKIDFINAIDAWARDASS INTEGER                    , 
           FKIDFINAIDAWARDPER INTEGER                     ) ;
 
-- Entity - FinAidAwardDisbursementHistory 
CREATE TABLE FINAIDAWARDDISBURSEMENTHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           REVISIONTYPE       TEXT( 10 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           AMOUNTEXPECTED     DOUBLE                     , 
           AMOUNT             DOUBLE                     , 
           DISBURSEMENTDATE   DATE                       , 
           FKIDFINAIDAWARDDIS INTEGER                    , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - FinAidAwardPeriod 
CREATE TABLE FINAIDAWARDPERIOD ( 
           ID                 INTEGER            NOT NULL, 
           PERIODDESIGNATOR   TEXT( 254 )                , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           DEFAULTDISBURSMNTD DATE                       , 
           AWARDEDFULLPRTTMFL TEXT( 5 )                  , 
           AWARDEDCLASSIFICAT TEXT( 5 )                  , 
           FK_ID_FINAIDPROFIL INTEGER                    , 
           FK_ID_FINAIDADMIN  INTEGER                     ) ;
 
-- Entity - FinAidCalcLookupColumn 
CREATE TABLE FINAIDCALCLOOKUPCOLUMN ( 
           ID                 INTEGER            NOT NULL, 
           QUALVIEWNAME       TEXT( 254 )                , 
           QUALENTITYNAME     TEXT( 254 )                , 
           QUALATTRIBUTENAME  TEXT( 254 )                , 
           QUALATTRIBUTETYPE  TEXT( 1 )                  , 
           QUALOPERATOR       TEXT( 10 )                 , 
           QUALSTRINGVALUE    TEXT( 254 )                , 
           MINATTRIBUTEFORAWR DOUBLE                     , 
           MAXATTRIBUTEFORAWR DOUBLE                     , 
           AWARDAMOUNT        DOUBLE                     , 
           MINIMUMAWARDAMOUNT DOUBLE                     , 
           USEAMOUNTASMULTIPL TEXT( 1 )                  , 
           FKIDFINAIDCALCLOOK INTEGER            NOT NULL ) ;
 
-- Entity - FinAidCalcLookupRow 
CREATE TABLE FINAIDCALCLOOKUPROW ( 
           ID                 INTEGER            NOT NULL, 
           QUALVIEWNAME       TEXT( 254 )                , 
           QUALENTITYNAME     TEXT( 254 )                , 
           QUALATTRIBUTENAME  TEXT( 254 )                , 
           QUALATTRIBUTETYPE  TEXT( 1 )                  , 
           QUALOPERATOR       TEXT( 10 )                 , 
           QUALSTRINGVALUE    TEXT( 254 )                , 
           MINATTRIBUTEFORAWR DOUBLE                     , 
           MAXATTRIBUTEFORAWR DOUBLE                     , 
           AWARDAMOUNT        DOUBLE                     , 
           MINIMUMAWARDAMOUNT DOUBLE                     , 
           USEAMOUNTASMULTIPL TEXT( 1 )                  , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_FINAIDRULESE INTEGER                     ) ;
 
-- Entity - FinAidCOA 
CREATE TABLE FINAIDCOA ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 254 )                , 
           DEFAULTCOA         TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_FINAIDRULESE INTEGER                     ) ;
 
-- Entity - FinAidCOAItem 
CREATE TABLE FINAIDCOAITEM ( 
           ID                 INTEGER            NOT NULL, 
           SEQUENCE           INTEGER                    , 
           DESCRIPTION        TEXT( 254 )                , 
           COAITEMTYPE        TEXT( 20 )                 , 
           FIXEDREVENUEAMOUNT DOUBLE                     , 
           INSTITUTIONALCSTFL TEXT( 1 )                  , 
           DEFAULTREVENUEAMON DOUBLE                     , 
           USERULE            TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - FinAidCOAItemAssigned 
CREATE TABLE FINAIDCOAITEMASSIGNED ( 
           ID                 INTEGER            NOT NULL, 
           REVENUEAMOUNT      DOUBLE                     , 
           FIRSTTERMREVENUAMN DOUBLE                     , 
           SECONDTERMREVENAMN DOUBLE                     , 
           THIRDTERMREVENUAMN DOUBLE                     , 
           FK_ID_FINAIDPROFIL INTEGER                    , 
           FK_ID_FINAIDCOAITE INTEGER                    , 
           FKIDFINAIDCOAITEMF INTEGER                     ) ;
 
-- Entity - FinAidCOAItemForYear 
CREATE TABLE FINAIDCOAITEMFORYEAR ( 
           ID                 INTEGER            NOT NULL, 
           REVENUEAMOUNT      DOUBLE                     , 
           FIRSTTERMREVENUAMN DOUBLE                     , 
           SECONDTERMREVENAMN DOUBLE                     , 
           THIRDTERMREVENUAMN DOUBLE                     , 
           FK_ID_FINAIDCOAITE INTEGER            NOT NULL, 
           FK_ID_COLLEGEYEAR  INTEGER            NOT NULL ) ;
 
-- Entity - FinAidDisbursement 
CREATE TABLE FINAIDDISBURSEMENT ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           AMOUNT             DOUBLE                     , 
           DISBURSEMENTDATE   DATE                       , 
           AMOUNTCURRNTLYAPPL DOUBLE                     , 
           SA_TRNSCTNSGNRTDFL TEXT( 1 )                  , 
           SA_TRNSCTNAPPRVDFL TEXT( 1 )                  , 
           SATRNSCTNPRTLPRCSF TEXT( 1 )                  , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_Z_USER02     INTEGER                     ) ;
 
-- Entity - FinAidISIRLayout 
CREATE TABLE FINAIDISIRLAYOUT ( 
           ID                 INTEGER            NOT NULL, 
           YEARINDICATOR      TEXT( 2 )                  , 
           YEARINDICATORLENGT INTEGER                    , 
           LINELENGTH         INTEGER                    , 
           FK_ID_FINAIDADMIN  INTEGER                     ) ;
 
-- Entity - FinAidISIRLayoutAttribute 
CREATE TABLE FINAIDISIRLAYOUTATTRIBUTE ( 
           ID                 INTEGER            NOT NULL, 
           FIELDNUMBER        INTEGER                    , 
           SARFIELD           TEXT( 3 )                  , 
           STARTPOSITION      INTEGER                    , 
           ENDPOSITION        INTEGER                    , 
           LENGTH             INTEGER                    , 
           FIELDNAME          TEXT( 254 )                , 
           VALIDCONTENT       TEXT( 254 )                , 
           JUSTIFY            TEXT( 1 )                  , 
           SIGNED             TEXT( 1 )                  , 
           ZENCASENTITY       TEXT( 32 )                 , 
           ZENCASCREATEENTITY TEXT( 1 )                  , 
           ZENCASATTRIBUTE    TEXT( 32 )                 , 
           ZENCASDOMAIN       TEXT( 254 )                , 
           ZENCASFIXEDATTRIBU TEXT( 254 )                , 
           ZENCASFIXEDATTRBTV TEXT( 254 )                , 
           FKIDFINAIDISIRLAYO INTEGER            NOT NULL ) ;
 
-- Entity - FinAidISIRValueDescription 
CREATE TABLE FINAIDISIRVALUEDESCRIPTION ( 
           ID                 INTEGER            NOT NULL, 
           FIELDNUMBER        INTEGER            NOT NULL, 
           FIELDVALUE         TEXT( 254 )                , 
           DESCRIPTION        TEXT( 254 )                , 
           FKIDFINAIDISIRLAYO INTEGER                     ) ;
 
-- Entity - FinAidLenderGuarantor 
CREATE TABLE FINAIDLENDERGUARANTOR ( 
           ID                 INTEGER            NOT NULL, 
           LENDORCODE         TEXT( 6 )                  , 
           GUARANTORCODE      TEXT( 3 )                  , 
           NAME               TEXT( 50 )                 , 
           ISBANKFLAG         TEXT( 1 )                  , 
           ISGUARANTORFLAG    TEXT( 1 )                  , 
           LENDERGURNTINDCTRC TEXT( 1 )                  , 
           LENDERGURNTAPPRVLD DATE                       , 
           LENDERNONED_BRNCHI TEXT( 4 )                  , 
           LENDERUSEONLY      TEXT( 20 )                  ) ;
 
-- Entity - FinAidLoan 
CREATE TABLE FINAIDLOAN ( 
           ID                 INTEGER            NOT NULL, 
           COMMONLINECOD_FLAG TEXT( 3 )                  , 
           DESCRIPTION        TEXT( 254 )                , 
           WORKFLOWSTATUS     TEXT( 5 )                  , 
           LOANTYPECODE       TEXT( 2 )                  , 
           EXTERNALLOANFLAG   TEXT( 1 )                  , 
           FEDERLSBSDZDUNSBFL TEXT( 1 )                  , 
           LOANPERIODBEGINDAT DATE                       , 
           LOANPERIODENDDATE  DATE                       , 
           REQUESTEDAMOUNT    DOUBLE                     , 
           APPLICATIONDATE    DATE                       , 
           REQUESTDAMNTMXMMFL TEXT( 1 )                  , 
           BANKFEE            DOUBLE                     , 
           APPROVEDAMOUNT     DOUBLE                     , 
           CERTIFIEDAMOUNT    DOUBLE                     , 
           UNSBSDZDSTFRDAPRAM DOUBLE                     , 
           UNSBSDZDSTFRDCRTAM DOUBLE                     , 
           NUMBEROFDISBURSMNT INTEGER                    , 
           SBSDZDSTFFRDAPRAMN DOUBLE                     , 
           SBSDZDSTFFRDCRTAMN DOUBLE                     , 
           ACTUALINTERESTRATE DOUBLE                     , 
           COMMONLINEUNQIDNTF TEXT( 17 )                 , 
           COMMONLINESEQNCNMB TEXT( 2 )                  , 
           COMMNLNPRCSSNGTYPC TEXT( 2 )                  , 
           BORROWERISSTUDNTFL TEXT( 1 )                  , 
           BORROWERLASTNAME   TEXT( 50 )                 , 
           BORROWERFIRSTNAME  TEXT( 50 )                 , 
           BORROWERMI         TEXT( 1 )                  , 
           BORROWERPHONE      TEXT( 10 )                 , 
           BORROWERFRGNPHNPRF TEXT( 10 )                 , 
           BORROWERSSN        TEXT( 15 )                 , 
           BORROWERADDRESSLIN TEXT( 50 )                 , 
           BORROWERADDRESSL02 TEXT( 50 )                 , 
           BORROWERCITY       TEXT( 100 )                , 
           BORROWERSTATEPROVN TEXT( 2 )                  , 
           BORROWERPOSTALCODE TEXT( 10 )                 , 
           BORROWERFORGNPSTLC TEXT( 14 )                 , 
           BRRWRADRSLSTUPDTDD DATE                       , 
           BORROWERDATEOFBIRT DATE                       , 
           BORRWRDRVRSLCNSNMB TEXT( 20 )                 , 
           BORROWRDRVRSLCNSST TEXT( 2 )                  , 
           BORRWRUS_CTZNSTTSC TEXT( 1 )                  , 
           BORRWRSTTOFLGLRSDN TEXT( 2 )                  , 
           BRWRRSDNCYESTBLSHD DATE                       , 
           BORROWERDEFLTRFNDC TEXT( 1 )                  , 
           BORROWERALIENRGNMB TEXT( 10 )                 , 
           BORROWERSIGNATUREC TEXT( 1 )                  , 
           BORROWERSIGNATURED DATE                       , 
           BRRWRELCTRNCSGNTRC TEXT( 1 )                  , 
           BORRWROTSTNDNGLNSC TEXT( 1 )                  , 
           BORROWRDFRMNTRQSTC TEXT( 1 )                  , 
           BORROWRINTRSTINDCT TEXT( 1 )                  , 
           BORRWRCRDTATHRZTNC TEXT( 1 )                  , 
           ENROLLMENTSTATUSCO TEXT( 1 )                  , 
           BORRWRCNFRMTNINDCT TEXT( 1 )                  , 
           BORROWERREFERENCSC TEXT( 1 )                  , 
           STUDENTLASTNAME    TEXT( 50 )                 , 
           STUDENTFIRSTNAME   TEXT( 50 )                 , 
           STUDENTMI          TEXT( 1 )                  , 
           STUDENTSSN         TEXT( 15 )                 , 
           STUDENTDATEOFBIRTH DATE                       , 
           STUDENTALIENREGNMB TEXT( 10 )                 , 
           STUDNTUS_CTZNSTTSC TEXT( 1 )                  , 
           STUDENTDEFALTRFNDC TEXT( 1 )                  , 
           COMMONLINEGRADLVLC TEXT( 1 )                  , 
           STUDENTSIGNATURECO TEXT( 1 )                  , 
           DEFERMENTREQUESTCO TEXT( 1 )                  , 
           EFTAUTHORIZATIONCO TEXT( 1 )                  , 
           SCHOOLCERTIFICATND DATE                       , 
           ADJUSTMENTCUTOFFDA DATE                       , 
           ALTRNTVLNAPPLVRSNC TEXT( 4 )                  , 
           ESIGNATURESORCTYPC TEXT( 9 )                  , 
           FEDERALAPPLCTNFRMC TEXT( 1 )                  , 
           GRNTADJSTMNTINDCTR TEXT( 1 )                  , 
           GUARANTEEAMOUNTDAT DATE                       , 
           GUARANTEEAMOUNT    DOUBLE                     , 
           REQUESTEDSERIALLNC TEXT( 1 )                  , 
           SCHOOLUSEONLY      TEXT( 23 )                 , 
           PROMISSORYNTDLVRYC TEXT( 1 )                  , 
           RESPONSETOORIGNTRC TEXT( 1 )                  , 
           GUARANTEAMNTRDCTNC TEXT( 1 )                  , 
           GUARANTORUSEONLY   TEXT( 23 )                 , 
           ALTERNATVPRGRMTYPC TEXT( 3 )                  , 
           ALTRNTVTTLSTDNTLND DOUBLE                     , 
           ANTICIPATEDCMPLTND DATE                       , 
           ESTIMATDFNNCLADAMN DOUBLE                     , 
           CLRPSTWTHDRWLRTRNA DOUBLE                     , 
           CLRPSTWTHDRWLRTRND DATE                       , 
           CLR_GUARANTORSTTSC TEXT( 2 )                  , 
           COMMONLINEGUARNTRI TEXT( 3 )                  , 
           CLR_GUARNTRSTTSDTT TEXT( 25 )                 , 
           CLR_LNDRSRVCRSTTSC TEXT( 2 )                  , 
           CLRLNDRSRVCRSTSDTT TEXT( 25 )                 , 
           CLR_MPN_STATUSCODE TEXT( 2 )                  , 
           CLR_MPN_STATUSDATT TEXT( 25 )                 , 
           CLR_CREDITSTATUSCO TEXT( 2 )                  , 
           CLR_CREDITSTATSDTT TEXT( 25 )                 , 
           CLR_ACTUALSERILLNC TEXT( 1 )                  , 
           CLR_AMNTAVLBLRSTMN DOUBLE                     , 
           CLR_ANTICIPTDPUT_D DATE                       , 
           TMPRRYBRRWRADDRSLN TEXT( 50 )                 , 
           TMPRRYBRRWRADDRS02 TEXT( 50 )                 , 
           TEMPORARYBORROWRCT TEXT( 100 )                , 
           TMPRRYBRRWRSTTPRVN TEXT( 2 )                  , 
           TEMPORRYBRRWRPSTLC TEXT( 10 )                 , 
           LOANAMOUNT         DOUBLE                     , 
           STARTDATE          DATE                       , 
           ENDDATE            DATE                       , 
           FK_ID_FINAIDPROFIL INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_STUDENT      INTEGER                    , 
           FKIDFINAIDLENDERGU INTEGER                     ) ;
 
-- Entity - FinAidProfile 
CREATE TABLE FINAIDPROFILE ( 
           ID                 INTEGER            NOT NULL, 
           STUDENTCLASSIFICAT TEXT( 5 )                  , 
           EXPECTEDCREDITLOAD DOUBLE                     , 
           DEPENDENCYSTATUS   TEXT( 5 )                  , 
           FULLPARTTIME       TEXT( 1 )                  , 
           RESIDENCYSTATUS    TEXT( 1 )                  , 
           MONTHSENROLLED     INTEGER                    , 
           NEEDSVERIFIED      TEXT( 1 )                  , 
           PROFILEEXCEPTION   TEXT( 1 )                  , 
           REVIEWFLAG         TEXT( 1 )                  , 
           STUDNTDSRSUNSBLNFL TEXT( 1 )                  , 
           EXCEPTIONDESCRIPTI TEXT( 254 )                , 
           MASTERPRMSSRYSGNDD DATE                       , 
           PROFILEYEARBEGIN   DATE                       , 
           PROFILEYEAREND     DATE                       , 
           EFC                DOUBLE                     , 
           EFCUSED            TEXT( 254 )                , 
           CCODERESOLVED      TEXT( 1 )                  , 
           CCODERESOLVEDNOTE  TEXT( 254 )                , 
           ANTICIPATEDCLSSFCT TEXT( 5 )                  , 
           CLEARED            TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           TOTALUNMETNEED     DOUBLE                     , 
           ACADMCLVLATTMOFAWR TEXT( 5 )                  , 
           PACKAGEDDATE       DATE                       , 
           COA_OPTIONWHOLYRFL TEXT( 1 )                  , 
           VERIFIEDREQURMNTSD DATE                       , 
           COA_OPTINFRSTTRMFL TEXT( 1 )                  , 
           PARTLLVRFDRQRMNTSD DATE                       , 
           ADDITNLUNSBLNAGGRG DOUBLE                     , 
           COA_OPTINSCNDTRMFL TEXT( 1 )                  , 
           COA_OPTINTHRDTRMFL TEXT( 1 )                  , 
           ADDITIONLSBLNAGGRG DOUBLE                     , 
           STPNDMSCLNSCHRGSFL TEXT( 1 )                  , 
           REQUESTEDREFUNDAMN DOUBLE                     , 
           MATRIXCELLNUMBER   INTEGER                    , 
           MATRIXMINIMUMAWARD DOUBLE                     , 
           AUTOMATRIXCELLNUMB INTEGER                    , 
           AUTOMATRIXMINMMAWR DOUBLE                     , 
           FK_ID_FINAIDADMIN  INTEGER                    , 
           FK_ID_FINAIDTRACK  INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_FAISIR       INTEGER                     ) ;
 
-- Entity - FinAidProfileRequirement 
CREATE TABLE FINAIDPROFILEREQUIREMENT ( 
           ID                 INTEGER            NOT NULL, 
           CURRENTSTATUS      TEXT( 1 )                  , 
           CREATIONTYPE       TEXT( 1 )                  , 
           DATERECEIVED       DATE                       , 
           USERWHADDDMNLRQRMN TEXT( 254 )                , 
           USRORSYSTMSTNGMTST TEXT( 254 )                , 
           z_NOTE             MEMO                       , 
           AUTOSEQ            INTEGER                    , 
           FK_ID_FINAIDPROFIL INTEGER            NOT NULL, 
           FKIDFINAIDREQUIREM INTEGER            NOT NULL ) ;
 
-- Entity - FinAidRequirement 
CREATE TABLE FINAIDREQUIREMENT ( 
           ID                 INTEGER            NOT NULL, 
           RULESCODE          TEXT( 8 )                  , 
           NAME               TEXT( 50 )                 , 
           TYPE               TEXT( 10 )                 , 
           DESCRIPTION        MEMO                       , 
           CLASSIFICATION     TEXT( 5 )                  , 
           PRINTDESCRIPTION   TEXT( 254 )                , 
           HIDEONINTERFACE    TEXT( 1 )                  , 
           RULDFNTNSANDDCMNTT MEMO                       , 
           GENRECEIVESUBDIALO TEXT( 1 )                  , 
           EXCLUDEFROMPACKAGN TEXT( 1 )                  , 
           COMMENTCODESRULE   TEXT( 254 )                , 
           LIFETIMEONLYONCEFL TEXT( 1 )                  , 
           USECOMMNTSCDLTTRTX TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL, 
           FK_ID_COLLEGEYEAR  INTEGER                     ) ;
 
-- Entity - FinAidRequirementMet 
CREATE TABLE FINAIDREQUIREMENTMET ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           DATERECEIVED       DATE                       , 
           FKIDFINAIDREQUIREM INTEGER            NOT NULL, 
           FK_ID_FINAIDPROFIL INTEGER            NOT NULL ) ;
 
-- Entity - FinAidRule 
CREATE TABLE FINAIDRULE ( 
           ID                 INTEGER            NOT NULL, 
           ISPARENTRULE       TEXT( 1 )                  , 
           APPLYTONEEDAWARD   TEXT( 1 )                  , 
           APPLYTOANY         TEXT( 1 )                  , 
           RULETYPE           TEXT( 1 )                  , 
           APPLYTOALL         TEXT( 1 )                  , 
           DESCRIPTION        TEXT( 254 )                , 
           QUALVIEWNAME       TEXT( 254 )                , 
           QUALENTITYNAME     TEXT( 254 )                , 
           QUALATTRIBUTENAME  TEXT( 254 )                , 
           QUALATTRIBUTETYPE  TEXT( 1 )                  , 
           QUALOPERATOR       TEXT( 10 )                 , 
           QUALMINNUMERICVALU DOUBLE                     , 
           QUALMAXNUMERICVALU DOUBLE                     , 
           QUALSTRINGVALUE    TEXT( 254 )                , 
           QUALVIEWVALUE      TEXT( 254 )                , 
           QUALENTITYVALUE    TEXT( 254 )                , 
           QUALATTRIBUTEVALUE TEXT( 254 )                , 
           QUALBOOLEANOPERATO TEXT( 1 )                  , 
           RULESTRINGRESULT   TEXT( 254 )                , 
           RULENUMERICRESULT  DOUBLE                     , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - FinAidRuleSet 
CREATE TABLE FINAIDRULESET ( 
           ID                 INTEGER            NOT NULL, 
           APPLYTONEEDAWARD   TEXT( 1 )                  , 
           RULETYPE           TEXT( 1 )                  , 
           DESCRIPTION        TEXT( 254 )                , 
           QUALBOOLEANOPERATO TEXT( 1 )                  , 
           RULESTRINGRESULT   TEXT( 254 )                , 
           RULENUMERICRESULT  DOUBLE                     , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - FinAidSource 
CREATE TABLE FINAIDSOURCE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           AIDTYPE            TEXT( 10 )                 , 
           FUNDEDTYPE         TEXT( 5 )                  , 
           SOURCETYPE         TEXT( 5 )                  , 
           LOANTYPE           TEXT( 2 )                  , 
           STATUS             TEXT( 2 )                  , 
           PROVIDER           TEXT( 1 )                  , 
           ISNEEDBASED        TEXT( 1 )                  , 
           ISSWAPPABLE        TEXT( 1 )                  , 
           REQUIRESCERTIFICAT TEXT( 1 )                  , 
           MANUALLYAWARDED    TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           AMOUNTDETEREMINEDB TEXT( 1 )                  , 
           DISBURSEMENTS      INTEGER                    , 
           AWARDAMOUNT        DOUBLE                     , 
           MAJORSEQUENCENUMBE INTEGER                    , 
           MINORSEQUENCENUMBE INTEGER                    , 
           FUNDID             TEXT( 7 )                  , 
           BILLINGCODE        TEXT( 5 )                  , 
           MINIMUMAWARD       DOUBLE                     , 
           CITIZENSHIPREQUIRE TEXT( 1 )                  , 
           STATECLASSIFICATIO TEXT( 10 )                 , 
           NCAA_REPORTINGTYPE TEXT( 10 )                 , 
           FISAP_REPORTINGTYP TEXT( 10 )                 , 
           STATEREPORTINGTYPE TEXT( 10 )                 , 
           USNEWS_REPORTINGTY TEXT( 10 )                 , 
           CCCU_REPORTINGTYPE TEXT( 10 )                 , 
           IPEDS_REPORTINGTYP TEXT( 10 )                 , 
           CDS_REPORTINGTYPE  TEXT( 10 )                 , 
           SOURCEFOOTNOTE     MEMO                       , 
           INCLDINLFTMAWRDSFL TEXT( 1 )                  , 
           DNTSHWONPNDNGBLLFL TEXT( 1 )                  , 
           SCHOLARSHIPAIDTYPE TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           REGSTRTNCLCEXCLDFL TEXT( 1 )                  , 
           AUTOAWARDFLAG      TEXT( 1 )                  , 
           AUTOAWARDAMOUNTRLN TEXT( 50 )                 , 
           AUTAWRDMXMMAWRDAMN DOUBLE                     , 
           AUTAWRDMNMMAWRDAMN DOUBLE                     , 
           AUTOAWARDPRIORITY  INTEGER                    , 
           AUTOAWARDNOTE      MEMO                       , 
           FK_ID_FINAIDRULESE INTEGER                    , 
           FK_ID_SCHOLARSHIP  INTEGER                    , 
           FK_ID_STOREDQUERY  INTEGER                    , 
           FKIDSATRANSACTIONC INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - FinAidSourceHistorical 
CREATE TABLE FINAIDSOURCEHISTORICAL ( 
           DISBURSEFLAG       TEXT( 1 )                  , 
           TITLEIV            TEXT( 1 )                  , 
           SCHOLARSHIPCLSSFCT TEXT( 1 )                  , 
           CATEGORY           TEXT( 1 )                  , 
           SOURCEFALACHEK     TEXT( 1 )                  , 
           BASISFALACHEK      TEXT( 1 )                  , 
           FUNDINGFALACHEK    TEXT( 1 )                  , 
           AWARDTYPEFALACHEK  TEXT( 1 )                  , 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL ) ;
 
-- Entity - FinAidTrack 
CREATE TABLE FINAIDTRACK ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           DEFAULTFLAG        TEXT( 1 )                  , 
           VERIFICATIONFLAG   TEXT( 1 )                  , 
           IMPORTCODE         TEXT( 10 )                 , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL ) ;
 
-- Entity - FinAidTrackRequirement 
CREATE TABLE FINAIDTRACKREQUIREMENT ( 
           SEQUENCENUMBER     INTEGER                    , 
           FK_ID_FINAIDTRACK  INTEGER            NOT NULL, 
           FKIDFINAIDREQUIREM INTEGER            NOT NULL ) ;
 
-- Entity - FinalExamSchedule 
CREATE TABLE FINALEXAMSCHEDULE ( 
           ID                 INTEGER            NOT NULL, 
           EXAMDATE           DATE                       , 
           EXAMSTARTTIME      TEXT( 25 )                 , 
           EXAMENDTIME        TEXT( 25 )                 , 
           SCHDLCLSSFRSTDYOFW INTEGER                    , 
           SCHEDULCLSSSTRTTML TEXT( 25 )                 , 
           SCHEDLCLSSSTRTTMHG TEXT( 25 )                 , 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
-- Entity - FinancialAccount 
CREATE TABLE FINANCIALACCOUNT ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 10 )                 , 
           INSTITUTIONNAME    TEXT( 254 )                , 
           ACCOUNTNUMBER      TEXT( 254 )                , 
           DESCRIPTION        TEXT( 254 )                , 
           DEFAULTACCOUNT     TEXT( 1 )                  , 
           CHECKWRITINGFLAG   TEXT( 1 )                  , 
           OPENINGBALANCE     DOUBLE                     , 
           OPENINGDATE        DATE                       , 
           URLLOGIN           TEXT( 254 )                , 
           LOGINNAME          TEXT( 50 )                 , 
           PASSWORD           TEXT( 50 )                 , 
           TARGETFILENAME     TEXT( 254 )                , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER                     ) ;
 
-- Entity - FinancialAccountStatement 
CREATE TABLE FINANCIALACCOUNTSTATEMENT ( 
           ID                 INTEGER            NOT NULL, 
           z_YEAR             TEXT( 4 )                  , 
           z_MONTH            INTEGER                    , 
           RECONCILIATIONDATE DATE                       , 
           STATEMENTDATE      DATE                       , 
           STATEMENTBALANCEBG DOUBLE                     , 
           STATEMENTBALANCEEN DOUBLE                     , 
           STATEMENTDEPOSITS  DOUBLE                     , 
           STATEMENTINTRSTERN DOUBLE                     , 
           STATEMENTWITHDRAWL DOUBLE                     , 
           STATEMENTSERVCCHRG DOUBLE                     , 
           INITIALCASHBALANCE DOUBLE                     , 
           FINALCASHBALANCE   DOUBLE                     , 
           FKIDFINANCIALACCOU INTEGER            NOT NULL ) ;
 
-- Entity - FinancialAccountTransaction 
CREATE TABLE FINANCIALACCOUNTTRANSACTION ( 
           ID                 INTEGER            NOT NULL, 
           TRANSACTIONTYPE    TEXT( 1 )                  , 
           TRANSACTIONMETHOD  TEXT( 3 )                  , 
           CHECKNUMBER        INTEGER                    , 
           TRANSACTIONDATE    DATE                       , 
           PAYEENAME          TEXT( 254 )                , 
           PAYEEADDRESS       MEMO                       , 
           OTHERDESCRIPTION   TEXT( 254 )                , 
           z_MEMO             MEMO                       , 
           TRANSFERIDENTIFIER TEXT( 254 )                , 
           BANKSTATUS         TEXT( 1 )                  , 
           BANKCLEARDDATE     DATE                       , 
           CREDITAMOUNT       DOUBLE                     , 
           DEBITAMOUNT        DOUBLE                     , 
           BECOMESIDDEPOSITGR INTEGER                    , 
           GROUPSIDDEPOSITGRO INTEGER                    , 
           FKIDFINANCIALACCOU INTEGER            NOT NULL, 
           FKIDSATRANSACTIONC INTEGER                    , 
           FK_ID_VENDOR       INTEGER                    , 
           FKIDFINANCIALACC02 INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_FINAIDPROFIL INTEGER                     ) ;
 
-- Entity - FinancialAidConstants 
CREATE TABLE FINANCIALAIDCONSTANTS ( 
           ID                 INTEGER            NOT NULL, 
           STDNTACCNTNTCLRDTX MEMO                       , 
           ISIR_WILLFILETEXT  MEMO                       , 
           FINAIDCLRNCISNLLTX MEMO                        ) ;
 
-- Entity - FinancialApprovalRole 
CREATE TABLE FINANCIALAPPROVALROLE ( 
           ID                 INTEGER            NOT NULL, 
           MAXIMMPO_APPRVLAMN DOUBLE                     , 
           DESCRIPTION        TEXT( 254 )                , 
           REVIWSRQSTDBDGTSFL TEXT( 1 )                  , 
           FK_HOSTID_HOST     INTEGER                    , 
           FKIDFINANCIALAPPRO INTEGER                    , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - FindList 
CREATE TABLE FINDLIST ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )          NOT NULL, 
           LISTNAME           TEXT( 50 )                 , 
           DATEGENERATED      DATE                       , 
           FINDCRITERIA       MEMO                       , 
           z_NOTE             MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           DYNAMICFLAG        TEXT( 1 )                  , 
           SAVEFINDFLAG       TEXT( 1 )                  , 
           FK_ID_Z_USER       INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_STOREDQUERY  INTEGER                     ) ;
 
-- Entity - FindListItem 
CREATE TABLE FINDLISTITEM ( 
           ID                 INTEGER            NOT NULL, 
           FKIDGLJOURNALENTRY INTEGER                    , 
           FK_IDGLJOURNALENTR INTEGER                    , 
           FK_ID_FINDLIST     INTEGER            NOT NULL ) ;
 
-- Entity - FinRegEducationalAllowance 
CREATE TABLE FINREGEDUCATIONALALLOWANCE ( 
           ID                 INTEGER            NOT NULL, 
           RELATIONSHIP       TEXT( 254 )                , 
           NAME               TEXT( 254 )                , 
           ORGANIZATION       TEXT( 254 )                , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - Folder 
CREATE TABLE FOLDER ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )         NOT NULL, 
           SORTORDER          INTEGER                    , 
           z_NOTE             MEMO                       , 
           FKIDCOMMUNICATIONP INTEGER                    , 
           FKIDCOMMUNICATIO02 INTEGER                    , 
           FK_ID_FOLDER       INTEGER                     ) ;
 
-- Entity - ForeignCourse 
CREATE TABLE FOREIGNCOURSE ( 
           ID                 INTEGER            NOT NULL, 
           CREDITHOURS        DOUBLE                     , 
           TARGETCREDITHOURS  DOUBLE                     , 
           z_NUMBER           TEXT( 10 )                 , 
           TITLE              TEXT( 100 )                , 
           VALIDCATALOGYEARRN TEXT( 9 )                  , 
           EQUIVALENCYDENIDFL TEXT( 1 )                  , 
           TRANSFERDENIEDFLAG TEXT( 1 )                  , 
           TRANSFERDENIEDREAS TEXT( 2 )                  , 
           z_NOTE             MEMO                       , 
           FK_ID_SCHOOL       INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_DEPARTMENT   INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - Fund 
CREATE TABLE FUND ( 
           ID                 INTEGER            NOT NULL, 
           DESIGNATION        TEXT( 10 )                 , 
           NAME               TEXT( 254 )                , 
           DESCRIPTION        MEMO                       , 
           RESTRICTEDTYPE     TEXT( 1 )                  , 
           FUNDNUMBER         TEXT( 254 )                , 
           FULLYENDOWED       TEXT( 1 )                  , 
           FULLYENDOWEDDATE   DATE                       , 
           OPENINGBALANCE     DOUBLE                     , 
           OPENINGBALANCEDATE DATE                       , 
           LASTTRANSMITTEDDAT DATE                       , 
           CFAEPURPOSECODE    TEXT( 2 )                  , 
           FISCALYEAR         TEXT( 4 )                  , 
           EOYFLAG            TEXT( 1 )                  , 
           EXTERNALPAYROLLID  TEXT( 10 )                 , 
           PROJECTCODE        TEXT( 3 )                  , 
           ACTIVE             TEXT( 1 )                  , 
           CORPUS             DOUBLE                     , 
           CORPUSGRANDFATHERE TEXT( 1 )                  , 
           POSTINGDATE        DATE                       , 
           CONVERTEDSTRING    MEMO                       , 
           CONVERTEDKEY       TEXT( 12 )                 , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_GLCHARTENTRY INTEGER                    , 
           FKFUNDIDGLCHARTENT INTEGER                    , 
           FKSTOCKIDGLCHARTEN INTEGER                    , 
           FKPLEDGEIDGLCHARTE INTEGER                    , 
           FKPAYIDGLCHARTENTR INTEGER                    , 
           FKOTHERIDGLCHARTEN INTEGER                    , 
           FK_ID_DONOR        INTEGER                    , 
           FK_ID_DONOR02      INTEGER                     ) ;
 
-- Entity - FundAnnualAmount 
CREATE TABLE FUNDANNUALAMOUNT ( 
           ID                 INTEGER            NOT NULL, 
           OPENINGDONATIONAMN DOUBLE                     , 
           OPENINGEARNINGSAMN DOUBLE                     , 
           OPENINGBALANCE     DOUBLE                     , 
           NUMBEROFGIFTS      INTEGER                    , 
           FK_ID_FUND         INTEGER                    , 
           FK_ID_GLFISCALYEAR INTEGER                     ) ;
 
-- Entity - FYR_Enrollment 
CREATE TABLE FYR_ENROLLMENT ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           U_DGRSK1ST_FRSHFTM INTEGER                    , 
           U_DGRSK1ST_OTHRFTM INTEGER                    , 
           U_DGRSKALLOTHRFT_M INTEGER                    , 
           U_DEGREESEKTTLFT_M INTEGER                    , 
           U_OTHERFT_MEN      INTEGER                    , 
           U_TOTALFT_MEN      INTEGER                    , 
           G_DEGREESEK1STFT_M INTEGER                    , 
           G_DGRSKALLOTHRFT_M INTEGER                    , 
           G_OTHERFT_MEN      INTEGER                    , 
           G_TOTALFT_MEN      INTEGER                    , 
           U_DGRSK1STFRSHFTWM INTEGER                    , 
           U_DGRSK1STOTHRFTWM INTEGER                    , 
           U_DGRSKALOTHRFT_WM INTEGER                    , 
           U_DEGREESKTTLFT_WM INTEGER                    , 
           U_OTHERFT_WOMEN    INTEGER                    , 
           U_TOTALFT_WOMEN    INTEGER                    , 
           G_DEGREESK1STFT_WM INTEGER                    , 
           G_DGRSKALOTHRFT_WM INTEGER                    , 
           G_OTHERFT_WOMEN    INTEGER                    , 
           G_TOTALFT_WOMEN    INTEGER                    , 
           U_DGRSK1ST_FRSHPTM INTEGER                    , 
           U_DGRSK1ST_OTHRPTM INTEGER                    , 
           U_DGRSKALLOTHRPT_M INTEGER                    , 
           U_DEGREESEKTTLPT_M INTEGER                    , 
           U_OTHERPT_MEN      INTEGER                    , 
           U_TOTALPT_MEN      INTEGER                    , 
           G_DEGREESEK1STPT_M INTEGER                    , 
           G_DGRSKALLOTHRPT_M INTEGER                    , 
           G_OTHERPT_MEN      INTEGER                    , 
           G_TOTALPT_MEN      INTEGER                    , 
           U_DGRSK1STFRSHPTWM INTEGER                    , 
           U_DGRSK1STOTHRPTWM INTEGER                    , 
           U_DGRSKALOTHRPT_WM INTEGER                    , 
           U_DEGREESKTTLPT_WM INTEGER                    , 
           U_OTHERPT_WOMEN    INTEGER                    , 
           U_TOTALPT_WOMEN    INTEGER                    , 
           G_DEGREESK1STPT_WM INTEGER                    , 
           G_DGRSKALOTHRPT_WM INTEGER                    , 
           G_OTHERPT_WOMEN    INTEGER                    , 
           G_TOTALPT_WOMEN    INTEGER                    , 
           EU_DEGREESEK1STNNR INTEGER                    , 
           EU_DEGREESEK1STBLC INTEGER                    , 
           EU_DEGRESK1STNTVAM INTEGER                    , 
           EU_DEGREESEEK1STAS INTEGER                    , 
           EU_DEGREESK1STHSPN INTEGER                    , 
           EU_DEGREESEEK1STWH INTEGER                    , 
           EU_DEGRESK1STUNKNW INTEGER                    , 
           EU_DEGREESEEK1STTT INTEGER                    , 
           EU_DEGREESEKALLNNR INTEGER                    , 
           EU_DEGREESEKALLBLC INTEGER                    , 
           EU_DEGRESKALLNTVAM INTEGER                    , 
           EU_DEGREESEEKALLAS INTEGER                    , 
           EU_DEGREESKALLHSPN INTEGER                    , 
           EU_DEGREESEEKALLWH INTEGER                    , 
           EU_DEGRESKALLUNKNW INTEGER                    , 
           EU_DEGREESEEKALLTT INTEGER                    , 
           EU_ALLNONRES       INTEGER                    , 
           EU_ALLBLACK        INTEGER                    , 
           EU_ALLNATIVEAMER   INTEGER                    , 
           EU_ALLASIAN        INTEGER                    , 
           EU_ALLHISPANIC     INTEGER                    , 
           EU_ALLWHITE        INTEGER                    , 
           EU_ALLUNKNOWN      INTEGER                    , 
           EU_ALLTOTAL        INTEGER                    , 
           EU_DEGRSK1STHWNPCI INTEGER                    , 
           EU_DEGRSKALLHWNPCI INTEGER                    , 
           EU_ALLHAWIANPACIS  INTEGER                    , 
           FKIDFYREPORTSUMMAR INTEGER            NOT NULL ) ;
 
-- Entity - FYReportClassSummary 
CREATE TABLE FYREPORTCLASSSUMMARY ( 
           ID                 INTEGER            NOT NULL, 
           SIZE_2_9           INTEGER                    , 
           SIZE_10_19         INTEGER                    , 
           SIZE_20_29         INTEGER                    , 
           SIZE_30_39         INTEGER                    , 
           SIZE_40_49         INTEGER                    , 
           SIZE_50_99         INTEGER                    , 
           SIZE_100ANDOVER    INTEGER                    , 
           SUBSECTIONSIZE_2_9 INTEGER                    , 
           SUBSECTIONSIZ_10_1 INTEGER                    , 
           SUBSECTIONSIZ_20_2 INTEGER                    , 
           SUBSECTIONSIZ_30_3 INTEGER                    , 
           SUBSECTIONSIZ_40_4 INTEGER                    , 
           SUBSECTIONSIZ_50_9 INTEGER                    , 
           SUBSCTNSZ_100ANDOV INTEGER                    , 
           FKIDFYREPORTSUMMAR INTEGER            NOT NULL ) ;
 
-- Entity - FYReportProspectSummary 
CREATE TABLE FYREPORTPROSPECTSUMMARY ( 
           ID                 INTEGER            NOT NULL, 
           TOTALFTFYAPPLIEDME INTEGER                    , 
           TOTALFTFYAPPLIEDWM INTEGER                    , 
           TOTALFTFYADMITTEDM INTEGER                    , 
           TOTALFTFYADMITTDWM INTEGER                    , 
           TOTALFTFYENRLLDMNF INTEGER                    , 
           TOTALFTFYENRLLDMNP INTEGER                    , 
           TOTLFTFYENRLLDWMNF INTEGER                    , 
           TOTLFTFYENRLLDWMNP INTEGER                    , 
           TOTALTRANSFRAPPLDM INTEGER                    , 
           TOTALTRNSFRAPPLDWM INTEGER                    , 
           TOTALTRNSFRAPPLDAL INTEGER                    , 
           TOTALTRNSFRADMTTDM INTEGER                    , 
           TOTLTRNSFRADMTTDWM INTEGER                    , 
           TOTLTRNSFRADMTTDAL INTEGER                    , 
           TOTALTRNSFRENRLLDM INTEGER                    , 
           TOTLTRNSFRENRLLDWM INTEGER                    , 
           TOTLTRNSFRENRLLDAL INTEGER                    , 
           SAT_TOTALSUBMITTED INTEGER                    , 
           SAT_PERCENTSUBMITT DOUBLE                     , 
           SATSCR25THPRCNTLRD INTEGER                    , 
           SATSCR25THPRCNTLMT INTEGER                    , 
           SATSCR25THPRCNTLWR INTEGER                    , 
           SATSCR25THPRCNTLES INTEGER                    , 
           SATSCR75THPRCNTLRD INTEGER                    , 
           SATSCR75THPRCNTLMT INTEGER                    , 
           SATSCR75THPRCNTLWR INTEGER                    , 
           SATSCR75THPRCNTLES INTEGER                    , 
           ACT_TOTALSUBMITTED INTEGER                    , 
           ACT_PERCENTSUBMITT DOUBLE                     , 
           ACTSCR25THPRCNTLCM INTEGER                    , 
           ACTSCR25THPRCNTLMT INTEGER                    , 
           ACTSCR25THPRCNTLWR INTEGER                    , 
           ACTSCR25THPRCNTLEN INTEGER                    , 
           ACTSCR75THPRCNTLCM INTEGER                    , 
           ACTSCR75THPRCNTLMT INTEGER                    , 
           ACTSCR75THPRCNTLWR INTEGER                    , 
           ACTSCR75THPRCNTLEN INTEGER                    , 
           SAT_READING700_800 DOUBLE                     , 
           SAT_READING600_699 DOUBLE                     , 
           SAT_READING500_599 DOUBLE                     , 
           SAT_READING400_499 DOUBLE                     , 
           SAT_READING300_399 DOUBLE                     , 
           SAT_READING200_299 DOUBLE                     , 
           SAT_MATH700_800    DOUBLE                     , 
           SAT_MATH600_699    DOUBLE                     , 
           SAT_MATH500_599    DOUBLE                     , 
           SAT_MATH400_499    DOUBLE                     , 
           SAT_MATH300_399    DOUBLE                     , 
           SAT_MATH200_299    DOUBLE                     , 
           SAT_WRITING700_800 DOUBLE                     , 
           SAT_WRITING600_699 DOUBLE                     , 
           SAT_WRITING500_599 DOUBLE                     , 
           SAT_WRITING400_499 DOUBLE                     , 
           SAT_WRITING300_399 DOUBLE                     , 
           SAT_WRITING200_299 DOUBLE                     , 
           ACT_COMPOSITE30_36 DOUBLE                     , 
           ACT_COMPOSITE24_29 DOUBLE                     , 
           ACT_COMPOSITE18_23 DOUBLE                     , 
           ACT_COMPOSITE12_17 DOUBLE                     , 
           ACT_COMPOSITE6_11  DOUBLE                     , 
           ACT_COMPOSITEBELOW DOUBLE                     , 
           ACT_ENGLISH30_36   DOUBLE                     , 
           ACT_ENGLISH24_29   DOUBLE                     , 
           ACT_ENGLISH18_23   DOUBLE                     , 
           ACT_ENGLISH12_17   DOUBLE                     , 
           ACT_ENGLISH6_11    DOUBLE                     , 
           ACT_ENGLISHBELOW6  DOUBLE                     , 
           ACT_MATH30_36      DOUBLE                     , 
           ACT_MATH24_29      DOUBLE                     , 
           ACT_MATH18_23      DOUBLE                     , 
           ACT_MATH12_17      DOUBLE                     , 
           ACT_MATH6_11       DOUBLE                     , 
           ACT_MATHBELOW6     DOUBLE                     , 
           HSRANKINGTOPTENTH  DOUBLE                     , 
           HSRANKINGTOPQUARTE DOUBLE                     , 
           HSRANKINGTOPHALF   DOUBLE                     , 
           HSRANKINGBOTTOMHAL DOUBLE                     , 
           HSRANKINGBOTTOMQRT DOUBLE                     , 
           PERCENTSBMTTNGHSRN DOUBLE                     , 
           GPA_PERCNT3_75T4_0 DOUBLE                     , 
           GPA_PERCNT3_50T3_7 DOUBLE                     , 
           GPA_PERCNT3_25T3_4 DOUBLE                     , 
           GPA_PERCNT3_00T3_2 DOUBLE                     , 
           GPA_PERCNT2_50T2_9 DOUBLE                     , 
           GPA_PERCNT2_00T2_4 DOUBLE                     , 
           GPA_PERCNT1_00T1_9 DOUBLE                     , 
           GPA_PERCENTBELW1_0 DOUBLE                     , 
           GPA_AVERAGE        DOUBLE                     , 
           PERCENTSBMTTNGHSGP DOUBLE                     , 
           FKIDFYREPORTSUMMAR INTEGER            NOT NULL ) ;
 
-- Entity - FYReportSummary 
CREATE TABLE FYREPORTSUMMARY ( 
           ID                 INTEGER            NOT NULL, 
           REPORTTYPE         TEXT( 10 )                 , 
           TYPE               TEXT( 254 )                , 
           RUNDATETIME        TEXT( 25 )                 , 
           CENSUSDATE         DATE                       , 
           z_NOTE             MEMO                       , 
           SAVEASOFFCLRCRDFRF TEXT( 1 )                  , 
           NUMBEROFUNDERGRADS INTEGER                    , 
           NUMBEROFGRADS      INTEGER                    , 
           TOTALNB_SCHGRFDAMN DOUBLE                     , 
           TOTLNB_SCHGRSTTAMN DOUBLE                     , 
           TTLNB_SCHGRINSTAMN DOUBLE                     , 
           TTLNB_SCHGROTHRAMN DOUBLE                     , 
           TOTLNB_SCHGRTTLAMN DOUBLE                     , 
           TOTALNB_SH_STLNAMN DOUBLE                     , 
           TOTALNB_SH_FDWSAMN DOUBLE                     , 
           TOTALNB_SH_TOTLAMN DOUBLE                     , 
           TOTALNB_PRLNTTLAMN DOUBLE                     , 
           TOTLNB_TTNWVTTLAMN DOUBLE                     , 
           TOTLNNB_SCHGRFDAMN DOUBLE                     , 
           TTLNNB_SCHGRSTTAMN DOUBLE                     , 
           TTLNNBSCHGRINSTAMN DOUBLE                     , 
           TTLNNBSCHGROTHRAMN DOUBLE                     , 
           TTLNNB_SCHGRTTLAMN DOUBLE                     , 
           TOTLNNB_SH_STLNAMN DOUBLE                     , 
           TOTLNNB_SH_FDWSAMN DOUBLE                     , 
           TOTALNNB_SH_TTLAMN DOUBLE                     , 
           TOTLNNB_PRLNTTLAMN DOUBLE                     , 
           TTLNNB_TTNWVTTLAMN DOUBLE                     , 
           IPEDS_NUMBRFDRLGRN INTEGER                    , 
           IPEDS_NUMBERSTTGRN INTEGER                    , 
           IPEDS_NUMBRINSTGRN INTEGER                    , 
           IPEDS_NUMBERLOAN   INTEGER                    , 
           IPEDS_TOTALFDRLGRN DOUBLE                     , 
           IPEDS_TOTALSTATGRN DOUBLE                     , 
           IPEDS_TOTALINSTGRN DOUBLE                     , 
           IPEDS_TOTALLOAN    DOUBLE                     , 
           IPEDS_AVGFEDERLGRN DOUBLE                     , 
           IPEDS_AVGSTATEGRAN DOUBLE                     , 
           IPEDS_AVGINSTGRANT DOUBLE                     , 
           IPEDS_AVGLOAN      DOUBLE                     , 
           IPEDS_NUMBERDGRSKN INTEGER                    , 
           IPEDS_NUMBERAWRDDF INTEGER                    , 
           ETHNICITYTTLSSBBJC LONGBINARY                 , 
           FK_ID_GLFISCALYEAR INTEGER                     ) ;
 
-- Entity - FYRSFA_Category 
CREATE TABLE FYRSFA_CATEGORY ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           NUMBEROFUNDERGRADS INTEGER                    , 
           NMBROFDGRSKNGUNDRG INTEGER                    , 
           NUMBERAPPLIEDNB_FA INTEGER                    , 
           NUMBERHAVINGFNNCLN INTEGER                    , 
           NUMBERAWARDEDANYFA INTEGER                    , 
           NUMBRAWRDDNB_GRNTF INTEGER                    , 
           NMBRAWRDNB_SLFHLPF INTEGER                    , 
           NMBRAWRDDNNB_GRNTF INTEGER                    , 
           NUMBERWITHNEDFLLYM INTEGER                    , 
           PRCNTOFNDMTFRNBSTD DOUBLE                     , 
           AVRGFAFRANYFASTDNT DOUBLE                     , 
           AVERAGENB_GRANT    DOUBLE                     , 
           AVERAGENB_SELFHELP DOUBLE                     , 
           AVERAGENB_LOAN     DOUBLE                     , 
           NMBRWTHTNDBTWTHINS INTEGER                    , 
           AVERAGEINSTNNB_AID DOUBLE                     , 
           NUMBERNNB_ATHLETCA INTEGER                    , 
           AVERAGENNB_ATHLTCA DOUBLE                     , 
           TOTALNB_NEED       DOUBLE                     , 
           TOTALNB_FA         DOUBLE                     , 
           TOTALNNB_FA        DOUBLE                     , 
           TOTALFA            DOUBLE                     , 
           TOTALNB_GRANT      DOUBLE                     , 
           TOTALNB_SELFHELP   DOUBLE                     , 
           TOTALNB_LOAN       DOUBLE                     , 
           NUMBERAWARDEDNB_LO INTEGER                    , 
           TOTALNNB_GRANT     DOUBLE                     , 
           TOTALNB_SCHGRFDAMN DOUBLE                     , 
           TOTLNB_SCHGRSTTAMN DOUBLE                     , 
           TTLNB_SCHGRINSTAMN DOUBLE                     , 
           TTLNB_SCHGROTHRAMN DOUBLE                     , 
           TOTLNB_SCHGRTTLAMN DOUBLE                     , 
           TOTALNB_SH_STLNAMN DOUBLE                     , 
           TOTALNB_SH_FDWSAMN DOUBLE                     , 
           TOTALNB_SH_TOTLAMN DOUBLE                     , 
           TOTALNB_PRLNTTLAMN DOUBLE                     , 
           TOTLNB_TTNWVTTLAMN DOUBLE                     , 
           TOTLNNB_SCHGRFDAMN DOUBLE                     , 
           TTLNNB_SCHGRSTTAMN DOUBLE                     , 
           TTLNNBSCHGRINSTAMN DOUBLE                     , 
           TTLNNBSCHGROTHRAMN DOUBLE                     , 
           TTLNNB_SCHGRTTLAMN DOUBLE                     , 
           TOTLNNB_SH_STLNAMN DOUBLE                     , 
           TOTLNNB_SH_FDWSAMN DOUBLE                     , 
           TOTALNNB_SH_TTLAMN DOUBLE                     , 
           TOTLNNB_PRLNTTLAMN DOUBLE                     , 
           TTLNNB_TTNWVTTLAMN DOUBLE                     , 
           FKIDFYREPORTSUMMAR INTEGER            NOT NULL ) ;
 
-- Entity - GenEdRequirement 
CREATE TABLE GENEDREQUIREMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - Gift 
CREATE TABLE GIFT ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        MEMO                       , 
           GIFTDATE           DATE               NOT NULL, 
           POSTED             TEXT( 1 )                  , 
           POSTEDDATE         TEXT( 25 )                 , 
           AMOUNT             DOUBLE             NOT NULL, 
           SHAREDGIFT         TEXT( 1 )                  , 
           GIFTHASMATCHINGGIF TEXT( 1 )                  , 
           OTHERHASMATCHINGGF TEXT( 1 )                  , 
           TRANSMITTALCODE    TEXT( 254 )                , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_DEVPROJECT   INTEGER                    , 
           FK_ID_FUND         INTEGER            NOT NULL, 
           FK_ID_DONATION     INTEGER            NOT NULL, 
           DEBITIDGLCHARTENTR INTEGER                    , 
           CREDITIDGLCHARTENT INTEGER                    , 
           FK_ID_EVENT        INTEGER                    , 
           FK_ID_PLEDGE       INTEGER                     ) ;
 
-- Entity - GL_CC_BudgeNote 
CREATE TABLE GL_CC_BUDGENOTE ( 
           ID                 INTEGER            NOT NULL, 
           USERNAME           TEXT( 50 )         NOT NULL, 
           CREATEDDATETIME    TEXT( 25 )                 , 
           z_NOTE             MEMO                       , 
           FK_ID_GLCOSTCENTER INTEGER            NOT NULL, 
           FK_ID_GLFISCALYEAR INTEGER            NOT NULL ) ;
 
-- Entity - GLAccountingPeriod 
CREATE TABLE GLACCOUNTINGPERIOD ( 
           ID                 INTEGER            NOT NULL, 
           SEQUENCENUMBER     INTEGER                    , 
           LABEL              TEXT( 20 )                 , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           CLOSED             TEXT( 1 )                  , 
           CLOSEDATE          DATE                       , 
           FK_ID_GLFISCALYEAR INTEGER                    , 
           FK_IDGLJOURNALENTR INTEGER                     ) ;
 
-- Entity - GLAccountingPeriodTotals 
CREATE TABLE GLACCOUNTINGPERIODTOTALS ( 
           ID                 INTEGER            NOT NULL, 
           OPENINGBALANCE     DOUBLE                     , 
           DEBITS             DOUBLE                     , 
           CREDITS            DOUBLE                     , 
           FK_ID_GLCHARTENTRY INTEGER            NOT NULL, 
           FKIDGLACCOUNTINGPE INTEGER            NOT NULL ) ;
 
-- Entity - GLAccountingProfile 
CREATE TABLE GLACCOUNTINGPROFILE ( 
           ID                 INTEGER            NOT NULL, 
           FISCALYEARENDMONTH INTEGER                    , 
           FISCALYEARENDDAY   INTEGER                    , 
           PERIODSPERYEAR     INTEGER                    , 
           EXPORTFILEPATH     TEXT( 254 )                , 
           FK_HOSTID_HOST     INTEGER                     ) ;
 
-- Entity - GLAccounts 
CREATE TABLE GLACCOUNTS ( 
           ID                 INTEGER            NOT NULL, 
           ACCOUNTNUMBER      TEXT( 254 )                , 
           GROUPHEADRACCNTNMB TEXT( 254 )                , 
           DESCRIPTION        TEXT( 254 )                , 
           TYPE               TEXT( 2 )                  , 
           GROUPONLY          TEXT( 1 )                  , 
           DISPLAYORDER       INTEGER                    , 
           BUDGETCONTROLLEDBY TEXT( 1 )                  , 
           REPORTDSPLYCNTRLTY TEXT( 1 )                  , 
           INACTIVE           TEXT( 1 )                  , 
           BUDGETGENERATIONTY TEXT( 1 )                  , 
           FKIDGLCHARTOFACCOU INTEGER                    , 
           FK_ID_GLACCOUNTS   INTEGER                     ) ;
 
-- Entity - GLAccountTransApplied 
CREATE TABLE GLACCOUNTTRANSAPPLIED ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           INSTRUMENT         TEXT( 1 )                  , 
           CHECKNUMBER        TEXT( 254 )                , 
           COMBINECODE        TEXT( 10 )                 , 
           POSTED             TEXT( 1 )                  , 
           DATEPOSTED         DATE                       , 
           DATEENTERED        DATE                       , 
           TRANSACTIONDATE    DATE                       , 
           DATESENTGL         DATE                       , 
           AMOUNT             DOUBLE                     , 
           JOURNAL            TEXT( 5 )                  , 
           CONTACTPERSON      TEXT( 254 )                , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_IDGLJOURNALENTR INTEGER                    , 
           CREDITIDGLCHARTENT INTEGER                    , 
           FK_ID_BATCHEDITLIS INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FKIDDEPOSITGROUPIN INTEGER                    , 
           DEBITIDGLCHARTENTR INTEGER                     ) ;
 
-- Entity - GLAnnualBudgetDetail 
CREATE TABLE GLANNUALBUDGETDETAIL ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           AMOUNT             DOUBLE                     , 
           FK_ID_GLBUDGETITEM INTEGER                     ) ;
 
-- Entity - GLAnnualBudgetReview 
CREATE TABLE GLANNUALBUDGETREVIEW ( 
           ID                 INTEGER            NOT NULL, 
           REVIEWEDDATE       DATE                       , 
           FKIDGLPROJECTCOMPO INTEGER                    , 
           FK_ID_GLBUDGETITEM INTEGER                     ) ;
 
-- Entity - GLBudget 
CREATE TABLE GLBUDGET ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           SALARYGENERTNNDDFL TEXT( 1 )                  , 
           REVENUEGENRTNNDDFL TEXT( 1 )                  , 
           SALARYRATIOFACULTY DOUBLE                     , 
           SALARYRATIOADMIN   DOUBLE                     , 
           SALARYRATIOHOURLY  DOUBLE                     , 
           FCLTYINCRMNTYRSOFS TEXT( 1 )                  , 
           BUDGETGENERATIONPR TEXT( 1 )                  , 
           BDGTGNRTNBWKLYSTRT DATE                       , 
           CREATEDDATE        DATE                       , 
           MODIFIEDDATE       DATE                       , 
           FK_ID_GLFISCALYEAR INTEGER                    , 
           DEFID_GLFISCALYEAR INTEGER                    , 
           FKIDSTANDARDSALARY INTEGER                     ) ;
 
-- Entity - GLBudgetDistRule 
CREATE TABLE GLBUDGETDISTRULE ( 
           ID                 INTEGER            NOT NULL, 
           z_NOTE             TEXT( 254 )                , 
           STARTPERIODSEQNUMB INTEGER                    , 
           PERIOD1PERCENT     DOUBLE                     , 
           PERIOD2PERCENT     DOUBLE                     , 
           PERIOD3PERCENT     DOUBLE                     , 
           PERIOD4PERCENT     DOUBLE                     , 
           PERIOD5PERCENT     DOUBLE                     , 
           PERIOD6PERCENT     DOUBLE                     , 
           PERIOD7PERCENT     DOUBLE                     , 
           PERIOD8PERCENT     DOUBLE                     , 
           PERIOD9PERCENT     DOUBLE                     , 
           PERIOD10PERCENT    DOUBLE                     , 
           PERIOD11PERCENT    DOUBLE                     , 
           PERIOD12PERCENT    DOUBLE                     , 
           PERIOD13PERCENT    DOUBLE                     , 
           FK_ID_GLCHARTENTRY INTEGER                     ) ;
 
-- Entity - GLBudgetItem 
CREATE TABLE GLBUDGETITEM ( 
           ID                 INTEGER            NOT NULL, 
           AMOUNTBUDGETED     DOUBLE                     , 
           AMOUNTREQUESTED    DOUBLE                     , 
           RQSTDTBDGTDPRCSDFL TEXT( 1 )                  , 
           ANNID_GLBUDGET     INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER                    , 
           FK_ID_GLBUDGET     INTEGER                    , 
           FKIDGLACCOUNTINGPE INTEGER                     ) ;
 
-- Entity - GLChartDefault 
CREATE TABLE GLCHARTDEFAULT ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 30 )                 , 
           FK_ID_GLCHARTENTRY INTEGER                    , 
           FKIDGLCHARTOFACCOU INTEGER            NOT NULL ) ;
 
-- Entity - GLChartEntry 
CREATE TABLE GLCHARTENTRY ( 
           ID                 INTEGER            NOT NULL, 
           CHARTENTRYCODE     TEXT( 254 )                , 
           ENTRYDESCRIPTION   TEXT( 254 )                , 
           SUBACCOUNTCODE     TEXT( 20 )                 , 
           USEINBUDGET        TEXT( 1 )                  , 
           TYPE               TEXT( 2 )                  , 
           ACTIVE             TEXT( 1 )                  , 
           CLOSINGFUNDFLAG    TEXT( 1 )                  , 
           UNRESTRCTDNTASSTFL TEXT( 1 )                  , 
           GROWTHDISTRIBUTNFL TEXT( 1 )                  , 
           FKCLEARSIDGLCHARTE INTEGER                    , 
           FKROLLUPIDGLCHARTE INTEGER                    , 
           FK_GRIDGLCHARTENTR INTEGER                    , 
           FK_ID_GLCOSTCENTER INTEGER                    , 
           FK_ID_GLFUND       INTEGER                    , 
           FKIDGLCHARTOFACCOU INTEGER                    , 
           FK_ID_GLACCOUNTS   INTEGER                     ) ;
 
-- Entity - GLChartOfAccounts 
CREATE TABLE GLCHARTOFACCOUNTS ( 
           ID                 INTEGER            NOT NULL, 
           ACCOUNTNUMBERSEPRT TEXT( 1 )                  , 
           DESCRIPTION        TEXT( 30 )         NOT NULL, 
           SHOWACCOUNTNUMBERA TEXT( 4 )                   ) ;
 
-- Entity - GLCostCenter 
CREATE TABLE GLCOSTCENTER ( 
           ID                 INTEGER            NOT NULL, 
           CODE               TEXT( 10 )                 , 
           DESCRIPTION        TEXT( 254 )                , 
           FK_ID_Z_USER       INTEGER                    , 
           RUID_Z_USER        INTEGER                    , 
           FK_ID_DIVISION     INTEGER                     ) ;
 
-- Entity - GLCostCenterBudget 
CREATE TABLE GLCOSTCENTERBUDGET ( 
           ID                 INTEGER            NOT NULL, 
           BUDGETSTATUS       TEXT( 1 )                  , 
           BUDGETSTATUSNOTE   MEMO                       , 
           FK_ID_GLCOSTCENTER INTEGER                    , 
           FK_ID_GLFISCALYEAR INTEGER                     ) ;
 
-- Entity - GLCostCenterBudgetReview 
CREATE TABLE GLCOSTCENTERBUDGETREVIEW ( 
           ID                 INTEGER            NOT NULL, 
           REVIEWEDDATE       DATE                       , 
           REVIEWEDSTATUS     TEXT( 1 )                  , 
           AUTOSEQ            INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_GLFISCALYEAR INTEGER                    , 
           FK_ID_GLCOSTCENTER INTEGER                     ) ;
 
-- Entity - GLFileImport 
CREATE TABLE GLFILEIMPORT ( 
           ID                 INTEGER            NOT NULL, 
           IMPORTDATE         DATE               NOT NULL, 
           FILETYPE           TEXT( 254 )                , 
           FILENAME           TEXT( 254 )                , 
           STARTDATE          DATE                       , 
           ENDDATE            DATE                        ) ;
 
-- Entity - GLFileImportLine 
CREATE TABLE GLFILEIMPORTLINE ( 
           ID                 INTEGER            NOT NULL, 
           LINENUMBER         INTEGER                    , 
           LINELENGTH         INTEGER                    , 
           LINETEXT           TEXT( 254 )                , 
           z_DATE             DATE                       , 
           TYPE               TEXT( 50 )                 , 
           DESCRIPTION        MEMO                       , 
           BANKREF            TEXT( 254 )                , 
           CUSTOMERREF        TEXT( 254 )                , 
           DEBIT              DOUBLE                     , 
           CREDIT             DOUBLE                     , 
           WMARKEDCLEARED     TEXT( 1 )                  , 
           WCREATENEW         TEXT( 1 )                  , 
           FK_ID_GLFILEIMPORT INTEGER                     ) ;
 
-- Entity - GLFiscalYear 
CREATE TABLE GLFISCALYEAR ( 
           ID                 INTEGER            NOT NULL, 
           FISCALYEAR         INTEGER                    , 
           FISCALYEARLABEL    TEXT( 254 )                , 
           FYBEGINDATE        DATE                       , 
           FYENDDATE          DATE                       , 
           PERIODSPERYEAR     INTEGER                    , 
           OPENFORBUDGETMDFCT TEXT( 1 )                   ) ;
 
-- Entity - GLFund 
CREATE TABLE GLFUND ( 
           ID                 INTEGER            NOT NULL, 
           CODE               TEXT( 10 )                 , 
           DESCRIPTION        TEXT( 254 )                , 
           FUNDTYPE           TEXT( 10 )                  ) ;
 
-- Entity - GLJournal 
CREATE TABLE GLJOURNAL ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 254 )                , 
           CODE               TEXT( 10 )                 , 
           JOURNALTYPE        TEXT( 2 )                   ) ;
 
-- Entity - GLJournalEntry 
CREATE TABLE GLJOURNALENTRY ( 
           ID                 INTEGER            NOT NULL, 
           MODIFYDATE         TEXT( 25 )                 , 
           DESCRIPTION        TEXT( 254 )                , 
           JOURNALREFERENCE   INTEGER                    , 
           TRANSACTIONDATE    DATE                       , 
           POSTDATE           DATE                       , 
           POSTED             TEXT( 1 )                  , 
           ENTEREDDATE        DATE                       , 
           DEBITS             DOUBLE                     , 
           CREDITS            DOUBLE                     , 
           PERIODSELECTION    TEXT( 1 )                  , 
           FKIDFINANCIALACCOU INTEGER                    , 
           FK_ID_BATCHEDITLIS INTEGER                    , 
           FK_ID_GLJOURNAL    INTEGER                    , 
           UNRIDGLACCOUNTINGP INTEGER                    , 
           HASIDGLACCOUNTINGP INTEGER                     ) ;
 
-- Entity - GLJournalEntryDetail 
CREATE TABLE GLJOURNALENTRYDETAIL ( 
           ID                 INTEGER            NOT NULL, 
           CHARTREFERENCE     TEXT( 254 )                , 
           REFERENCE          TEXT( 254 )                , 
           FYREFERENCE        INTEGER                    , 
           POSTDATE           DATE                       , 
           TRANSACTIONDATE    DATE                       , 
           CREDITAMOUNT       DOUBLE                     , 
           DEBITAMOUNT        DOUBLE                     , 
           DESCRIPTION        TEXT( 254 )                , 
           MODIFYDATE         TEXT( 25 )                 , 
           ENTRYDATE          TEXT( 25 )                 , 
           SEQNUMBER          INTEGER                    , 
           FK_ID_GLPROJECT    INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_Z_USER02     INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER            NOT NULL, 
           FK_IDGLJOURNALENTR INTEGER                     ) ;
 
-- Entity - GLJournalEntryTrace 
CREATE TABLE GLJOURNALENTRYTRACE ( 
           ID                 INTEGER            NOT NULL, 
           JE_DESCRIPTION     TEXT( 254 )                , 
           JE_TRANSACTIONDATE DATE                       , 
           JE_POSTDATE        DATE                       , 
           JE_ENTEREDDATE     DATE                       , 
           JE_DEBITS          DOUBLE                     , 
           JE_CREDITS         DOUBLE                     , 
           DATETIMESTAMP      TEXT( 25 )                 , 
           USERNAME           TEXT( 50 )                 , 
           CALLINGOPERATIONNA TEXT( 50 )                 , 
           JOURNALENTRYBLOBOI LONGBINARY                 , 
           DELETEDFLAG        TEXT( 1 )                  , 
           FK_IDGLJOURNALENTR INTEGER            NOT NULL ) ;
 
-- Entity - GLJournalRefCount 
CREATE TABLE GLJOURNALREFCOUNT ( 
           LASTREFCOUNT       INTEGER                    , 
           FK_ID_GLJOURNAL    INTEGER                    , 
           FK_ID_GLFISCALYEAR INTEGER                     ) ;
 
-- Entity - GLProject 
CREATE TABLE GLPROJECT ( 
           ID                 INTEGER            NOT NULL, 
           PROJECTNAME        TEXT( 254 )                , 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           z_NOTE             MEMO                        ) ;
 
-- Entity - GLProjectComponent 
CREATE TABLE GLPROJECTCOMPONENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           PRIORITY           INTEGER                    , 
           z_NOTE             MEMO                       , 
           FK_ID_GLPROJECT    INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - GLProjectComponentBudget 
CREATE TABLE GLPROJECTCOMPONENTBUDGET ( 
           ID                 INTEGER            NOT NULL, 
           AMOUNTBUDGETED     DOUBLE                     , 
           AMOUNTREQUESTED    DOUBLE                     , 
           QUANTITY           INTEGER                    , 
           PRICEPERITEM       DOUBLE                     , 
           z_NOTE             MEMO                       , 
           FK_ID_GLBUDGETITEM INTEGER            NOT NULL, 
           FKIDGLPROJECTCOMPO INTEGER            NOT NULL ) ;
 
-- Entity - GLRecurringJournalEntries 
CREATE TABLE GLRECURRINGJOURNALENTRIES ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           TRANSACTIONNUMBER  INTEGER                    , 
           NEXTAPPLYDATE      DATE                       , 
           ENTEREDDATE        DATE                       , 
           LASTAPPLIEDDATE    DATE                       , 
           DAYSTORECURRENCE   INTEGER                    , 
           APLYLSTBSNSDTOFMNT TEXT( 1 )                  , 
           FREQUENCY          TEXT( 1 )                  , 
           TIMESTOAPPLY       INTEGER                    , 
           TIMESREMAINNGTAPPL INTEGER                    , 
           BLANKAFTERPOST     TEXT( 1 )                  , 
           DEBITS             DOUBLE                     , 
           CREDITS            DOUBLE                     , 
           FK_ID_GLJOURNAL    INTEGER                     ) ;
 
-- Entity - GLRecurringJournalEntryDetail 
CREATE TABLE GLRECURRINGJOURNALENTRYDETAIL ( 
           ID                 INTEGER            NOT NULL, 
           CREDITAMOUNT       DOUBLE                     , 
           DEBITAMOUNT        DOUBLE                     , 
           DESCRIPTION        TEXT( 254 )                , 
           MODIFYDATE         TEXT( 25 )                 , 
           ENTRYDATE          TEXT( 25 )                 , 
           SEQNUMBER          INTEGER                    , 
           FKIDGLRECURRINGJOU INTEGER            NOT NULL, 
           FK_ID_GLCHARTENTRY INTEGER                     ) ;
 
-- Entity - GLReportSection 
CREATE TABLE GLREPORTSECTION ( 
           ID                 INTEGER            NOT NULL, 
           SECTIONNAME        TEXT( 254 )                , 
           SECTIONCODE        TEXT( 10 )                 , 
           SECTIONGROUP       TEXT( 10 )                 , 
           FK_ID_REPORT       INTEGER                     ) ;
 
-- Entity - GLStoreCode 
CREATE TABLE GLSTORECODE ( 
           ID                 INTEGER            NOT NULL, 
           STORECODE          TEXT( 5 )                  , 
           DESCRIPTION        TEXT( 254 )                , 
           DEBITIDGLCHARTENTR INTEGER                    , 
           CREDITIDGLCHARTENT INTEGER                     ) ;
 
-- Entity - GLStoreReport 
CREATE TABLE GLSTOREREPORT ( 
           ID                 INTEGER            NOT NULL, 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           RECONCILEDATE      DATE                       , 
           z_NOTE             MEMO                       , 
           TOTALNETSALES      DOUBLE                     , 
           TOTALTAXABLESALES  DOUBLE                     , 
           RECEIVEDONACCOUNT  DOUBLE                     , 
           PAIDOUTCASH        DOUBLE                     , 
           STUDENTCHARGES     DOUBLE                     , 
           DEPARTMENTCHARGES  DOUBLE                     , 
           CAMPUSORGCHARGES   DOUBLE                     , 
           CHARGESMCVISA      DOUBLE                     , 
           RETURNS            DOUBLE                     , 
           DISCOUNTS          DOUBLE                     , 
           CREDITTAX          DOUBLE                     , 
           CASHINDRAWER       DOUBLE                     , 
           CHECKSINDRAWER     DOUBLE                     , 
           STARTINGCASH       DOUBLE                     , 
           CASHINDRAWERFINAL  DOUBLE                     , 
           ACTUALCASH         DOUBLE                     , 
           OVERSHORT          DOUBLE                     , 
           DEPOSITCASH        DOUBLE                     , 
           DEPOSITCHECKS      DOUBLE                     , 
           PETTYCASHLEFTINDRW DOUBLE                     , 
           FK_ID_BATCHEDITLIS INTEGER                     ) ;
 
-- Entity - GradeScale 
CREATE TABLE GRADESCALE ( 
           ID                 INTEGER            NOT NULL ) ;
 
-- Entity - GradeScaleValues 
CREATE TABLE GRADESCALEVALUES ( 
           ID                 INTEGER            NOT NULL, 
           CLASSGRADE         TEXT( 3 )                  , 
           LOWVALUE           DOUBLE                     , 
           HIGHVALUE          DOUBLE                     , 
           FK_ID_GRADESCALE   INTEGER            NOT NULL ) ;
 
-- Entity - GraduationDate 
CREATE TABLE GRADUATIONDATE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           z_DATE             DATE                       , 
           z_YEAR             TEXT( 4 )                  , 
           CEREMONYFLAG       TEXT( 1 )                  , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           DEGREECANDDCYDDLND DATE                        ) ;
 
-- Entity - HealthInformation 
CREATE TABLE HEALTHINFORMATION ( 
           ID                 INTEGER            NOT NULL, 
           ISEXAMONFILE       TEXT( 1 )                  , 
           SERIOUSHELTHISSSFL TEXT( 1 )                  , 
           SPECIALMEDICINEFLA TEXT( 1 )                  , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - Host 
CREATE TABLE HOST ( 
           HOSTID             INTEGER            NOT NULL, 
           HOSTNAME           TEXT( 50 )         NOT NULL, 
           FEDERALIDNTFCTNNMB TEXT( 9 )                  , 
           FORMINPUTPASSWORD  TEXT( 20 )                 , 
           IRS_CONTACTPHONNMB TEXT( 10 )                 , 
           SMTPSERVER         TEXT( 254 )                , 
           SCANPATH           TEXT( 254 )                , 
           MXMSSNGCRDTSTPRTCP INTEGER                    , 
           GENERATESALRYBDGTN MEMO                       , 
           BUDGETVARNCCC_PRCN DOUBLE                     , 
           BUDGTVRNCACCNTPRCN DOUBLE                     , 
           BDGTVRNCNLLBDGTAMN DOUBLE                     , 
           AD_AUTHENTICTNPTHN TEXT( 254 )                , 
           ADATHNTCTNUSRNMPRF TEXT( 254 )                , 
           DEGREEAUDTWRNNGMSS MEMO                       , 
           AD_ADMINACCOUNT    TEXT( 254 )                , 
           AD_ADMINPASSWORD   TEXT( 20 )                 , 
           WEBAPPLICATIONNAME TEXT( 254 )                , 
           OPE_LOANCODE       TEXT( 8 )                  , 
           OPE_LOANCODEBRNCHI TEXT( 4 )                  , 
           COMMONLINEFILESRCN TEXT( 32 )                 , 
           COMMONLINEFILSCHLI TEXT( 8 )                  , 
           COMMONLINFLADVLSFL TEXT( 1 )                  , 
           LOANLETTEREMALTMPL MEMO                       , 
           CLEARINGHOUSFICE_C TEXT( 6 )                  , 
           TRANSCRIPTONDEMNDK TEXT( 40 )                 , 
           TRNSCRPTONDMNDSCHL TEXT( 6 )                  , 
           BILLINGPHONENUMBER TEXT( 10 )                 , 
           BILLINGFAXNUMBER   TEXT( 10 )                 , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                  ) ;
 
-- Entity - HostStandardTexts 
CREATE TABLE HOSTSTANDARDTEXTS ( 
           ID                 INTEGER            NOT NULL, 
           ONLINAPPLCTNEMLRPL MEMO                       , 
           FK_HOSTID_HOST     INTEGER            NOT NULL ) ;
 
-- Entity - HostStudentClassificationData 
CREATE TABLE HOSTSTUDENTCLASSIFICATIONDATA ( 
           ID                 INTEGER            NOT NULL, 
           STUDENTCLASSIFICAT TEXT( 5 )                  , 
           MINCREDTSFRCLSSFCT DOUBLE                     , 
           FK_HOSTID_HOST     INTEGER            NOT NULL ) ;
 
-- Entity - HR_Position 
CREATE TABLE HR_POSITION ( 
           ID                 INTEGER            NOT NULL, 
           TITLE              TEXT( 254 )                , 
           STATUS             TEXT( 1 )                  , 
           z_NOTE             MEMO                        ) ;
 
-- Entity - HS_CourseEntry 
CREATE TABLE HS_COURSEENTRY ( 
           ID                 INTEGER            NOT NULL, 
           CLASSGRADE         TEXT( 3 )                  , 
           HS_CLASSIFICATION  TEXT( 1 )                  , 
           AUTOSEQ            INTEGER                    , 
           FKIDHSSTANDARDCOUR INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - HS_StandardCourse 
CREATE TABLE HS_STANDARDCOURSE ( 
           ID                 INTEGER            NOT NULL, 
           SUBJECTAREA        TEXT( 1 )                  , 
           TITLE              TEXT( 100 )                , 
           LS_ID              TEXT( 3 )                   ) ;
 
-- Entity - ImportTable 
CREATE TABLE IMPORTTABLE ( 
           ID                 INTEGER            NOT NULL, 
           LASTNAME           TEXT( 254 )                , 
           FIRSTNAME          TEXT( 254 )                , 
           MI                 TEXT( 254 )                , 
           DIST               TEXT( 254 )                , 
           CHURCH             TEXT( 254 )                , 
           ROLE               TEXT( 254 )                , 
           ADDRESS1           TEXT( 254 )                , 
           CITY               TEXT( 254 )                , 
           STATE              TEXT( 254 )                , 
           ZIP                TEXT( 254 )                , 
           HOMEPHONE          TEXT( 254 )                , 
           PERSONID           TEXT( 254 )                , 
           CHURCHID           TEXT( 254 )                 ) ;
 
-- Entity - Influencer 
CREATE TABLE INFLUENCER ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 30 )                 , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - Interest 
CREATE TABLE INTEREST ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 254 )                , 
           SPECIFICINTEREST   TEXT( 254 )                , 
           FK_ID_PROSPECT     INTEGER                     ) ;
 
-- Entity - InternalRuleVariableDef 
CREATE TABLE INTERNALRULEVARIABLEDEF ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           AUTOSEQ            INTEGER                    , 
           FKIDSATRANSACTIONC INTEGER            NOT NULL ) ;
 
-- Entity - Involvement 
CREATE TABLE INVOLVEMENT ( 
           ID                 INTEGER            NOT NULL, 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           DONODSPLYONTRNSCRP TEXT( 1 )                  , 
           FKIDEXTRACURRICULA INTEGER                    , 
           FK_ID_COLLEGEYEAR  INTEGER                    , 
           FKIDEXTRACURRICU02 INTEGER                    , 
           FKIDEXTRACURRICU03 INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - LegacyTranscriptGroup 
CREATE TABLE LEGACYTRANSCRIPTGROUP ( 
           ID                 INTEGER            NOT NULL, 
           LOCATIONFLAG       TEXT( 1 )                  , 
           TERMCODE           TEXT( 5 )                  , 
           GRADUATECOLLEGEFLA TEXT( 1 )                  , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER                     ) ;
 
-- Entity - LegacyTranscriptGroupLine 
CREATE TABLE LEGACYTRANSCRIPTGROUPLINE ( 
           ID                 INTEGER            NOT NULL, 
           LINETEXT           TEXT( 254 )                , 
           AUTOSEQ            INTEGER                    , 
           FKIDLEGACYTRANSCRI INTEGER            NOT NULL ) ;
 
-- Entity - LegacyTranscriptLine 
CREATE TABLE LEGACYTRANSCRIPTLINE ( 
           ID                 INTEGER            NOT NULL, 
           LINETEXT           TEXT( 254 )                , 
           LOCATIONFLAG       TEXT( 1 )                  , 
           TERMCODE           TEXT( 5 )                  , 
           SUMATTEMPTEDCREDIT DOUBLE                     , 
           SUMEARNEDCREDITS   DOUBLE                     , 
           SUMGPA_DIVISOR     DOUBLE                     , 
           SUMGRADEPOINTS     DOUBLE                     , 
           AUTOSEQ            INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - Mailing 
CREATE TABLE MAILING ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           DOCUMNTGNRTNSRTOPT TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           UPDATEABLEQUERYFLA TEXT( 1 )                  , 
           SSNLADDRSSDTINCRMN INTEGER                    , 
           GENRTCNTCTACTVTYFL TEXT( 1 )                  , 
           FK_ID_STOREDQUERY  INTEGER                    , 
           FK_ID_DOCUMENT     INTEGER                    , 
           FK_ID_EVENT        INTEGER                     ) ;
 
-- Entity - MailingGroup 
CREATE TABLE MAILINGGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           DESCRIPTION        MEMO                       , 
           FUNCTIONALAREANAME TEXT( 30 )                 , 
           FK_ID_Z_USER       INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_USERGROUP    INTEGER                     ) ;
 
-- Entity - ManuallySatisfied 
CREATE TABLE MANUALLYSATISFIED ( 
           ID                 INTEGER            NOT NULL, 
           SATISFIEDREASON    TEXT( 50 )                 , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_REQUIREDGROU INTEGER            NOT NULL, 
           FK_ID_DEGREETRACK  INTEGER            NOT NULL ) ;
 
-- Entity - MatchingGiftProgram 
CREATE TABLE MATCHINGGIFTPROGRAM ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )         NOT NULL, 
           DESCRIPTION        MEMO                       , 
           RATIO              TEXT( 254 )                , 
           MATCHPERCENTAGE    DOUBLE                     , 
           MINMATCHAMOUNT     DOUBLE                     , 
           MAXPEREMPLOYEE     DOUBLE                     , 
           MAXPERINSTITUTION  DOUBLE                     , 
           SPOUSEMATCH        TEXT( 1 )                  , 
           MATCHCATEGORY      TEXT( 254 )                , 
           MATCHDEADLINE      DATE                       , 
           CONTACTPERSON      TEXT( 50 )                 , 
           CONTACTTITLE       TEXT( 50 )                 , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_ORGANIZATION INTEGER                     ) ;
 
-- Entity - MealPlan 
CREATE TABLE MEALPLAN ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 254 )                , 
           DESCRIPTION        TEXT( 254 )                , 
           GENERALTYPE        TEXT( 10 )                 , 
           SEMESTER           TEXT( 2 )                  , 
           DEFAULTPLAN        TEXT( 1 )                  , 
           NUMBEROFMEALS      INTEGER                    , 
           RESIDENTPLAN       TEXT( 1 )                  , 
           COMMUTERPLAN       TEXT( 1 )                  , 
           FKIDSATRANSACTIONC INTEGER                     ) ;
 
-- Entity - MedicalCode 
CREATE TABLE MEDICALCODE ( 
           ID                 INTEGER            NOT NULL, 
           CODE               TEXT( 15 )                 , 
           DESCRIPTION        TEXT( 50 )                 , 
           MEDICALPLANCOST    DOUBLE                     , 
           z_YEAR             TEXT( 4 )                  , 
           FUNCTIONALAREAFLAG TEXT( 1 )                  , 
           NMBROFEMPLYSUSNGCN INTEGER                    , 
           FK_ID_GLBUDGET     INTEGER                     ) ;
 
-- Entity - MeetingParticipant 
CREATE TABLE MEETINGPARTICIPANT ( 
           ID                 INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_EVENT        INTEGER            NOT NULL ) ;
 
-- Entity - NonMatchingID 
CREATE TABLE NONMATCHINGID ( 
           ID                 INTEGER            NOT NULL, 
           CAMPUSID           TEXT( 9 )                  , 
           PERSONNAME         TEXT( 50 )                 , 
           FK_ID_CHAPELSESSIO INTEGER            NOT NULL ) ;
 
-- Entity - OccupantUnit 
CREATE TABLE OCCUPANTUNIT ( 
           ID                 INTEGER            NOT NULL, 
           PHONENO            TEXT( 10 )                 , 
           BED                TEXT( 10 )                 , 
           LS_ROOMBEDNUMBER   TEXT( 4 )                  , 
           FK_ID_ROOM         INTEGER            NOT NULL ) ;
 
-- Entity - Organization 
CREATE TABLE ORGANIZATION ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           PREVIOUSNAME       TEXT( 254 )                , 
           SALUTATION         TEXT( 50 )                 , 
           PHONE              TEXT( 10 )                 , 
           z_NOTE             MEMO                       , 
           WEBSITE            TEXT( 254 )                , 
           INDUSTRY           TEXT( 20 )                 , 
           MATCHINGGIFTS      TEXT( 1 )                  , 
           ANNUALREVENUE      DOUBLE                     , 
           YEARFOUNDED        TEXT( 4 )                  , 
           NUMBEREMPLOYEES    INTEGER                    , 
           CALLBACKDATE       DATE                       , 
           FOLLOWUPACTION     TEXT( 10 )                 , 
           CURRENTINTERESTLEV TEXT( 10 )                 , 
           RESPONSETOCONTACT  TEXT( 10 )                 , 
           TUTNRMBRSMNTINFRMT TEXT( 254 )                , 
           TUITIONDISCOUNT    DOUBLE                     , 
           OLDORGID           TEXT( 254 )                , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_VENDOR       INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_ADDRESS      INTEGER                     ) ;
 
-- Entity - OrganizationalEvent 
CREATE TABLE ORGANIZATIONALEVENT ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 2 )                  , 
           COMPLETEDDATETIME  TEXT( 25 )                 , 
           z_NOTE             MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_EVENT        INTEGER                    , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_SCHOOL       INTEGER                    , 
           FK_ID_CHURCH       INTEGER                     ) ;
 
-- Entity - OrgPersonRole 
CREATE TABLE ORGPERSONROLE ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 30 )                 , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - OverrideChapelRequirement 
CREATE TABLE OVERRIDECHAPELREQUIREMENT ( 
           ID                 INTEGER            NOT NULL, 
           NMBROFCHPLSRQRDFRT INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
-- Entity - PaymentMethod 
CREATE TABLE PAYMENTMETHOD ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 2 )                  , 
           z_PERCENT          DOUBLE                     , 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
-- Entity - PaymentPlan 
CREATE TABLE PAYMENTPLAN ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 254 )        NOT NULL, 
           DESCRIPTION        MEMO                       , 
           ACTIVE             TEXT( 1 )                  , 
           NUMBEROFPAYMENTS   INTEGER                    , 
           FIRSTPAYMENTAMOUNT DOUBLE                     , 
           FIRSTPAYMENTPERCNT DOUBLE                     , 
           FK_ID_COLLEGETERM  INTEGER                     ) ;
 
-- Entity - PaymentPlanLine 
CREATE TABLE PAYMENTPLANLINE ( 
           ID                 INTEGER            NOT NULL, 
           PAYMENTNUMBER      INTEGER                    , 
           PAYMENTAMOUNT      DOUBLE                     , 
           PAYMENTPERCENT     DOUBLE                     , 
           DUEDATE            DATE                       , 
           FK_ID_PAYMENTPLAN  INTEGER                     ) ;
 
-- Entity - PaymentPlanLineAssigned 
CREATE TABLE PAYMENTPLANLINEASSIGNED ( 
           ID                 INTEGER            NOT NULL, 
           PAYMENTNUMBER      INTEGER                    , 
           DUEDATE            DATE                       , 
           PAIDDATE           DATE                       , 
           PAIDAMOUNT         DOUBLE                     , 
           FK_ID_PAYMENTPLAN  INTEGER                    , 
           FK_ID_BILLINGPERIO INTEGER                     ) ;
 
-- Entity - Person 
CREATE TABLE PERSON ( 
           ID                 INTEGER            NOT NULL, 
           LASTNAME           TEXT( 50 )                 , 
           FIRSTNAME          TEXT( 50 )                 , 
           MIDDLENAME         TEXT( 50 )                 , 
           SUFFIX             TEXT( 50 )                 , 
           PREFIX             TEXT( 50 )                 , 
           PREFEREDFIRSTNAME  TEXT( 50 )                 , 
           PREVIOUSNAME       TEXT( 50 )                 , 
           MAIDENNAME         TEXT( 254 )                , 
           SALUTATION         TEXT( 5 )                  , 
           GENDER             TEXT( 1 )                  , 
           STATUS             TEXT( 3 )                  , 
           MARITALSTATUS      TEXT( 1 )                  , 
           MARITALSTATUSDATE  DATE                       , 
           HOMEPHONE          TEXT( 10 )                 , 
           WORKPHONE          TEXT( 10 )                 , 
           FAX                TEXT( 10 )                 , 
           MOBILEPHONE        TEXT( 10 )                 , 
           INTERNATIONALHOMPH TEXT( 254 )                , 
           INTERNATIONALWRKPH TEXT( 254 )                , 
           INTERNATIONALMBLPH TEXT( 254 )                , 
           EXTENSION          TEXT( 30 )                 , 
           EMAILADDRESS       TEXT( 128 )                , 
           WORKEMAILADDRESS   TEXT( 128 )                , 
           PARENTSEMAILADDRES TEXT( 128 )                , 
           TITLE              TEXT( 50 )                 , 
           SSN                TEXT( 15 )                 , 
           FISCALIDRG         TEXT( 9 )                  , 
           DATEOFBIRTH        DATE                       , 
           OCCUPATION         TEXT( 254 )                , 
           OCCUPATIONCODE     TEXT( 254 )                , 
           z_NOTE             MEMO                       , 
           RETIREDPASTORFLAG  TEXT( 1 )                  , 
           CONTACTPREFERENCE  TEXT( 20 )                 , 
           CALLBACKDATE       DATE                       , 
           DECEASED           TEXT( 1 )                  , 
           DECEASEDDATE       DATE                       , 
           MASTERPRMSSRYSGNDD DATE                       , 
           EMERGENCYCONTACTNA TEXT( 50 )                 , 
           EMERGENCYCNTCTHMPH TEXT( 254 )                , 
           EMERGNCYCNTCTWRKPH TEXT( 254 )                , 
           EMERGNCYCNTCTMBLPH TEXT( 254 )                , 
           EMRGNCYCNTCTRLTNSH TEXT( 50 )                 , 
           EMRGNCYCNTCTADRSLN TEXT( 50 )                 , 
           EMRGNCYCNTCTADRSCT TEXT( 100 )                , 
           EMRGNCYCNTCTADDRSS TEXT( 254 )                , 
           EMRGNCYCNTCTADRSZP TEXT( 10 )                 , 
           EMERGENCYCONTACTNO MEMO                       , 
           CONVERTEDSTRING    MEMO                       , 
           CONVERTEDKEY       TEXT( 9 )                  , 
           CAMPUSID           TEXT( 9 )                  , 
           HIDESSN            TEXT( 1 )                  , 
           WEBPASSWORD        TEXT( 50 )                 , 
           USERNAME           TEXT( 50 )                 , 
           LASTDUPLICTANLYZDD DATE                       , 
           DRIVERSLICENSENUMB TEXT( 20 )                 , 
           DRIVERSLICENSESTAT TEXT( 2 )                  , 
           CHURCHDENOMINATION TEXT( 3 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           MAJORNAME          TEXT( 50 )                 , 
           CIP_SUBCATEGORY    TEXT( 15 )                 , 
           FKIDEXTRACURRICULA INTEGER                    , 
           FK_ID_TRUSTEE      INTEGER                    , 
           FK_ID_FINAIDPROFIL INTEGER                    , 
           FK_ID_DONOR        INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_ADDRESS      INTEGER                    , 
           FK_ID_CHURCH       INTEGER                     ) ;
 
-- Entity - PersonalDataModification 
CREATE TABLE PERSONALDATAMODIFICATION ( 
           ID                 INTEGER            NOT NULL, 
           ORIGINALLEGALNAME  TEXT( 50 )                 , 
           NEWLEGALNAME       TEXT( 50 )                 , 
           ORIGINALSSN        TEXT( 9 )                  , 
           NEWSSN             TEXT( 9 )                  , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - PersonAttributeModification 
CREATE TABLE PERSONATTRIBUTEMODIFICATION ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 10 )         NOT NULL, 
           FUNCTIONALAREA     TEXT( 50 )                 , 
           PRIORDATAVALUE     TEXT( 254 )                , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
-- Entity - PersonMergeHistory 
CREATE TABLE PERSONMERGEHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           z_DATETIME         TEXT( 25 )                 , 
           SOURCEPERSONBLOB   LONGBINARY                 , 
           TARGETPERSONBLOB   LONGBINARY                 , 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_BATCHITEM    INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - PersonReference 
CREATE TABLE PERSONREFERENCE ( 
           ID                 INTEGER            NOT NULL, 
           REFERENCERLTNSHPTY TEXT( 10 )                 , 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_PERSON02     INTEGER            NOT NULL ) ;
 
-- Entity - PersonRole 
CREATE TABLE PERSONROLE ( 
           ID                 INTEGER            NOT NULL, 
           ROLE               TEXT( 1 )          NOT NULL, 
           LIVESWITH          TEXT( 1 )                  , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_PERSON02     INTEGER                     ) ;
 
-- Entity - PersonViewsStudent 
CREATE TABLE PERSONVIEWSSTUDENT ( 
           ID                 INTEGER            NOT NULL, 
           LASTDATEVIEWABLED  DATE                       , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - Pledge 
CREATE TABLE PLEDGE ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 10 )                 , 
           DESCRIPTION        MEMO                       , 
           PLEDGEAMOUNT       DOUBLE                     , 
           PLEDGEDATE         DATE                       , 
           PAYMENTFREQUENCY   TEXT( 10 )                 , 
           COMPLETED          TEXT( 1 )                  , 
           BEGINPAYMENTDATE   DATE                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           CONVERTEDSTRING    MEMO                       , 
           CONVERTEDKEY       TEXT( 12 )                 , 
           FK_ID_EVENT        INTEGER                    , 
           FK_ID_FUND         INTEGER                    , 
           FK_ID_DONOR        INTEGER            NOT NULL ) ;
 
-- Entity - PO_Approval 
CREATE TABLE PO_APPROVAL ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 1 )                  , 
           APPROVALDATE       DATE                       , 
           z_NOTE             MEMO                       , 
           AUTOSEQ            INTEGER                    , 
           FKIDFINANCIALAPPRO INTEGER            NOT NULL, 
           FK_ID_PURCHASEORDE INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - PO_LineItem 
CREATE TABLE PO_LINEITEM ( 
           ID                 INTEGER            NOT NULL, 
           LINENUMBER         INTEGER                    , 
           ITEMNUMBER         TEXT( 50 )                 , 
           QUANTITY           DOUBLE                     , 
           ITEMCOSTPERUNIT    DOUBLE                     , 
           AMOUNT             DOUBLE                     , 
           REMAINNGENCMBRDAMN DOUBLE                     , 
           ITEMDESCRIPTION    TEXT( 50 )                 , 
           ITEMSRECEIVEDFLAG  TEXT( 1 )                  , 
           FK_ID_PURCHASEORDE INTEGER            NOT NULL, 
           FK_ID_GLCHARTENTRY INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_GLBUDGETITEM INTEGER                    , 
           FKIDGLPROJECTCOMPO INTEGER                     ) ;
 
-- Entity - PotentialGift 
CREATE TABLE POTENTIALGIFT ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        MEMO                       , 
           SEQUENCENUMBER     INTEGER                    , 
           AMOUNTEXPECTED     DOUBLE                     , 
           AMOUNTRECEIVED     DOUBLE                     , 
           CLOSED             TEXT( 1 )                  , 
           EXPECTEDDATE       DATE                       , 
           FIRSTRECEIVEDDATE  DATE                       , 
           GIFTTYPE           TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           CONVERTEDSTRING    MEMO                       , 
           CONVERTEDKEY       TEXT( 9 )                  , 
           FK_ID_POTENTIALGIF INTEGER                    , 
           FK_ID_DONOR        INTEGER                    , 
           FK_ID_GIFT         INTEGER                    , 
           FK_ID_PLEDGE       INTEGER                    , 
           FK_ID_FUND         INTEGER                     ) ;
 
-- Entity - PresentationObjectInstance 
CREATE TABLE PRESENTATIONOBJECTINSTANCE ( 
           ID                 INTEGER            NOT NULL, 
           OBJECTINSTANCEBLOB LONGBINARY                 , 
           CREATEDDATE        DATE                       , 
           FKIDDASHBOARDFRAME INTEGER                     ) ;
 
-- Entity - PriorEducation 
CREATE TABLE PRIOREDUCATION ( 
           ID                 INTEGER            NOT NULL, 
           ADMSSNSTRNSCRPTSTT TEXT( 1 )                  , 
           LASTYEARATTENDED   TEXT( 4 )                  , 
           DEGREEEARNED       TEXT( 10 )                 , 
           DEGREEEARNEDDATE   DATE                       , 
           TRANSCRIPTRECEIVDD DATE                       , 
           UNFCLTRNSCRPTRCVDD DATE                       , 
           TRANSFERCREDITSIN  DOUBLE                     , 
           GRADEPOINTAVERAGE  DOUBLE                     , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_SCHOOL       INTEGER                     ) ;
 
-- Entity - Program 
CREATE TABLE PROGRAM ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           PROGRAMLEVEL       TEXT( 2 )                  , 
           DESCRIPTION        MEMO                       , 
           EXCLDFRMCLRNGHSRPR TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL ) ;
 
-- Entity - ProgramForCourse 
CREATE TABLE PROGRAMFORCOURSE ( 
           ID                 INTEGER            NOT NULL, 
           ESTIMATEDRETENTINR DOUBLE                     , 
           ESTIMATEDCLASSDURT INTEGER                    , 
           ESTIMATDBTWNCLSSPR INTEGER                    , 
           FK_ID_PROGRAM      INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
-- Entity - ProposedEnrollment 
CREATE TABLE PROPOSEDENROLLMENT ( 
           ID                 INTEGER            NOT NULL, 
           CREDITHOURS        DOUBLE                     , 
           CREATIONDATETIME   TEXT( 25 )                 , 
           DELETEENTRYFLAG    TEXT( 1 )                  , 
           DELETEDREGISTRATNI INTEGER                    , 
           FKIDPROPOSEDSCHEDU INTEGER                    , 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_STUDENT      INTEGER                     ) ;
 
-- Entity - ProposedScheduleHistory 
CREATE TABLE PROPOSEDSCHEDULEHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           z_NOTE             MEMO                       , 
           SUBMITDATETIME     TEXT( 25 )                 , 
           SCHEDULEPROCSSDDTT TEXT( 25 )                 , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - Prospect 
CREATE TABLE PROSPECT ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 2 )          NOT NULL, 
           STATUS             TEXT( 1 )          NOT NULL, 
           RANKING            TEXT( 5 )                  , 
           PERSONALITYTYPE    TEXT( 5 )                  , 
           HSGRADUATIONYEAR   TEXT( 4 )                  , 
           HSTRANSCRIPTRECVDD DATE                       , 
           HSCLASSRANK        INTEGER                    , 
           HSCLASSSIZE        INTEGER                    , 
           HSCLASSPERCENTILE  DOUBLE                     , 
           HSGRADEPOINTAVERAG DOUBLE                     , 
           STATEWHERELSTATTND TEXT( 2 )                  , 
           SAPAYMENTMETHOD    TEXT( 2 )                  , 
           EARLYADMITTENCE    TEXT( 1 )                  , 
           GED                TEXT( 1 )                  , 
           HOMESCHOOLED       TEXT( 1 )                  , 
           APPLICATIONDATE    DATE                       , 
           ADMISSIONDATE      DATE                       , 
           DEPOSITDATE        DATE                       , 
           WITHDRAWDATE       DATE                       , 
           INQUIRYDATE        DATE                       , 
           LATESTINQUIRYDATE  DATE                       , 
           LEADDATE           DATE                       , 
           SUSPECTDATE        DATE                       , 
           APPLICATIONCOMPLTD DATE                       , 
           REGISTRATIONDATE   DATE                       , 
           PROSPECTDATASOURCE TEXT( 5 )                  , 
           APPLICATIONFEEPAID TEXT( 1 )                  , 
           WITHDRAWNOTE       MEMO                       , 
           WITHDRAWREASON     TEXT( 10 )                 , 
           MATRICULATIONDATE  DATE                       , 
           ENTRANCECLASSIFICT TEXT( 2 )                  , 
           INITENTRANCCLSSFCT TEXT( 2 )                  , 
           EXPECTEDENTRYTERM  TEXT( 10 )                 , 
           EXPECTEDENTRYYEAR  TEXT( 4 )                  , 
           INITIALENTRYYEAR   TEXT( 4 )                  , 
           ONLNPRSPCTINTLCRTD DATE                       , 
           ONLNAPPLCTNPRCSSDD DATE                       , 
           RESIDENT           TEXT( 1 )                  , 
           STUDENTRESIDNCYSTT TEXT( 1 )                  , 
           TRANSFERCREDITS    DOUBLE                     , 
           ACCEPTANCESTATUS   TEXT( 2 )                  , 
           z_NOTE             MEMO                       , 
           CALLBACKDATE       DATE                       , 
           FACULTYCALLSTATUS  TEXT( 2 )                  , 
           PRIORITYSTATUS     TEXT( 2 )                  , 
           NEEDTOFOLLOWUP     TEXT( 1 )                  , 
           APPLICATIONRECVDSR TEXT( 5 )                  , 
           PERFORMARANK       INTEGER                    , 
           PERFORMAPERCENTILE DOUBLE                     , 
           ORIGINATINGSTTPRVN TEXT( 2 )                  , 
           ORIGINATINGPOSTALC TEXT( 10 )                 , 
           CHAMPIONGROUP      TEXT( 10 )                 , 
           ENROLLMENTCATEGORY TEXT( 20 )                 , 
           PARENTDENOMINATION TEXT( 3 )                  , 
           DENOMINATNWHNNCHRC TEXT( 3 )                  , 
           HASPRIORPROSPCTRCR TEXT( 1 )                  , 
           HASLATERPROSPCTRCR TEXT( 1 )                  , 
           COMMITTEEREVWNDDFL TEXT( 1 )                  , 
           COMMITTEEREVWDNDRS TEXT( 5 )                  , 
           COMMITTEEREVIEWDAT DATE                       , 
           COMMITTEEREVIEWDCS TEXT( 10 )                 , 
           COHORTPOTENTLSTRTD DATE                       , 
           COHORTPTNTLMTDYMND TEXT( 1 )                  , 
           COHORTPTNTLMTDYTSD TEXT( 1 )                  , 
           CHRTPTNTLMTDYWDNSD TEXT( 1 )                  , 
           CHRTPTNTLMTDYTHRSD TEXT( 1 )                  , 
           COHORTPTNTLMTDYFRD TEXT( 1 )                  , 
           COHRTPTNTLMTDYSTRD TEXT( 1 )                  , 
           COHRTPTNTLMTTMMRNN TEXT( 1 )                  , 
           CHRTPTNTLMTTMAFTRN TEXT( 1 )                  , 
           COHRTPTNTLMTTMEVNN TEXT( 1 )                  , 
           RCODYLASTCALLDATE  DATE                       , 
           RCODYRESPONSECODE  TEXT( 2 )                  , 
           RCODYEMS_CODE      TEXT( 2 )                  , 
           RCODYFINANCE       TEXT( 2 )                  , 
           RCODYINFORMATION   TEXT( 2 )                  , 
           RCODYINTERESTLEVEL TEXT( 2 )                  , 
           RCODYINTRO         TEXT( 2 )                  , 
           RCODYMSTIMPRTNTFCT TEXT( 2 )                  , 
           RCODYRANK          TEXT( 2 )                  , 
           RCODYREASONRULEDOU TEXT( 2 )                  , 
           RCODYSTILLA_CHOICE TEXT( 2 )                  , 
           RCODYVISIT         TEXT( 2 )                  , 
           RCODYINSTITUTIONS  TEXT( 2 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           CONVERTEDSTRING    MEMO                       , 
           OTHERINFO          MEMO                       , 
           STUDENTID          TEXT( 15 )                 , 
           CONVERTEDKEY       TEXT( 9 )                  , 
           FK_ID_Z_USER       INTEGER                    , 
           FKIDADMISSIONSMAJO INTEGER                    , 
           FKIDADMISSIONSMA02 INTEGER                    , 
           FKIDADMISSIONSMA03 INTEGER                    , 
           FK_ID_COLLEGE      INTEGER                    , 
           FK_ID_TERRITORY    INTEGER                    , 
           FK_IDADMISSIONTRAC INTEGER                    , 
           FK_ID_DEGREEMAJOR  INTEGER                    , 
           FK_ID_DEGREEMAJO02 INTEGER                    , 
           FK_ID_DEGREEMAJO03 INTEGER                    , 
           FK_ID_SCHOOL       INTEGER                    , 
           FK_ID_COHORT       INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_STAFF        INTEGER                    , 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_EVENT        INTEGER                     ) ;
 
-- Entity - ProspectHistSummary 
CREATE TABLE PROSPECTHISTSUMMARY ( 
           ID                 INTEGER            NOT NULL, 
           ENTRYTYPE          TEXT( 1 )                  , 
           GENDER             TEXT( 1 )                  , 
           SAT_VERBAL         DOUBLE                     , 
           SAT_MATHQUANTITATI DOUBLE                     , 
           SAT_READINGCMPRHNS DOUBLE                     , 
           SAT_WRITING        DOUBLE                     , 
           ACT_COMPOSITE      DOUBLE                     , 
           ACT_MATHQUANTITATI DOUBLE                     , 
           ACT_READINGCMPRHNS DOUBLE                     , 
           ACT_WRITING        DOUBLE                     , 
           HIGHSCHOOLGPA      DOUBLE                     , 
           HIGHSCHOOLCLASSRAN INTEGER                    , 
           HIGHSCHOOLCLASSSIZ INTEGER                    , 
           HIGHSCHOLCLSSPRCNT DOUBLE                     , 
           FKIDFYREPORTPROSPE INTEGER            NOT NULL, 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
-- Entity - ProspectTypeChange 
CREATE TABLE PROSPECTTYPECHANGE ( 
           ID                 INTEGER            NOT NULL, 
           PREVIOUSTYPE       TEXT( 2 )          NOT NULL, 
           USERID             INTEGER            NOT NULL, 
           USERNAME           TEXT( 50 )         NOT NULL, 
           TRANSDATETIME      TEXT( 25 )         NOT NULL, 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
-- Entity - PurchaseOrder 
CREATE TABLE PURCHASEORDER ( 
           ID                 INTEGER            NOT NULL, 
           DECRIPTION         TEXT( 254 )                , 
           z_NOTE             MEMO                       , 
           APPROVALNOTE       MEMO                       , 
           DATEORDERED        DATE                       , 
           DATEAPPROVALNEEDED DATE                       , 
           DATEFINALITEMSRECV DATE                       , 
           SHIPPINGHANDLNGAMN DOUBLE                     , 
           TOTALAMOUNT        DOUBLE                     , 
           PO_NUMBER          TEXT( 254 )                , 
           CURRENTSTATUS      TEXT( 1 )                  , 
           OPENPERIODBEGINDAT DATE                       , 
           OPENPERIODCLOSEDAT DATE                       , 
           SHIPTOATTENTION    TEXT( 50 )                 , 
           SHIPTODEPARTMENT   TEXT( 50 )                 , 
           NEWVENDORNAME      TEXT( 50 )                 , 
           ITEMSRECEIVEDFLAG  TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           FK_ID_Z_USER       INTEGER                    , 
           CRID_Z_USER        INTEGER                    , 
           BILLID_ADDRESS     INTEGER                    , 
           SHIPID_ADDRESS     INTEGER                    , 
           FK_ID_VENDOR       INTEGER                     ) ;
 
-- Entity - Receipt 
CREATE TABLE RECEIPT ( 
           ID                 INTEGER            NOT NULL, 
           z_NUMBER           TEXT( 254 )                , 
           DESCRIPTION        MEMO                       , 
           DATEISSUED         DATE               NOT NULL, 
           AMOUNT             DOUBLE             NOT NULL, 
           VOIDED             TEXT( 1 )                  , 
           VOIDEDDATE         DATE                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_DONATION     INTEGER            NOT NULL ) ;
 
-- Entity - RegistrationApproval 
CREATE TABLE REGISTRATIONAPPROVAL ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 15 )                 , 
           SHORTNAME          TEXT( 30 )                 , 
           CREATIONDATE       DATE                       , 
           LASTMODIFICATIONDA TEXT( 25 )                 , 
           FKIDPROPOSEDSCHEDU INTEGER                    , 
           FK_ID_STUDENT      INTEGER                    , 
           FK_ID_FACULTY      INTEGER            NOT NULL ) ;
 
-- Entity - RemoteEvent 
CREATE TABLE REMOTEEVENT ( 
           ID                 INTEGER            NOT NULL, 
           EVENTNAME          TEXT( 254 )                , 
           EVENTMESSAGE       MEMO                       , 
           EVENTBUTTONTEXT    TEXT( 254 )                , 
           ZENCASEVENTID      INTEGER                    , 
           CURRENTEVENT       TEXT( 1 )                   ) ;
 
-- Entity - RemoteExInterest 
CREATE TABLE REMOTEEXINTEREST ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 10 )                 , 
           SPECIFICINTEREST   TEXT( 254 )                 ) ;
 
-- Entity - RemoteMajorInterest 
CREATE TABLE REMOTEMAJORINTEREST ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 254 )                , 
           SPECIFICINTEREST   TEXT( 254 )                , 
           DEGREEMAJORID      INTEGER                     ) ;
 
-- Entity - RemotePerson 
CREATE TABLE REMOTEPERSON ( 
           ID                 INTEGER            NOT NULL, 
           FIRSTNAME          TEXT( 50 )                 , 
           MIDDLEINITIAL      TEXT( 50 )                 , 
           LASTNAME           TEXT( 50 )                 , 
           GENDER             TEXT( 1 )                  , 
           STREETADDRESS      TEXT( 254 )                , 
           CITY               TEXT( 254 )                , 
           STATE              TEXT( 2 )                  , 
           COUNTRY            TEXT( 254 )                , 
           ZIP                TEXT( 10 )                 , 
           EMAILADDRESS       TEXT( 254 )                , 
           PHONE              TEXT( 15 )                 , 
           BIRTHDATE          DATE                       , 
           CHURCHNAME         TEXT( 254 )                , 
           HIGHSCHOOLATTENDIN TEXT( 254 )                , 
           COLLEGEATTENDING   TEXT( 254 )                , 
           PUBLICPRIVATE      TEXT( 7 )                  , 
           GRADUATIONYEAR     INTEGER                    , 
           LIVEWITHFATHER     TEXT( 1 )                  , 
           LIVEWITHMOTHER     TEXT( 1 )                  , 
           LIVEWITHOTHER      TEXT( 1 )                  , 
           FATHERNAME         TEXT( 50 )                 , 
           MOTHERNAME         TEXT( 50 )                 , 
           OTHERRELATIONSHIP  TEXT( 254 )                , 
           OTHERNAME          TEXT( 50 )                 , 
           FATHEREMAIL        TEXT( 254 )                , 
           MOTHEREMAIL        TEXT( 254 )                , 
           OTHEREMAIL         TEXT( 254 )                , 
           PARENTSATTENDCOLLE TEXT( 1 )                  , 
           PARENTSATTENDENC   TEXT( 1 )                  , 
           PARENTSENIORPASTOR TEXT( 1 )                  , 
           PARENTMISSIONARY   TEXT( 1 )                  , 
           VISITEDENC         TEXT( 1 )                  , 
           VISTEDWHEN         TEXT( 254 )                , 
           z_NOTE             MEMO                       , 
           FK_ID_REMOTEEVENT  INTEGER                     ) ;
 
-- Entity - Report 
CREATE TABLE REPORT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           TYPE               TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           PRP_FORMAT         LONGBINARY                 , 
           UPDATEABLEQUERYFLA TEXT( 1 )                  , 
           EXTERNALREPORTNAME TEXT( 8 )                  , 
           PRIVATEFLAG        TEXT( 1 )                  , 
           LASTRUNREPORTTITLE TEXT( 254 )                , 
           FK_ID_STOREDQUERY  INTEGER                    , 
           FK_ID_STOREDQUER02 INTEGER                    , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - ReportGroup 
CREATE TABLE REPORTGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           DESCRIPTION        MEMO                       , 
           FUNCTIONALAREANAME TEXT( 30 )                 , 
           FK_ID_USERGROUP    INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - ReportStructure 
CREATE TABLE REPORTSTRUCTURE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           ALLITEMSREQUIREDFL TEXT( 1 )                  , 
           GLACCOUNTTYPE      TEXT( 2 )                  , 
           FUNCTIONALAREANAME TEXT( 30 )                 , 
           SHOWONLYCNTRLBLSFL TEXT( 1 )                  , 
           SHOWSLRYWGBNFTDTFL TEXT( 1 )                  , 
           SHOWCAPITALDATAFLA TEXT( 1 )                  , 
           SHOWOPERATINGDATFL TEXT( 1 )                  , 
           FORMATSUBACCONTSFL TEXT( 1 )                  , 
           PRIVATETOUSERFLAG  TEXT( 1 )                  , 
           HIDEREVNONBDGTDSPL TEXT( 1 )                  , 
           FINALTOTALTITLE    TEXT( 254 )                , 
           FKIDREPORTSTRUCTUR INTEGER                    , 
           CRID_Z_USER        INTEGER                     ) ;
 
-- Entity - ReportStructureAccount 
CREATE TABLE REPORTSTRUCTUREACCOUNT ( 
           ID                 INTEGER            NOT NULL, 
           AUTOSEQ            INTEGER                    , 
           FKIDREPORTSTRUCTUR INTEGER            NOT NULL, 
           FK_ID_GLACCOUNTS   INTEGER            NOT NULL ) ;
 
-- Entity - ReportStructureCategory 
CREATE TABLE REPORTSTRUCTURECATEGORY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           FUNCTIONALAREA     TEXT( 30 )                  ) ;
 
-- Entity - ReportStructureCC 
CREATE TABLE REPORTSTRUCTURECC ( 
           ID                 INTEGER            NOT NULL, 
           FKIDREPORTSTRUCTUR INTEGER            NOT NULL, 
           FK_ID_GLCOSTCENTER INTEGER            NOT NULL ) ;
 
-- Entity - ReportStructureChartEntry 
CREATE TABLE REPORTSTRUCTURECHARTENTRY ( 
           ID                 INTEGER            NOT NULL, 
           AUTOSEQ            INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER            NOT NULL, 
           FKIDREPORTSTRUCTUR INTEGER            NOT NULL ) ;
 
-- Entity - ReportStructureCostCenter 
CREATE TABLE REPORTSTRUCTURECOSTCENTER ( 
           ID                 INTEGER            NOT NULL, 
           AUTOSEQ            INTEGER                    , 
           FKIDREPORTSTRUCTUR INTEGER            NOT NULL, 
           FK_ID_GLCOSTCENTER INTEGER            NOT NULL ) ;
 
-- Entity - ReportStructureGroup 
CREATE TABLE REPORTSTRUCTUREGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           GLACCOUNTTYPE      TEXT( 2 )                  , 
           TOTALLINETITLE     TEXT( 254 )                , 
           ALLOWSDUPLICATENTR TEXT( 1 )                  , 
           AUTOSEQ            INTEGER                    , 
           AUTOSEQ02          INTEGER                    , 
           FKSBIDREPORTSTRUCT INTEGER                    , 
           FKIDREPORTSTRUCTUR INTEGER                     ) ;
 
-- Entity - RequiredGroup 
CREATE TABLE REQUIREDGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           TYPE               TEXT( 1 )                  , 
           TOTALREQUIREDCREDT DOUBLE                     , 
           MINIMUMGRADE       TEXT( 3 )                  , 
           REUSABLEFLAG       TEXT( 1 )                  , 
           SEQUENCENUMBER     INTEGER                    , 
           z_NOTE             MEMO                       , 
           STUDENTHS_RQRMNTTY TEXT( 1 )                  , 
           STUDENTTESTINGSTAT TEXT( 2 )                  , 
           FK_ID_COLLEGE      INTEGER                     ) ;
 
-- Entity - RequiredSubGroup 
CREATE TABLE REQUIREDSUBGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           TOTALREQUIREDCREDT DOUBLE                     , 
           FK_ID_REQUIREDGROU INTEGER            NOT NULL ) ;
 
-- Entity - ResultSet 
CREATE TABLE RESULTSET ( 
           ID                 INTEGER            NOT NULL, 
           RESULTBLOB         LONGBINARY                 , 
           ZQFRAMEBLOB        LONGBINARY                 , 
           OBJECTNAME         TEXT( 8 )                  , 
           NAME               TEXT( 64 )                 , 
           DESCRIPTION        MEMO                       , 
           FK_ID_STOREDQUERY  INTEGER                     ) ;
 
-- Entity - RetentionRisk 
CREATE TABLE RETENTIONRISK ( 
           ID                 INTEGER            NOT NULL, 
           TYPEOFRISK         TEXT( 10 )                 , 
           CREATIONDATE       DATE                       , 
           z_NOTE             MEMO                       , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - ReusableEmailStatement 
CREATE TABLE REUSABLEEMAILSTATEMENT ( 
           ID                 INTEGER            NOT NULL, 
           TITLE              TEXT( 254 )                , 
           STATEMENTTEXT      MEMO                       , 
           SUBJECTAREA        TEXT( 254 )                , 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
-- Entity - Room 
CREATE TABLE ROOM ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           z_NUMBER           TEXT( 254 )                , 
           CAPACITY           INTEGER                    , 
           NUMBEROFCHAIRS     INTEGER                    , 
           NUMBEROFTABLES     INTEGER                    , 
           NUMBEROFBLACKBOARD INTEGER                    , 
           BLACKBOARDSIZE     TEXT( 10 )                 , 
           NUMBEROFWHITEBOARD INTEGER                    , 
           WHITEBOARDSIZE     TEXT( 10 )                 , 
           TV_FLAG            TEXT( 1 )                  , 
           VCR_FLAG           TEXT( 1 )                  , 
           DVD_FLAG           TEXT( 1 )                  , 
           LCD_FLAG           TEXT( 1 )                  , 
           SCREENFLAG         TEXT( 1 )                  , 
           OVERHEADPROJECTRFL TEXT( 1 )                  , 
           WHEELCHARACCSSBLFL TEXT( 1 )                  , 
           COMPUTERPROJECTRFL TEXT( 1 )                  , 
           ETHERNETPORTFLAG   TEXT( 1 )                  , 
           CONFIGURATION      TEXT( 10 )                 , 
           FLEXIBILITYLEVEL   TEXT( 10 )                 , 
           AIRCONDITIONEDFLAG TEXT( 1 )                  , 
           RESIDENTBILLINGCOD TEXT( 2 )                  , 
           MONTHLYRENTAL      TEXT( 1 )                  , 
           CLASSROOMTYPE      TEXT( 10 )                 , 
           TECHNOLOGYENABLED  TEXT( 1 )                  , 
           FK_ID_BUILDING     INTEGER                     ) ;
 
-- Entity - SAAnnualAdmin 
CREATE TABLE SAANNUALADMIN ( 
           ID                 INTEGER            NOT NULL, 
           MONTHLYINTERESTRTS DOUBLE                     , 
           HEALTHINSURANCWVRO TEXT( 1 )                  , 
           ALLOWMULTIPLSAPRFL TEXT( 1 )                  , 
           USECOHORTMDLPRCSSN TEXT( 1 )                  , 
           USETERMS           TEXT( 1 )                  , 
           USEEXACTFINDBYDEFL TEXT( 1 )                  , 
           FKIDSATRANSACTIONC INTEGER                    , 
           FKIDSATRANSACTIO02 INTEGER                    , 
           FKIDSATRANSACTIO03 INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_MEALPLAN     INTEGER                    , 
           FKIDSATRANSACTIO04 INTEGER                    , 
           FKIDSATRANSACTIO05 INTEGER                    , 
           FK_ID_COLLEGEYEAR  INTEGER            NOT NULL ) ;
 
-- Entity - SACollections 
CREATE TABLE SACOLLECTIONS ( 
           ID                 INTEGER            NOT NULL, 
           OTHERNAMES         TEXT( 254 )                , 
           LASTATTENDEDDATE   DATE                       , 
           WRITEOFFDATE       DATE                       , 
           AMOUNTWRITTENOFF   DOUBLE                     , 
           COLLECTIONAGENCY   TEXT( 254 )                , 
           AMOUNTCOLLECTED    DOUBLE                     , 
           DATECOLLECTED      DATE                       , 
           STATUSCODE         TEXT( 5 )                  , 
           PRINCIPLE          DOUBLE                     , 
           INTEREST           DOUBLE                     , 
           z_NOTE             MEMO                       , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - SACombineCode 
CREATE TABLE SACOMBINECODE ( 
           ID                 INTEGER            NOT NULL, 
           COMBINECODE        TEXT( 10 )                 , 
           COMBINEDESCRIPTION TEXT( 254 )                 ) ;
 
-- Entity - SAExportHistory 
CREATE TABLE SAEXPORTHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           EXPORTDATE         DATE                       , 
           RECORDCOUNT        INTEGER                    , 
           FKIDSAEXPORTPROFIL INTEGER                     ) ;
 
-- Entity - SAExportProfile 
CREATE TABLE SAEXPORTPROFILE ( 
           ID                 INTEGER            NOT NULL, 
           AGENCYNAME         TEXT( 254 )                , 
           AGENCYID           TEXT( 254 )                , 
           HOSTID             TEXT( 254 )                , 
           HOSTNAME           TEXT( 254 )                , 
           CONTACTNAME        TEXT( 254 )                , 
           TRANSACTINDTLSTRTD DATE                       , 
           STATEMENTDATE      DATE                       , 
           DUEDATE            DATE                        ) ;
 
-- Entity - SAInternalRuleVariable 
CREATE TABLE SAINTERNALRULEVARIABLE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           z_VALUE            TEXT( 50 )                 , 
           AUTOSEQ            INTEGER                    , 
           FKIDCOLLEGETERMSAT INTEGER            NOT NULL, 
           FKIDSATRANSACTIONC INTEGER            NOT NULL ) ;
 
-- Entity - SASubAccount 
CREATE TABLE SASUBACCOUNT ( 
           ID                 INTEGER            NOT NULL, 
           SUBACCOUNTTYPE     TEXT( 5 )                  , 
           CREATEDDATE        DATE                       , 
           CLOSEDDATE         DATE                       , 
           OPENINGBALANCE     DOUBLE                     , 
           CLOSEDBALANCE      DOUBLE                     , 
           CURRENTBALANCE     DOUBLE                     , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FKIDCAMPUSORGANIZA INTEGER                    , 
           FK_ID_DEPARTMENT   INTEGER                    , 
           FK_ID_GLCOSTCENTER INTEGER                     ) ;
 
-- Entity - SASubAccountItem 
CREATE TABLE SASUBACCOUNTITEM ( 
           ID                 INTEGER            NOT NULL, 
           ITEMDATE           DATE                       , 
           DESCRIPTION        TEXT( 254 )                , 
           PURCHASER          TEXT( 254 )                , 
           AMOUNT             DOUBLE                     , 
           FK_ID_GLACCOUNTS   INTEGER                    , 
           FK_ID_BATCHEDITLIS INTEGER                    , 
           FKIDGLACCOUNTTRANS INTEGER                    , 
           FK_IDGLJOURNALENTR INTEGER                    , 
           FK_ID_GLSTORECODE  INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER                    , 
           CREDITIDGLCHARTENT INTEGER                    , 
           FK_ID_SASUBACCOUNT INTEGER                    , 
           FKIDSTUDENTACCOUNT INTEGER                     ) ;
 
-- Entity - SATransactionCode 
CREATE TABLE SATRANSACTIONCODE ( 
           ID                 INTEGER            NOT NULL, 
           TRANSACTIONCODE    TEXT( 5 )                  , 
           BILLTYPE           TEXT( 10 )                 , 
           TYPE               TEXT( 2 )                  , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           FREQUENCYTYPE      TEXT( 5 )                  , 
           ENRLLMNTRPRTCHRGTY TEXT( 5 )                  , 
           DESCRIPTION        TEXT( 254 )                , 
           INSTRUMENT         TEXT( 1 )                  , 
           DEFAULTAMOUNT      DOUBLE                     , 
           TITLE4TRANSACTION  TEXT( 1 )                  , 
           HOPEELIGIBLEFLAG   TEXT( 1 )                  , 
           LS_ROOMBILLINGCODE TEXT( 10 )                 , 
           REPORTLINE         TEXT( 2 )                  , 
           COLLEGESEMESTER    TEXT( 2 )                  , 
           INTERNALRULENAME   TEXT( 50 )                 , 
           z_NOTE             MEMO                       , 
           INCLUDEON1098      TEXT( 1 )                  , 
           CASHRECPTSINTRFCFL TEXT( 1 )                  , 
           CLERONRGNRTCHRGSFL TEXT( 1 )                  , 
           ELIGIBLEFORCSHDSCN TEXT( 1 )                  , 
           SOURCE             TEXT( 20 )                 , 
           REVENUETYPE        TEXT( 20 )                 , 
           FA_TITLE4AUTHRZDTY TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FKIDSTUDENTACCOU02 INTEGER                    , 
           FK_ID_SACOMBINECOD INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER                    , 
           CRID_GLCHARTENTRY  INTEGER                     ) ;
 
-- Entity - SATransactionTerm 
CREATE TABLE SATRANSACTIONTERM ( 
           AMOUNT             DOUBLE                     , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL, 
           FK_ID_COLLEGEYEAR  INTEGER                    , 
           FKIDSATRANSACTIONC INTEGER            NOT NULL ) ;
 
-- Entity - SavedDegreeAudit 
CREATE TABLE SAVEDDEGREEAUDIT ( 
           ID                 INTEGER            NOT NULL, 
           CREATEDDATETIME    TEXT( 25 )                 , 
           DESCRIPTION        MEMO                       , 
           AUDITSUMMARY       TEXT( 254 )                , 
           DEGREEAUDITBLOB    LONGBINARY                 , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_DEGREETRACK  INTEGER                     ) ;
 
-- Entity - ScheduledSession 
CREATE TABLE SCHEDULEDSESSION ( 
           ID                 INTEGER            NOT NULL, 
           MEETINGDATE        DATE                       , 
           STARTTIME          TEXT( 25 )                 , 
           ENDTIME            TEXT( 25 )                 , 
           PERIODDAYOFWEEK    INTEGER                    , 
           PERIODSTARTDATE    DATE                       , 
           PERIODENDDATE      DATE                       , 
           CONTACTPERSON      TEXT( 50 )                 , 
           DATEREQUESTED      DATE                       , 
           FK_ID_ROOM         INTEGER                    , 
           FK_ID_EVENT        INTEGER                     ) ;
 
-- Entity - Scholarship 
CREATE TABLE SCHOLARSHIP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 254 )                , 
           CLASS              TEXT( 254 )                , 
           AWARDEDBYDEPARTMEN TEXT( 1 )                  , 
           DESCRIPTION        MEMO                       , 
           FINANCIALAIDCODE   TEXT( 254 )                , 
           NUMBEROFAWARDS     INTEGER                    , 
           ISUNFUNDED         TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_FUND         INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - ScholarshipAward 
CREATE TABLE SCHOLARSHIPAWARD ( 
           ID                 INTEGER            NOT NULL, 
           AMOUNT             DOUBLE                     , 
           DATEAWARDED        DATE                       , 
           FK_ID_SCHOLARSHIP  INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - School 
CREATE TABLE SCHOOL ( 
           ID                 INTEGER            NOT NULL, 
           CATEGORY           TEXT( 10 )                 , 
           HIGHSCHOOLFLAG     TEXT( 1 )                  , 
           NAME               TEXT( 50 )                 , 
           PHONE              TEXT( 10 )                 , 
           z_NOTE             MEMO                       , 
           WEBSITE            TEXT( 254 )                , 
           CODE               TEXT( 20 )                 , 
           GENRE              TEXT( 10 )                 , 
           UNACREDDITEDFLAG   TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_ADDRESS      INTEGER                     ) ;
 
-- Entity - SchoolPersonRole 
CREATE TABLE SCHOOLPERSONROLE ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 30 )                 , 
           FK_ID_SCHOOL       INTEGER                    , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - SecurityArea 
CREATE TABLE SECURITYAREA ( 
           ID                 INTEGER            NOT NULL, 
           FUNCTIONALAREA     TEXT( 30 )                 , 
           ALLOWACCESS        TEXT( 1 )                  , 
           FK_ID_SECURITYSET  INTEGER                    , 
           FKIDSECURITYTEMPLA INTEGER                     ) ;
 
-- Entity - SecuritySection 
CREATE TABLE SECURITYSECTION ( 
           ID                 INTEGER            NOT NULL, 
           SECTIONNAME        TEXT( 254 )                , 
           CREATEAUTHORITY    TEXT( 1 )                  , 
           READAUTHORITY      TEXT( 1 )                  , 
           UPDATEAUTHORITY    TEXT( 1 )                  , 
           DELETEAUTHORITY    TEXT( 1 )                  , 
           SPECIALAUTHORITY   TEXT( 1 )                  , 
           FK_ID_SECURITYAREA INTEGER                     ) ;
 
-- Entity - SecuritySet 
CREATE TABLE SECURITYSET ( 
           ID                 INTEGER            NOT NULL, 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_USERGROUP    INTEGER                     ) ;
 
-- Entity - SecuritySubSection 
CREATE TABLE SECURITYSUBSECTION ( 
           ID                 INTEGER            NOT NULL, 
           SUBSECTIONNAME     TEXT( 254 )                , 
           ALLOWACCESS        TEXT( 1 )                  , 
           ALLOWREADACCESS    TEXT( 1 )                  , 
           FKIDSECURITYSECTIO INTEGER                     ) ;
 
-- Entity - SecurityTemplate 
CREATE TABLE SECURITYTEMPLATE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 254 )                , 
           SYSTEMTEMPLATE     TEXT( 1 )                   ) ;
 
-- Entity - Staff 
CREATE TABLE STAFF ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 1 )                  , 
           TYPE               TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
-- Entity - StandardFacultyCompensationTable 
CREATE TABLE STANDARDFACULTYCOMPENSATIONTAB ( 
           ID                 INTEGER            NOT NULL, 
           FACULTYDEGREE      TEXT( 3 )                  , 
           FACULTYYEARSOFSERV INTEGER                    , 
           FACULTYPAYTYPE     TEXT( 1 )                  , 
           SALARYRATIO        DOUBLE                      ) ;
 
-- Entity - StandardSalaryData 
CREATE TABLE STANDARDSALARYDATA ( 
           ID                 INTEGER            NOT NULL, 
           BUDGETHR_TYPE      TEXT( 1 )                  , 
           z_YEAR             TEXT( 4 )                  , 
           EFFECTIVEBEGINDATE DATE                       , 
           EFFECTIVETHROUGHDA DATE                       , 
           FICA_OASDI_RATE    DOUBLE                     , 
           FICA_OASDI_MAXAMON DOUBLE                     , 
           FICA_MEDICARE_RATE DOUBLE                     , 
           FICA_MEDICAREMXAMN DOUBLE                     , 
           WITHHOLDINGRTRMNTR DOUBLE                     , 
           LIFEINSURANCEAMOUN DOUBLE                     , 
           DISABILITYINSURNCR DOUBLE                     , 
           WORKERSCOMPENSATNR DOUBLE                     , 
           FACULTYBASESALARY  DOUBLE                     , 
           z_NOTE             MEMO                        ) ;
 
-- Entity - StoredQuery 
CREATE TABLE STOREDQUERY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           DESCRIPTION        MEMO                       , 
           TYPE               TEXT( 1 )                  , 
           QUERYBLOB          LONGBINARY                 , 
           OBJECTNAME         TEXT( 8 )                  , 
           FUNCTIONALAREA     TEXT( 30 )                 , 
           PRIVATEFLAG        TEXT( 1 )                  , 
           REPORTBLOB         LONGBINARY                 , 
           REPORTTITLE        TEXT( 254 )                , 
           REPORTBLOBEXISTSFL TEXT( 1 )                  , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_ID_STOREDQUERY  INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FKIDSTOREDQUERYCAT INTEGER                     ) ;
 
-- Entity - StoredQueryCategory 
CREATE TABLE STOREDQUERYCATEGORY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 64 )                 , 
           FUNCTIONALAREA     TEXT( 30 )                  ) ;
 
-- Entity - Student 
CREATE TABLE STUDENT ( 
           ID                 INTEGER            NOT NULL, 
           CREATIONDATE       DATE                       , 
           QUANTITY           INTEGER                    , 
           STATUS             TEXT( 1 )                  , 
           CURRENTLEVEL       TEXT( 5 )                  , 
           CALLBACKDATE       DATE                       , 
           STUDENTLIFEHOLDFLA TEXT( 1 )                  , 
           STUDENTLIFECLEARDD DATE                       , 
           STUDENTACCONTCLRDD DATE                       , 
           FINANCIALAIDCLERDD DATE                       , 
           HEALTHCLEAREDDATE  DATE                       , 
           FINANCIALHOLDFLAG  TEXT( 1 )                  , 
           FINANCIALHOLDDATE  DATE                       , 
           MEDICALHOLDDATE    DATE                       , 
           HONORSGRADUATIONLV TEXT( 1 )                  , 
           PHIDELTALAMBDAFLAG TEXT( 1 )                  , 
           LOANENTRANCINTRVWD DATE                       , 
           LOANEXITINTERVIEWD DATE                       , 
           ACADEMICNOTE       MEMO                       , 
           GENERALNOTE        MEMO                       , 
           RESIDENCYSTATUS    TEXT( 1 )                  , 
           MOBILITYIMPAIRMENT TEXT( 1 )                  , 
           OTHERPHYSICLIMPRMN TEXT( 1 )                  , 
           ACCOMMODATIONNOTE  MEMO                       , 
           LEARNINGDISABILITY TEXT( 1 )                  , 
           EMOTIONALDISABILIT TEXT( 1 )                  , 
           DIRECTORYDATABLOCK TEXT( 1 )                  , 
           LEGALNAME          TEXT( 50 )                 , 
           TESTINGSTATUS      TEXT( 2 )                  , 
           EMAILADDRESS       TEXT( 128 )                , 
           FINALGPA           DOUBLE                     , 
           FINALCLASSSIZE     INTEGER                    , 
           FINALCLASSRANK     INTEGER                    , 
           LASTGPA            DOUBLE                     , 
           ENTRYYEARMONTH     TEXT( 6 )                  , 
           NUMBEROFCHAPELSRQR INTEGER                    , 
           ROOMMATEQSTNRRCVDD DATE                       , 
           WITHDRAWALREASON   TEXT( 5 )                  , 
           WITHDRAWALSOURCE   TEXT( 10 )                 , 
           DATEOFDEPARTURE    DATE                       , 
           DEPENDENTOFPRNTSFL TEXT( 1 )                  , 
           DFLTPRNTTRNSCRPTTY TEXT( 254 )                , 
           CLEARINGHOUSEGRADD DATE                       , 
           CLEARINGHOUSEDTBLC TEXT( 1 )                  , 
           CLEARINGHOUSLSTSTT TEXT( 1 )                  , 
           HS_TRANSCRIPTSTATU TEXT( 1 )                  , 
           TOTALEARNEDCREDITS DOUBLE                     , 
           UNDERGRADGRADUATND DATE                       , 
           GRADGRADUATIONDATE DATE                       , 
           PROPOSEDSCHEDULENO MEMO                       , 
           PROPSDSCHDLSBMTDTT TEXT( 25 )                 , 
           R1098T_CONSENTFLAG TEXT( 1 )                  , 
           R1098T_PSTPNDCSNCN INTEGER                    , 
           BOOKOPTOUTDATE     DATE                       , 
           LGCYTRNSFRERNDCRDT DOUBLE                     , 
           LGCYTRNSFRATMPTDCR DOUBLE                     , 
           LEGCYTRNSFRGPA_DVS DOUBLE                     , 
           LEGACYTRNSFRGRDPNT DOUBLE                     , 
           LGCYUNDRGRDTTRNSCR LONGBINARY                 , 
           LGCYUNDRGRDTASTRNS LONGBINARY                 , 
           LGCYGRDTAS_TRNSCRP LONGBINARY                 , 
           FERPA_NOONATHRZDFL TEXT( 1 )                  , 
           LEGACYGRADTTRNSCRP LONGBINARY                 , 
           LEGCYCRTFCTTRNSCRP LONGBINARY                 , 
           LGCYTRNSCRPTCNVRSN DATE                       , 
           LGCYTRNSCRPTCNVR02 TEXT( 50 )                 , 
           LS_ADVISORNAME     TEXT( 254 )                , 
           LS_STUDENTID       TEXT( 254 )                , 
           LS_CULTURLLTRCYOPT TEXT( 4 )                  , 
           LS_MAJOR1          TEXT( 5 )                  , 
           LS_MAJOR2          TEXT( 5 )                  , 
           LS_TRACK1          TEXT( 5 )                  , 
           LS_TRACK2          TEXT( 5 )                  , 
           LS_MINOR           TEXT( 5 )                  , 
           FIRSTTITLE4TERM    TEXT( 254 )                , 
           BILLTOHOME         TEXT( 1 )                  , 
           ANTCPTDCRTFCMPLTND DATE                       , 
           TEMPORARYNOTE      MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           NONRESIDENCYREASON TEXT( 5 )                  , 
           FK_ID_STUDENTHEALT INTEGER                    , 
           FK_ID_COLLEGE      INTEGER                    , 
           FK_ID_COLLEGEYEAR  INTEGER                    , 
           FK2_ID_PERSON      INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_COHORT       INTEGER                     ) ;
 
-- Entity - Student1098T 
CREATE TABLE STUDENT1098T ( 
           ID                 INTEGER            NOT NULL, 
           REPORTINGYEAR      TEXT( 4 )                  , 
           IRS_BOX2AMOUNT     DOUBLE                     , 
           IRS_BOX4AMOUNT     DOUBLE                     , 
           IRS_BOX5AMOUNT     DOUBLE                     , 
           IRS_BOX6AMOUNT     DOUBLE                     , 
           ATLEASTHALFTIMEFLA TEXT( 1 )                  , 
           GRADUATEFLAG       TEXT( 1 )                  , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - StudentAccountHistoricalProfile 
CREATE TABLE STUDENTACCOUNTHISTORICALPROFIL ( 
           ID                 INTEGER            NOT NULL, 
           COLLEGEYEAR        TEXT( 10 )                 , 
           BALANCEFORWARDDATE DATE                       , 
           BALANCEFORWARD     DOUBLE                     , 
           DATEOFLASTPAYMENT  DATE                       , 
           DATEOFLASTACTIVITY DATE                       , 
           NOINTEREST         TEXT( 1 )                  , 
           INTERESTPERCENT    DOUBLE                     , 
           ANTICIPATEDCLSSFCT TEXT( 5 )                  , 
           HEALTHINSURANCEWAV TEXT( 1 )                  , 
           HEALTHINSURANCENOT TEXT( 254 )                , 
           MEALPLANWAIVER     TEXT( 1 )                  , 
           MEALPLANWAIVERDATE DATE                       , 
           HASVEHICLE         TEXT( 1 )                  , 
           VEHICLEREGSTRTNNMB TEXT( 10 )                 , 
           SAPAYMENTMETHOD    TEXT( 2 )                  , 
           PAYMENTPLANPROVIDE TEXT( 1 )                  , 
           PAYMENTCONTRACTSEN DATE                       , 
           PAYMENTCONTRACTRCV DATE                       , 
           PAYMENTPLANFA      TEXT( 1 )                  , 
           PAYMENTPLANSL      TEXT( 1 )                  , 
           PAYMENTPLANPP      TEXT( 1 )                  , 
           PAYMENTPLANPL      TEXT( 1 )                  , 
           PAYMENTPLANOL      TEXT( 1 )                  , 
           PAYMENTPLANOLCOMPN TEXT( 254 )                , 
           PAYMENTPLANCK      TEXT( 1 )                  , 
           PAYMENTPLANBEGINDA DATE                       , 
           PAYMENTPLANENDDATE DATE                       , 
           FINAIDYEARBEGIN    DATE                       , 
           FINAIDYEAREND      DATE                       , 
           BILLINGNEEDSUPDATE TEXT( 1 )                  , 
           CLEARED            TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_COLLEGEYEAR  INTEGER                     ) ;
 
-- Entity - StudentAccountProfile 
CREATE TABLE STUDENTACCOUNTPROFILE ( 
           ID                 INTEGER            NOT NULL, 
           BALANCEFORWARDDATE DATE                       , 
           BALANCEFORWARD     DOUBLE                     , 
           DATEOFLASTPAYMENT  DATE                       , 
           DATEOFLASTACTIVITY DATE                       , 
           NOINTEREST         TEXT( 1 )                  , 
           INTERESTPERCENT    DOUBLE                     , 
           ANTICIPATEDCLSSFCT TEXT( 5 )                  , 
           HEALTHINSURANCEWAV TEXT( 1 )                  , 
           HEALTHINSURANCENOT TEXT( 254 )                , 
           MEALPLANWAIVER     TEXT( 1 )                  , 
           MEALPLANWAIVERDATE DATE                       , 
           HASVEHICLE         TEXT( 1 )                  , 
           VEHICLEREGSTRTNNMB TEXT( 10 )                 , 
           SAPAYMENTMETHOD    TEXT( 2 )                  , 
           PAYMENTPLANPROVIDE TEXT( 1 )                  , 
           PAYMENTCONTRACTSEN DATE                       , 
           PAYMENTCONTRACTRCV DATE                       , 
           PAYMENTPLANFA      TEXT( 1 )                  , 
           PAYMENTPLANSL      TEXT( 1 )                  , 
           PAYMENTPLANPP      TEXT( 1 )                  , 
           PAYMENTPLANPL      TEXT( 1 )                  , 
           PAYMENTPLANOL      TEXT( 1 )                  , 
           PAYMENTPLANOLCOMPN TEXT( 254 )                , 
           PAYMENTPLANCK      TEXT( 1 )                  , 
           PAYMENTPLANBEGINDA DATE                       , 
           PAYMENTPLANENDDATE DATE                       , 
           FINAIDYEARBEGIN    DATE                       , 
           FINAIDYEAREND      DATE                       , 
           BILLINGNEEDSUPDATE TEXT( 1 )                  , 
           BILLINGFLAGACADEMC TEXT( 1 )                  , 
           BLLNGFLGSTDNTACCNT TEXT( 1 )                  , 
           BILLINGFLAGSTUDNTL TEXT( 1 )                  , 
           BILLINGFLAGVEHICLR TEXT( 1 )                  , 
           CLEARED            TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           ACCOUNTBALANCE     DOUBLE                     , 
           REQUESTEDREFUNDAMN DOUBLE                     , 
           REQSTDRFNDISTTL4FL TEXT( 1 )                  , 
           TITLE4AUTHORIZTNFL TEXT( 1 )                  , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_COLLEGEYEAR  INTEGER                    , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - StudentAccountReceipt 
CREATE TABLE STUDENTACCOUNTRECEIPT ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           z_DATE             DATE                       , 
           RECEIPTNUMBER      INTEGER                    , 
           TOTALAMOUNT        DOUBLE                     , 
           VOIDED             TEXT( 1 )                  , 
           NAME               TEXT( 254 )                , 
           CONTACTPERSON      TEXT( 254 )                 ) ;
 
-- Entity - StudentAccountRule 
CREATE TABLE STUDENTACCOUNTRULE ( 
           ID                 INTEGER            NOT NULL, 
           RULETYPE           TEXT( 1 )                  , 
           ISPARENTRULE       TEXT( 1 )                  , 
           APPLYTOANY         TEXT( 1 )                  , 
           APPLYTOALL         TEXT( 1 )                  , 
           APPLYRULEAS        TEXT( 1 )                  , 
           DESCRIPTION        TEXT( 254 )                , 
           QUALVIEWNAME       TEXT( 254 )                , 
           QUALENTITYNAME     TEXT( 254 )                , 
           QUALATTRIBUTENAME  TEXT( 254 )                , 
           QUALATTRIBUTETYPE  TEXT( 1 )                  , 
           QUALOPERATOR       TEXT( 10 )                 , 
           QUALMINNUMERICVALU DOUBLE                     , 
           QUALMAXNUMERICVALU DOUBLE                     , 
           QUALSTRINGVALUE    TEXT( 254 )                , 
           QUALVIEWVALUE      TEXT( 254 )                , 
           QUALENTITYVALUE    TEXT( 254 )                , 
           QUALATTRIBUTEVALUE TEXT( 254 )                , 
           QUALBOOLEANOPERATO TEXT( 1 )                  , 
           RULESTRINGRESULT   TEXT( 254 )                , 
           RULENUMERICRESULT  DOUBLE                     , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - StudentAccountRuleSet 
CREATE TABLE STUDENTACCOUNTRULESET ( 
           ID                 INTEGER            NOT NULL, 
           RULETYPE           TEXT( 1 )                  , 
           BILLTYPE           TEXT( 10 )                 , 
           APPLYRULEAS        TEXT( 1 )                  , 
           DESCRIPTION        TEXT( 254 )                , 
           QUALBOOLEANOPERATO TEXT( 1 )                  , 
           RULESTRINGRESULT   TEXT( 254 )                , 
           RULENUMERICRESULT  DOUBLE                     , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - StudentAccountStatement 
CREATE TABLE STUDENTACCOUNTSTATEMENT ( 
           ID                 INTEGER            NOT NULL, 
           DATEISSUED         DATE                       , 
           TYPE               TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_COLLEGETERM  INTEGER                     ) ;
 
-- Entity - StudentAccountTransApplied 
CREATE TABLE STUDENTACCOUNTTRANSAPPLIED ( 
           ID                 INTEGER            NOT NULL, 
           DESCRIPTION        TEXT( 254 )                , 
           INSTRUMENT         TEXT( 1 )                  , 
           CHECKNUMBER        TEXT( 254 )                , 
           COMBINECODE        TEXT( 10 )                 , 
           POSTED             TEXT( 1 )                  , 
           DATEPOSTED         DATE                       , 
           DATEENTERED        DATE                       , 
           TRANSACTIONDATE    DATE                       , 
           DATESENTGL         DATE                       , 
           AMOUNT             DOUBLE                     , 
           JOURNAL            TEXT( 5 )                  , 
           HISTORICALRECORD   TEXT( 254 )                , 
           TX1098_REFNDAPPLDY TEXT( 4 )                  , 
           NOSHOWONBILL       TEXT( 1 )                  , 
           SOURCE             TEXT( 20 )                 , 
           FK_ID_BILLINGPERIO INTEGER                    , 
           FK_IDGLJOURNALENTR INTEGER                    , 
           CREDITIDGLCHARTENT INTEGER                    , 
           FKIDDEPOSITGROUPIN INTEGER                    , 
           DEBITIDGLCHARTENTR INTEGER                    , 
           FKIDSATRANSACTIONC INTEGER                    , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_Z_USER       INTEGER                    , 
           FK_IDTERMOFMEALPLA INTEGER                    , 
           FKIDSTUDENTACCOU02 INTEGER                    , 
           FK_ID_STUDENT      INTEGER                    , 
           FKIDFINAIDAWARDDIS INTEGER                    , 
           FKIDSTUDENTACCOU03 INTEGER                    , 
           FKIDTERMOFRESIDENC INTEGER                    , 
           FK_ID_BATCHEDITLIS INTEGER                    , 
           FK_ID_COLLEGETERM  INTEGER                    , 
           FK_ID_CLASS        INTEGER                    , 
           FK_ID_SASUBACCOUNT INTEGER                     ) ;
 
-- Entity - StudentAssignment 
CREATE TABLE STUDENTASSIGNMENT ( 
           ID                 INTEGER            NOT NULL, 
           z_NOTE             MEMO                       , 
           PASSEDINDATE       DATE                       , 
           GRADE              INTEGER                    , 
           UPLOADFILENAME     TEXT( 254 )                , 
           UPLOADDIRECTORY    TEXT( 254 )                , 
           THISGRADENOTINCLUD TEXT( 1 )                  , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_ASSIGNMENT   INTEGER            NOT NULL ) ;
 
-- Entity - StudentCertification 
CREATE TABLE STUDENTCERTIFICATION ( 
           ID                 INTEGER            NOT NULL, 
           GRADUATECOLLEGEFLA TEXT( 1 )                  , 
           APPLYTOCOLLEGELEVE TEXT( 1 )                  , 
           FK_ID_COLLEGETERM  INTEGER                    , 
           FKIDCERTIFICATIONS INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - StudentChangeHistory 
CREATE TABLE STUDENTCHANGEHISTORY ( 
           ID                 INTEGER            NOT NULL, 
           STUDENTSTATUS      TEXT( 1 )                  , 
           CLASSIFICATION     TEXT( 5 )                  , 
           RESIDENCYSTATUS    TEXT( 1 )                  , 
           FINANCIALHOLDFLAG  TEXT( 1 )                  , 
           ADMINISTRATIVDVSNN TEXT( 50 )                 , 
           ANTICIPATEDGRADPER TEXT( 50 )                 , 
           FIRSTDATE          DATE                       , 
           LASTDATE           DATE                       , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - StudentChangeLog 
CREATE TABLE STUDENTCHANGELOG ( 
           ID                 INTEGER            NOT NULL, 
           ATTRIBUTENAME      TEXT( 50 )                 , 
           ORIGINALVALUE      TEXT( 254 )                , 
           NEWVALUE           TEXT( 254 )                , 
           MODIFICATIONDATE   DATE                       , 
           USERNAME           TEXT( 50 )                 , 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - StudentCollegeTerm 
CREATE TABLE STUDENTCOLLEGETERM ( 
           ID                 INTEGER            NOT NULL, 
           FINANCILRGSTRTNSTT TEXT( 5 )                  , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           PERSONALDATAVERIFY TEXT( 1 )                  , 
           PERSONLDTVRFYTMSTM TEXT( 25 )                 , 
           ADDRESSVERIFY      TEXT( 1 )                  , 
           ADDRESSVERIFYTMSTM TEXT( 25 )                 , 
           NOFERPAVERIFY      TEXT( 1 )                  , 
           NOFERPAVERIFYTMSTM TEXT( 25 )                 , 
           NOEDALLOWANCEVERIF TEXT( 1 )                  , 
           NEDALLWNCVRFYTMSTM TEXT( 25 )                 , 
           FERPAVERIFY        TEXT( 1 )                  , 
           FERPAVERIFYTIMESTM TEXT( 25 )                 , 
           EDALLOWANCEVERIFY  TEXT( 1 )                  , 
           EDALLOWNCVRFYTMSTM TEXT( 25 )                 , 
           STUDENTSERVICESVRF TEXT( 1 )                  , 
           STDNTSRVCSVRFYTMST TEXT( 25 )                 , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
-- Entity - StudentHealth 
CREATE TABLE STUDENTHEALTH ( 
           ID                 INTEGER            NOT NULL, 
           PARENTGUARDINDYPHN TEXT( 10 )                 , 
           PARENTGURDNNGHTPHN TEXT( 10 )                 , 
           INSURANCECOMPANY   TEXT( 50 )                 , 
           INSURANCECOMPNYNMB TEXT( 15 )                 , 
           INSURANCESUBSCRIBE TEXT( 50 )                 , 
           DPT_VACCINEDATE1   DATE                       , 
           DPT_VACCINEDATE2   DATE                       , 
           DPT_VACCINEDATE3   DATE                       , 
           DPT_VACCINEDATE4   DATE                       , 
           TD_BOOSTERDATE1    DATE                       , 
           TD_BOOSTERDATE2    DATE                       , 
           TD_BOOSTERDATE3    DATE                       , 
           TD_BOOSTERDATE4    DATE                       , 
           TT_BOOSTERDATE1    DATE                       , 
           TT_BOOSTERDATE2    DATE                       , 
           TT_BOOSTERDATE3    DATE                       , 
           TT_BOOSTERDATE4    DATE                       , 
           TRIVORALPOLIVCCNDT DATE                       , 
           TRIVORALPOLIVCCN02 DATE                       , 
           TRIVORALPOLIVCCN03 DATE                       , 
           TRIVORALPOLIVCCN04 DATE                       , 
           TRIVORALPOLIBSTRDT DATE                       , 
           TRIVORALPOLIBSTR02 DATE                       , 
           TRIVORALPOLIBSTR03 DATE                       , 
           TRIVORALPOLIBSTR04 DATE                       , 
           MEASLESREBEOLVCCND DATE                       , 
           MEASLESTITERDATE   DATE                       , 
           MEASLESTITER       TEXT( 10 )                 , 
           REBEOLADISEASEDATE DATE                       , 
           MUMPSVACCINEDATE   DATE                       , 
           MUMPSDISEASEDATE   DATE                       , 
           MUMPSTITERDATE     DATE                       , 
           MUMPSTITER         TEXT( 10 )                 , 
           RUBLLGRMNMSLSVCCND DATE                       , 
           RUBELLADISEASEDATE DATE                       , 
           RUBELLATITERDATE   DATE                       , 
           RUBELLATITER       TEXT( 10 )                 , 
           FOLLOWUPDATE       DATE                       , 
           COMPLETEDDATE      DATE                       , 
           MMR_VACCINEDATE1   DATE                       , 
           MMR_VACCINEDATE2   DATE                       , 
           MMR_VACCINEDATE3   DATE                       , 
           MMR_BOOSTERDATE1   DATE                       , 
           MMR_BOOSTERDATE2   DATE                       , 
           MMR_BOOSTERDATE3   DATE                       , 
           MMR_TITERDATE      DATE                       , 
           TB_RISKTESTFLAG    TEXT( 1 )                  , 
           TB_RISKASSESSMENTD DATE                       , 
           TB_RISKASSESSMENT  TEXT( 1 )                  , 
           TB_TESTRESULT      TEXT( 10 )                 , 
           TB_EVALUATIONDONFL TEXT( 1 )                  , 
           TDAPDATE           DATE                       , 
           TUBERCULINTESTTYPE TEXT( 20 )                 , 
           TUBERCULINDATEDONE DATE                       , 
           TUBERCULINDATEREAD DATE                       , 
           TUBERCULINTESTRESL TEXT( 20 )                 , 
           HEMATCRTHHGLBNTSTD DATE                       , 
           HMTCRTHHGLBNTSTRSL TEXT( 20 )                 , 
           HEPATITISB_DOSEDAT DATE                       , 
           HEPATITISB_DOSED02 DATE                       , 
           HEPATITISB_DOSED03 DATE                       , 
           HEPATITISB_TITERDA DATE                       , 
           HEPATITISTITER     TEXT( 10 )                 , 
           HEPATITISB2DSSRSFL TEXT( 1 )                  , 
           VARICELLAVACCINEDT DATE                       , 
           VARICELLAVACCINE02 DATE                       , 
           VARICELLAHXDISESFL TEXT( 1 )                  , 
           VARICELLATITERDATE DATE                       , 
           VARICELLATITER     TEXT( 10 )                 , 
           NEEDVARICELLAFLAG  TEXT( 1 )                  , 
           MENOMUNEVACCINEDAT DATE                       , 
           MENOMUNEVACCINED02 DATE                       , 
           INFLUENZAVACCINEDT DATE                       , 
           INFLUENZAVACCINEDA DATE                       , 
           URINALYSISDATE     DATE                       , 
           URINALYSISSPGR     DOUBLE                     , 
           URINALYSISALB      TEXT( 5 )                  , 
           URINALYSISSUGAR    TEXT( 3 )                  , 
           URINALYSISOTHER    TEXT( 4 )                  , 
           VISIONNMBRGLSSSRGH TEXT( 3 )                  , 
           VISIONNUMBRGLSSSLF TEXT( 3 )                  , 
           CONTACTLENSES      TEXT( 1 )                  , 
           COLORVISINISHGRSTT TEXT( 1 )                  , 
           CRRCTDVSNWTHGLSRGH TEXT( 3 )                  , 
           CRRCTDVSNWTHGLSSLF TEXT( 3 )                  , 
           HEARINGSTATUS      TEXT( 1 )                  , 
           HEARINGAIDFLAG     TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           HEALTHREQDONE      TEXT( 1 )                  , 
           PHYSICALFRMTRNDIND DATE                       , 
           LASTLETTERDATE     DATE                       , 
           NEEDPHYSICALFORMFL TEXT( 1 )                  , 
           NEEDTETANUSBOSTRFL TEXT( 1 )                  , 
           NEEDPOLIOVACCINEFL TEXT( 1 )                  , 
           NEEDMMR_PROOFFLAG  TEXT( 1 )                  , 
           NEEDHEPATITISPRFFL TEXT( 1 )                  , 
           NEEDMNNGCCCLVCCNFL TEXT( 1 )                  , 
           MENNGCCCLVCCNWVDFL TEXT( 1 )                  , 
           INSURANCEWAVRFRMFL TEXT( 1 )                  , 
           INSURANCEWAIVEDDAT DATE                       , 
           RLTNSHPOFINSRDTSTD TEXT( 254 )                , 
           INSURANCEGROUPNAME TEXT( 50 )                 , 
           MEDICALEXEMPTIONFL TEXT( 1 )                  , 
           RELGIOUSEXEMPTINFL TEXT( 1 )                  , 
           INTRNLINSRNCCMPNYF TEXT( 1 )                   ) ;
 
-- Entity - StudentMajorDegreeTrack 
CREATE TABLE STUDENTMAJORDEGREETRACK ( 
           ID                 INTEGER            NOT NULL, 
           COMPREHENSIVETSTSC TEXT( 1 )                  , 
           LASTADTSTSFDDSCRPT TEXT( 254 )                , 
           GRADUATIONDATE     DATE                       , 
           CERTIFICATECMPLTND DATE                       , 
           RANKING            INTEGER                    , 
           HISTORICALONLYFLAG TEXT( 1 )                  , 
           STARTDATE          DATE                       , 
           SWITCHMAJORDATE    DATE                       , 
           RGRQRSADVSRAPRVLFL TEXT( 1 )                  , 
           DEGREEVERIFYSENTDA DATE                       , 
           FKIDDEGREECANDIDAC INTEGER                    , 
           FK_ID_FACULTY      INTEGER                    , 
           FK_ID_DEGREETRACK  INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER                    , 
           FKHISTID_STUDENT   INTEGER                    , 
           FKIDSTUDENTMAJORDE INTEGER                     ) ;
 
-- Entity - StudentMinorDegreeTrack 
CREATE TABLE STUDENTMINORDEGREETRACK ( 
           ID                 INTEGER            NOT NULL, 
           FK_ID_DEGREETRACK  INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - StudentNonresidencyPetition 
CREATE TABLE STUDENTNONRESIDENCYPETITION ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 1 )                  , 
           PETITIONREASON     TEXT( 5 )                  , 
           APPLICANTNOTE      MEMO                       , 
           INTERNALNOTE       MEMO                       , 
           DECISIONDATE       DATE                       , 
           APPROVALDATE       DATE                       , 
           CREATEDDATETIME    DATE                       , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - StudentWaitlisted 
CREATE TABLE STUDENTWAITLISTED ( 
           WAITLISTRANKING    INTEGER                    , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_CLASS        INTEGER            NOT NULL ) ;
 
-- Entity - StudyOptionGroup 
CREATE TABLE STUDYOPTIONGROUP ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 10 )                 , 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER                    , 
           FKIDCLASSROOMSTAND INTEGER                    , 
           FK_ID_ROOM         INTEGER                     ) ;
 
-- Entity - StuHistSummary 
CREATE TABLE STUHISTSUMMARY ( 
           ID                 INTEGER            NOT NULL, 
           PRSPCTENRLLMNTCTGR TEXT( 40 )                 , 
           FULLTIMEPARTTIMEFL TEXT( 254 )                , 
           FINAIDFULLPARTTMFL TEXT( 254 )                , 
           GRADUNDERGRADSTATU TEXT( 254 )                , 
           PRYRINCMNGFRSHMNFL TEXT( 1 )                  , 
           STUDENTRESIDNCYSTT TEXT( 1 )                  , 
           AGEATCENSUSDATE    INTEGER                    , 
           GENDER             TEXT( 1 )                  , 
           CLASSIFICATINATCNS TEXT( 5 )                  , 
           STUDENTSTATUS      TEXT( 1 )                  , 
           FINANCIALHOLDFLAG  TEXT( 1 )                  , 
           TOTALCREDITS       DOUBLE                     , 
           FA_TOTALNEED       DOUBLE                     , 
           FA_APPLIEDNEEDBSDF TEXT( 1 )                  , 
           NB_SCHGRFEDAMOUNT  DOUBLE                     , 
           NB_SCHGRSTATEAMOUN DOUBLE                     , 
           NB_SCHGRINSTAMOUNT DOUBLE                     , 
           NB_SCHGROTHERAMOUN DOUBLE                     , 
           NB_SCHGRTOTALAMOUN DOUBLE                     , 
           NB_SH_STULOANAMOUN DOUBLE                     , 
           NB_SH_FEDWSAMOUNT  DOUBLE                     , 
           NB_SH_TOTALAMOUNT  DOUBLE                     , 
           NB_PARLOANTOTALAMN DOUBLE                     , 
           NB_TUITIONWVTTLAMN DOUBLE                     , 
           NB_TOTALFA         DOUBLE                     , 
           NNB_SCHGRFEDAMOUNT DOUBLE                     , 
           NNB_SCHGRSTATEAMON DOUBLE                     , 
           NNB_SCHGRINSTAMOUN DOUBLE                     , 
           NNB_SCHGROTHERAMON DOUBLE                     , 
           NNB_SCHGRTOTALAMON DOUBLE                     , 
           NNB_SH_STULOANAMON DOUBLE                     , 
           NNB_SH_FEDWSAMOUNT DOUBLE                     , 
           NNB_SH_TOTALAMOUNT DOUBLE                     , 
           NNB_PARLOANTOTLAMN DOUBLE                     , 
           NNB_TUITINWVTTLAMN DOUBLE                     , 
           NNB_TOTALFA        DOUBLE                     , 
           FA_TOTALFA         DOUBLE                     , 
           IPEDS_FEDERALGRANT DOUBLE                     , 
           IPEDS_STATEGRANT   DOUBLE                     , 
           IPEDS_INSTGRANT    DOUBLE                     , 
           IPEDS_LOAN         DOUBLE                     , 
           LASTNAME           TEXT( 50 )                 , 
           FIRSTNAME          TEXT( 50 )                 , 
           MIDDLENAME         TEXT( 50 )                 , 
           SUFFIX             TEXT( 50 )                 , 
           CAMPUSID           TEXT( 9 )                  , 
           NEWETHNICITYRACE   TEXT( 10 )                 , 
           IPEDS_ETHNICITY    TEXT( 254 )                , 
           PRYRINCMNGFRSHMNCR DOUBLE                     , 
           FIRSTTIMEFRESHMNFL TEXT( 1 )                  , 
           STATEOFPRIMARYRSDN TEXT( 2 )                  , 
           FKIDPROSPECTHISTSU INTEGER                    , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FKIDFYREPORTSUMMAR INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - StuHistSummaryDegreeMajor 
CREATE TABLE STUHISTSUMMARYDEGREEMAJOR ( 
           ID                 INTEGER            NOT NULL, 
           MAJORNAME          TEXT( 50 )                 , 
           CIP_SUBCATEGORY    TEXT( 15 )                 , 
           FK_IDSTUHISTSUMMAR INTEGER            NOT NULL ) ;
 
-- Entity - SubAssignment 
CREATE TABLE SUBASSIGNMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           GRADEPOINTS        INTEGER                    , 
           POTENTIALPOINTS    INTEGER                    , 
           GRADEPERCENT       DOUBLE                     , 
           ASSIGNMENTDATE     DATE                       , 
           DUEDATE            DATE                       , 
           EXTRACREDITPOINTS  INTEGER                    , 
           PERCENTGRADEWEIGHT DOUBLE                     , 
           z_NOTE             MEMO                       , 
           FK_ID_ASSIGNMENT   INTEGER            NOT NULL ) ;
 
-- Entity - TermOfMealPlan 
CREATE TABLE TERMOFMEALPLAN ( 
           ID                 INTEGER            NOT NULL, 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           WITHDRAWALDATE     DATE                       , 
           FKIDSTUDENTACCOUNT INTEGER                    , 
           FK_ID_MEALPLAN     INTEGER                     ) ;
 
-- Entity - TermOfResidence 
CREATE TABLE TERMOFRESIDENCE ( 
           ID                 INTEGER            NOT NULL, 
           BEGINDATE          DATE                       , 
           ENDDATE            DATE                       , 
           WITHDRAWALDATE     DATE                       , 
           CHECKINDATE        DATE                       , 
           FK_ID_OCCUPANTUNIT INTEGER            NOT NULL, 
           FK_ID_ROOM         INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
-- Entity - Territory 
CREATE TABLE TERRITORY ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           DISTRICTCODE       TEXT( 3 )                  , 
           FK_ID_STAFF        INTEGER                     ) ;
 
-- Entity - TrainingChild 
CREATE TABLE TRAININGCHILD ( 
           ID                 INTEGER            NOT NULL, 
           LASTNAME           TEXT( 50 )                 , 
           FIRSTNAME          TEXT( 50 )                 , 
           MIDDLENAME         TEXT( 50 )                 , 
           SUFFIX             TEXT( 50 )                 , 
           GENDER             TEXT( 1 )                  , 
           MARITALSTATUS      TEXT( 1 )                  , 
           HOMEPHONE          TEXT( 10 )                 , 
           WORKPHONE          TEXT( 10 )                 , 
           MOBILEPHONE        TEXT( 10 )                 , 
           EMAILADDRESS       TEXT( 128 )                , 
           DATEOFBIRTH        DATE                       , 
           HAIRCOLOR          TEXT( 10 )                 , 
           FK_IDTRAININGPAREN INTEGER            NOT NULL ) ;
 
-- Entity - TrainingGrandChild 
CREATE TABLE TRAININGGRANDCHILD ( 
           ID                 INTEGER            NOT NULL, 
           LASTNAME           TEXT( 50 )                 , 
           FIRSTNAME          TEXT( 50 )                 , 
           MIDDLENAME         TEXT( 50 )                 , 
           SUFFIX             TEXT( 50 )                 , 
           GENDER             TEXT( 1 )                  , 
           MARITALSTATUS      TEXT( 1 )                  , 
           HOMEPHONE          TEXT( 10 )                 , 
           WORKPHONE          TEXT( 10 )                 , 
           MOBILEPHONE        TEXT( 10 )                 , 
           EMAILADDRESS       TEXT( 128 )                , 
           DATEOFBIRTH        DATE                       , 
           HAIRCOLOR          TEXT( 10 )                 , 
           FK_ID_TRAININGCHIL INTEGER            NOT NULL ) ;
 
-- Entity - TrainingParent 
CREATE TABLE TRAININGPARENT ( 
           ID                 INTEGER            NOT NULL, 
           LASTNAME           TEXT( 50 )                 , 
           FIRSTNAME          TEXT( 50 )                 , 
           MIDDLENAME         TEXT( 50 )                 , 
           SUFFIX             TEXT( 50 )                 , 
           GENDER             TEXT( 1 )                  , 
           MARITALSTATUS      TEXT( 1 )                  , 
           HOMEPHONE          TEXT( 10 )                 , 
           WORKPHONE          TEXT( 10 )                 , 
           MOBILEPHONE        TEXT( 10 )                 , 
           EMAILADDRESS       TEXT( 128 )                , 
           DATEOFBIRTH        DATE                       , 
           HAIRCOLOR          TEXT( 10 )                  ) ;
 
-- Entity - Transaction 
CREATE TABLE z_TRANSACTION ( 
           DESCRIPTION        TEXT( 30 )                 , 
           USERID             INTEGER            NOT NULL, 
           USERNAME           TEXT( 50 )         NOT NULL, 
           STOREDOI           LONGBINARY                 , 
           ORIGINALOI         LONGBINARY                 , 
           TRANSDATETIME      TEXT( 25 )         NOT NULL, 
           ID                 INTEGER            NOT NULL, 
           FK_ID_EMPLOYEE     INTEGER                    , 
           FK_ID_CLASS        INTEGER                    , 
           FK_ID_COURSE       INTEGER                    , 
           FK_ID_COHORT       INTEGER                    , 
           FK_ID_ORGANIZATION INTEGER                    , 
           FK_ID_CHURCH       INTEGER                    , 
           FK_ID_DEPOSIT      INTEGER                    , 
           FK_ID_DONATION     INTEGER                    , 
           FK_ID_PROSPECT     INTEGER                    , 
           FK_ID_DONOR        INTEGER                    , 
           FK_ID_EVENT        INTEGER                    , 
           FK_ID_FACULTY      INTEGER                    , 
           FK_ID_FUND         INTEGER                    , 
           FK_ID_GIFT         INTEGER                    , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_PLEDGE       INTEGER                    , 
           FK_ID_POTENTIALGIF INTEGER                    , 
           FK_ID_RECEIPT      INTEGER                    , 
           FK_ID_SCHOOL       INTEGER                    , 
           FK_ID_STAFF        INTEGER                    , 
           FK_ID_STUDENT      INTEGER                     ) ;
 
-- Entity - TranscriptRequest 
CREATE TABLE TRANSCRIPTREQUEST ( 
           ID                 INTEGER            NOT NULL, 
           REASONFORREQUEST   TEXT( 254 )                , 
           CREATIONDATE       DATE                       , 
           QUANTITY           INTEGER                    , 
           WHERESENT          TEXT( 50 )                 , 
           SENTTONAME         TEXT( 50 )                 , 
           TYPE               TEXT( 1 )                  , 
           DATEATTENDEDFROM   TEXT( 20 )                 , 
           DATEATTENDEDTO     TEXT( 20 )                 , 
           HELDFORREASON      TEXT( 2 )                  , 
           FEE                DOUBLE                     , 
           FEEPAID            DOUBLE                     , 
           FEEPAIDCHECKNUMBER TEXT( 254 )                , 
           SENTPICKEDUPDATE   DATE                       , 
           PICKEDUPBYSTUDNTFL TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_ADDRESS      INTEGER                     ) ;
 
-- Entity - TransferCourseApprovalRequest 
CREATE TABLE TRANSFERCOURSEAPPROVALREQUEST ( 
           ID                 INTEGER            NOT NULL, 
           FOREIGNCOURSENUMBE TEXT( 10 )                 , 
           FOREIGNCOURSETITLE TEXT( 50 )                 , 
           FOREIGNCOURSECREDT DOUBLE                     , 
           FOREIGNCOURSECOLLE TEXT( 50 )                 , 
           FOREIGNCOURSETERM  TEXT( 50 )                 , 
           APPROVEDDENIEDSTAT TEXT( 1 )                  , 
           FK_ID_COURSE       INTEGER                    , 
           FKIDDEGREECANDIDAC INTEGER            NOT NULL ) ;
 
-- Entity - TransferGroup 
CREATE TABLE TRANSFERGROUP ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           TRANSFERRECEIVEDDA DATE                       , 
           TRANSFEREVALUATIND DATE                       , 
           TRANSFERREEVALUTND DATE                       , 
           TRANSFERAPPROVEDDA DATE                       , 
           SIGNOFFUSERNAME    TEXT( 50 )                 , 
           GRADUATECOLLEGEFLA TEXT( 1 )                  , 
           APPLYTOCOLLEGELEVE TEXT( 1 )                  , 
           TRANSFERINFLAG     TEXT( 1 )                  , 
           TRANSFERINGPA      DOUBLE                     , 
           TRNSFRINATMPTDCRDT DOUBLE                     , 
           TRANSFERINQULTYPNT DOUBLE                     , 
           AUTOSEQ            INTEGER                    , 
           FK_ID_SCHOOL       INTEGER                    , 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER                     ) ;
 
-- Entity - TransferGroupTextLine 
CREATE TABLE TRANSFERGROUPTEXTLINE ( 
           ID                 INTEGER            NOT NULL, 
           LINETEXT           TEXT( 254 )                , 
           AUTOSEQ            INTEGER                    , 
           FK_ID_TRANSFERGROU INTEGER            NOT NULL ) ;
 
-- Entity - Trustee 
CREATE TABLE TRUSTEE ( 
           ID                 INTEGER            NOT NULL, 
           DISTRICT           TEXT( 5 )                  , 
           TYPE               TEXT( 5 )                  , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           CNFLCTOFINTRSTSGND DATE                       , 
           INITIALELECTIONDAT DATE                       , 
           LASTELECTIONDATE   DATE                       , 
           REGALIAHEIGHTFEET  INTEGER                    , 
           REGALIAHEIGHTINCHE INTEGER                    , 
           REGALIAGOWNCUT     TEXT( 1 )                  , 
           REGALIACAPSIZE     TEXT( 10 )                 , 
           REGALIASHIRTDRESSS TEXT( 20 )                 , 
           REGALIAOWNGOWNFLAG TEXT( 1 )                  , 
           FOUNDATIONBDMMBRFL TEXT( 1 )                  , 
           TRUSTEEMEMBERFLAG  TEXT( 1 )                   ) ;
 
-- Entity - TrusteeCommitteeAssignment 
CREATE TABLE TRUSTEECOMMITTEEASSIGNMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 5 )                  , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           DATEONCOMMITTEE    DATE                       , 
           DATEOFFCOMMITTEE   DATE                       , 
           POSITIONHELD       TEXT( 5 )                  , 
           DATEELECTEDTOCOMMT DATE                       , 
           DATEREELECTEDTCMMT DATE                       , 
           NUMBEROFTERMSSERVE INTEGER                    , 
           FK_ID_TRUSTEE      INTEGER            NOT NULL ) ;
 
-- Entity - TrusteeSubcommitteeAssignment 
CREATE TABLE TRUSTEESUBCOMMITTEEASSIGNMENT ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 5 )                  , 
           ACTIVEFLAG         TEXT( 1 )                  , 
           DATEONSUBCOMMITTEE DATE                       , 
           DATEOFFSUBCOMMITTE DATE                       , 
           POSITIONHELD       TEXT( 5 )                  , 
           DATEELECTEDTSBCMMT DATE                       , 
           DATEREELCTDTSBCMMT DATE                       , 
           NUMBEROFTERMSSERVE INTEGER                    , 
           FK_ID_TRUSTEE      INTEGER            NOT NULL ) ;
 
-- Entity - User 
CREATE TABLE z_USER ( 
           ID                 INTEGER            NOT NULL, 
           USERNAME           TEXT( 50 )         NOT NULL, 
           PASSWORD           TEXT( 20 )                 , 
           EMAILPASSWORD      TEXT( 32 )                 , 
           EMAILUSERNAME      TEXT( 254 )                , 
           EMAILADDRESS       TEXT( 128 )                , 
           SMTPSERVER         TEXT( 254 )                , 
           ACTIVE             TEXT( 1 )                  , 
           STATUS             TEXT( 1 )                  , 
           OVERRIDESTATUS     TEXT( 1 )                  , 
           LOGINAUTHENTICTNTY TEXT( 10 )                 , 
           z_NOTE             MEMO                       , 
           DESCRIPTION        MEMO                       , 
           WEBBROADCASTMSSGFL TEXT( 1 )                  , 
           LASTLOGINDATETIME  TEXT( 25 )                 , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           SECURITYQUESTION1  TEXT( 254 )                , 
           SECURITYQUESTION2  TEXT( 254 )                , 
           SECURITYQUESTION3  TEXT( 254 )                , 
           SECURITYANSWER1    TEXT( 254 )                , 
           SECURITYANSWER2    TEXT( 254 )                , 
           SECURITYANSWER3    TEXT( 254 )                , 
           PRSPCTINTLAPLCTNPR LONGBINARY                 , 
           WEBLOGINCOUNT      INTEGER                    , 
           PRSPCTFNADAWRDPGCN INTEGER                    , 
           AUTHORIZATIONLEVEL TEXT( 10 )                 , 
           ONLNPRSPCTINTLCRTD DATE                       , 
           FKIDADMINISTRATIVE INTEGER                    , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - UserGroup 
CREATE TABLE USERGROUP ( 
           ID                 INTEGER            NOT NULL, 
           GROUPNAME          TEXT( 50 )         NOT NULL, 
           DESCRIPTION        MEMO                       , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           MODIFIEDDATETIME   TEXT( 25 )                 , 
           CREATEDBY          TEXT( 50 )                 , 
           LASTMODIFIEDBY     TEXT( 50 )                 , 
           FKIDADMINISTRATIVE INTEGER                     ) ;
 
-- Entity - UserTask 
CREATE TABLE USERTASK ( 
           ID                 INTEGER            NOT NULL, 
           STATUS             TEXT( 1 )                  , 
           DIALOGNAME         TEXT( 8 )                  , 
           WINDOWNAME         TEXT( 32 )                 , 
           OBJECTID           INTEGER                    , 
           DESCRIPTION        TEXT( 50 )                 , 
           z_NOTE             MEMO                       , 
           PRIORITY           INTEGER                    , 
           CREATEDDATETIME    TEXT( 25 )                 , 
           DUEDATE            DATE                       , 
           COMPLETEDDATETIME  TEXT( 25 )                 , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - UserTraceRecord 
CREATE TABLE USERTRACERECORD ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           USERNAME           TEXT( 50 )                 , 
           LOGINDATETIME      TEXT( 25 )                 , 
           LOGOUTDATETIME     TEXT( 25 )                 , 
           LASTJSP_PAGE       TEXT( 254 )                , 
           LASTJSP_ACTION     TEXT( 254 )                 ) ;
 
-- Entity - VehicleRegistration 
CREATE TABLE VEHICLEREGISTRATION ( 
           ID                 INTEGER            NOT NULL, 
           MODELYEAR          TEXT( 4 )                  , 
           REGISTRATIONNUMBER TEXT( 10 )                 , 
           REGISTRATIONTYPE   TEXT( 1 )                  , 
           MAKE               TEXT( 254 )                , 
           MODEL              TEXT( 254 )                , 
           STATE              TEXT( 2 )                  , 
           PLATENUMBER        TEXT( 254 )                , 
           FK_ID_PERSON       INTEGER                    , 
           FK_ID_COLLEGEYEAR  INTEGER                     ) ;
 
-- Entity - Vendor 
CREATE TABLE VENDOR ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           VENDORNUMBER       TEXT( 254 )                , 
           APPENDTOPAYEE      TEXT( 254 )                , 
           DESCRIPTION        TEXT( 50 )                 , 
           ACCOUNTNUMBER      TEXT( 254 )                , 
           DATEOFLASTPAYMENT  DATE                       , 
           WEBSITE            TEXT( 254 )                , 
           VENDORWEBSITELOGNN TEXT( 254 )                , 
           VENDORWEBSITEPSSWR TEXT( 254 )                , 
           USE1099            TEXT( 1 )                  , 
           FEDERALID          TEXT( 254 )                , 
           z_NOTE             MEMO                       , 
           ORDERID_ADDRESS    INTEGER                    , 
           REMITID_ADDRESS    INTEGER                    , 
           FK_ID_GLCHARTENTRY INTEGER                    , 
           FK_ID_GLACCOUNTS   INTEGER                    , 
           FK_ID_APTERMS      INTEGER                    , 
           FK_ID_PERSON       INTEGER                     ) ;
 
-- Entity - WebAdditionalInteractivePage 
CREATE TABLE WEBADDITIONALINTERACTIVEPAGE ( 
           ID                 INTEGER            NOT NULL, 
           CONTENTDIALOGWNDWN TEXT( 50 )                 , 
           FK_ID_WEBPAGE      INTEGER            NOT NULL ) ;
 
-- Entity - WebDesignStructure 
CREATE TABLE WEBDESIGNSTRUCTURE ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                 , 
           GENERATINOTPTDRCTR MEMO                       , 
           FK_ID_Z_USER       INTEGER                     ) ;
 
-- Entity - WebPage 
CREATE TABLE WEBPAGE ( 
           ID                 INTEGER            NOT NULL, 
           NAVIGATIONTITLE    TEXT( 50 )                 , 
           HOTLINK            MEMO                       , 
           CONTENTXML_FILENAM MEMO                       , 
           HTML_OUTPUTFILENAM MEMO                       , 
           CONTENTDIALOGWNDWN TEXT( 50 )                 , 
           SAMELEVLASPRNTMNFL TEXT( 1 )                  , 
           z_NOTE             MEMO                       , 
           TITLEIMAGEFILE     MEMO                       , 
           METATITLE          MEMO                       , 
           METAKEYWORDS       MEMO                       , 
           METADESCRIPTION    MEMO                       , 
           AUTOSEQ            INTEGER                    , 
           FKIDWEBDESIGNSTRUC INTEGER                    , 
           FK_ID_WEBPAGE      INTEGER                     ) ;
 
-- Entity - WebUserMessage 
CREATE TABLE WEBUSERMESSAGE ( 
           ID                 INTEGER            NOT NULL, 
           TYPE               TEXT( 1 )                  , 
           SUMMARYMESSAGE     TEXT( 254 )                , 
           LASTDATEFORDISPLAY DATE                       , 
           FULLMESSAGE        MEMO                       , 
           FIRSTDATEFORDISPLA DATE                       , 
           AS_STUDENTRECEIVFL TEXT( 1 )                  , 
           MC_STUDENTRECEIVFL TEXT( 1 )                  , 
           AS_FACULTYRECEIVFL TEXT( 1 )                  , 
           MC_FACULTYRECEIVFL TEXT( 1 )                  , 
           AS_PROSPECTRECEVFL TEXT( 1 )                  , 
           MC_PROSPECTRECEVFL TEXT( 1 )                  , 
           STAFFRECEIVEFLAG   TEXT( 1 )                  , 
           FK_ID_Z_USER       INTEGER            NOT NULL, 
           FKIDWEBUSERMESSAGE INTEGER                     ) ;
 
-- Entity - WebUserMessageGroup 
CREATE TABLE WEBUSERMESSAGEGROUP ( 
           ID                 INTEGER            NOT NULL, 
           NAME               TEXT( 50 )                  ) ;
 
-- Entity - WorkStudyAllocation 
CREATE TABLE WORKSTUDYALLOCATION ( 
           ID                 INTEGER            NOT NULL, 
           z_DATE             DATE                       , 
           AMOUNT             DOUBLE                     , 
           FK_ID_EMPLOYEE     INTEGER            NOT NULL, 
           FK_ID_FINAIDPROFIL INTEGER            NOT NULL ) ;
 
-- Entity - YearlyContract 
CREATE TABLE YEARLYCONTRACT ( 
           ID                 INTEGER            NOT NULL, 
           CONTRACTYEAR       TEXT( 9 )                  , 
           STATUS             TEXT( 1 )                  , 
           PAYMENTMODE        TEXT( 10 )                 , 
           NEWCONTRACTREASON  TEXT( 10 )                 , 
           OCCUPATIONALACTIVT TEXT( 10 )                 , 
           POSITIONDESCRIPTIO TEXT( 50 )                 , 
           MEDICALCODE        TEXT( 2 )                  , 
           INSURANCETYPE      TEXT( 5 )                  , 
           EMPLOYEECLASSIFICT TEXT( 2 )                  , 
           SALARYCOMPENSATION DOUBLE                     , 
           TOTALCOMPENSATION  DOUBLE                     , 
           EFFECTIVEDATE      DATE                       , 
           TERMINATIONDATE    DATE                       , 
           HOURLYHOURSPERWEEK DOUBLE                     , 
           HOURLYWEEKSPERYEAR INTEGER                    , 
           HOURLYRATE         DOUBLE                     , 
           ANNUALSALARYAMOUNT DOUBLE                     , 
           ADDITIONALSALRYAMN DOUBLE                     , 
           ADDITIONALSLRYDPTC TEXT( 15 )                 , 
           ADDITNLAMNTBNFTSFL TEXT( 1 )                  , 
           TENURETRACK        TEXT( 10 )                 , 
           FACULTYDEGREE      TEXT( 3 )                  , 
           FACULTYYEARSOFSERV INTEGER                    , 
           FACULTYRANK        TEXT( 1 )                  , 
           FACULTYADDITNLMNTH INTEGER                    , 
           FCLTYADTNLMNTHSDPT TEXT( 15 )                 , 
           FACLTYOVRRDSLRYAMN DOUBLE                     , 
           ATTAINEDTRMNLDGRFL TEXT( 1 )                  , 
           STNDRDFCLTYSLRYRTU DOUBLE                     , 
           RETIREMENTBENFTSTY TEXT( 4 )                  , 
           FULLPARTTIMEFLAG   TEXT( 1 )                  , 
           HOUSINGUNITIDENTIF TEXT( 5 )                  , 
           HOUSNGUNTANNLRNTLV DOUBLE                     , 
           NOTES              MEMO                       , 
           FKDEGREEVALUEACADE TEXT( 10 )                 , 
           FK_ID_GLBUDGET     INTEGER                    , 
           FK_IDYEARLYCONTRAC INTEGER                    , 
           FK_ID_GLFISCALYEAR INTEGER                    , 
           FKIDSTANDARDSALARY INTEGER                    , 
           FK_ID_MEDICALCODE  INTEGER                    , 
           FK_ID_EMPLOYEE     INTEGER                     ) ;
 
-- Entity - YearlyContractRole 
CREATE TABLE YEARLYCONTRACTROLE ( 
           ID                 INTEGER            NOT NULL, 
           TITLE              TEXT( 254 )                , 
           DIRECTORYPUBLCTNFL TEXT( 1 )                  , 
           PHONEAREACODEEXCHN TEXT( 7 )                  , 
           PHONENUMBEREXTENSI TEXT( 4 )                  , 
           FK_IDYEARLYCONTRAC INTEGER            NOT NULL, 
           FK_ID_DEPARTMENT   INTEGER            NOT NULL, 
           FK_ID_HR_POSITION  INTEGER            NOT NULL, 
           FK_ID_ROOM         INTEGER                     ) ;
 
-- Entity - ZeidonGenkeyTable 
CREATE TABLE ZEIDONGENKEYTABLE ( 
           CURRENTGENKEY      INTEGER                    , 
           TABLENAME          TEXT( 32 )         NOT NULL ) ;
 
-- Entity - ZeidonKeyList 
CREATE TABLE ZEIDONKEYLIST ( 
           STRINGVALUE        TEXT( 200 )                , 
           TIMESTAMPVALUE     TEXT( 25 )                 , 
           INTVALUE           INTEGER                    , 
           TASKID             INTEGER                     ) ;
 
-- Entity - ZeidonLocking 
CREATE TABLE ZEIDONLOCKING ( 
           LOD_NAME           TEXT( 35 )         NOT NULL, 
           KEYVALUE           TEXT( 200 )        NOT NULL, 
           USERNAME           TEXT( 32 )         NOT NULL, 
           ALLOWREAD          TEXT( 1 )                  , 
           z_TIMESTAMP        TEXT( 25 )         NOT NULL, 
           ID                 INTEGER                     ) ;
 
-- Entity - ZipCodeLookUpTable 
CREATE TABLE ZIPCODELOOKUPTABLE ( 
           STATECODE          TEXT( 2 )          NOT NULL, 
           STATEFIPSCODE      TEXT( 2 )                  , 
           PLACEFIPSCODE      TEXT( 5 )                  , 
           ZIPCODE            TEXT( 10 )                 , 
           LATITUDE           DOUBLE                     , 
           LONGITUDE          DOUBLE                     , 
           PLACENAME          TEXT( 254 )                , 
           CALCFLAG           TEXT( 1 )                  , 
           FK_ID_TERRITORY    INTEGER                     ) ;
 
CREATE TABLE MM_PERSON_SMPLYDBY_ORGANIZATIO ( 
           FK_ID_ORGANIZATION INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_VENDOR_HASBEENONPOFOR_Z_USE ( 
           FK_ID_Z_USER       INTEGER            NOT NULL, 
           FK_ID_VENDOR       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMZUSERHSRVWDGLANNUALBUDGETREV ( 
           FKIDGLANNUALBUDGET INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMZUSERCNTRPOFRUSRFINANCIALAPP ( 
           FKIDFINANCIALAPPRO INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMGLCOSTCENTERCNBPRVDBYFINANCI ( 
           FKIDFINANCIALAPPRO INTEGER            NOT NULL, 
           FK_ID_GLCOSTCENTER INTEGER            NOT NULL ) ;
 
CREATE TABLE MMAPBILLVOUCHERPYSPURCHASEORDE ( 
           FK_ID_PURCHASEORDE INTEGER            NOT NULL, 
           FK_ID_APBILLVOUCHE INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_Z_USER_ISTOCOMPLETE_USERTAS ( 
           FK_ID_USERTASK     INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMAPBILLVOUCHERLINEPYSPOLINEIT ( 
           FK_ID_PO_LINEITEM  INTEGER            NOT NULL, 
           FKIDAPBILLVOUCHERL INTEGER            NOT NULL ) ;
 
CREATE TABLE MMGLJOURNALENTRYDETAILSXPNSFRG ( 
           FKIDGLPROJECTCOMPO INTEGER            NOT NULL, 
           FKIDGLJOURNALENTRY INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_STUDENT_HS_ENROLLMENTHISTOR ( 
           FKIDENROLLMENTHIST INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MMPROGRAMHSCHRGSATRANSACTIONCO ( 
           FKIDSATRANSACTIONC INTEGER            NOT NULL, 
           FK_ID_PROGRAM      INTEGER            NOT NULL ) ;
 
CREATE TABLE MMGLJOURNALENTRYDETAILFRREPORT ( 
           FKIDREPORTSTRUCTUR INTEGER            NOT NULL, 
           FKIDGLJOURNALENTRY INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_Z_USER_SLWDTSREPORTSTRUCTUR ( 
           FKIDREPORTSTRUCTUR INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_GLFUND_ISSDN_REPORTSTRUCTUR ( 
           FKIDREPORTSTRUCTUR INTEGER            NOT NULL, 
           FK_ID_GLFUND       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_Z_USER_CANMNTN_CALENDARGROU ( 
           FK_ID_CALENDARGROU INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_Z_USER_HASDFLT_CALENDARGROU ( 
           FK_ID_CALENDARGROU INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_Z_USER_CNSTCLNDRFRDEPARTMEN ( 
           FK_ID_DEPARTMENT   INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CATEGORY_FOR_VENDOR ( 
           FK_ID_VENDOR       INTEGER            NOT NULL, 
           FK_ID_CATEGORY     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COLLEGETERM_FR_BILLINGPERIO ( 
           FK_ID_BILLINGPERIO INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
CREATE TABLE MMSTUDENTACCOUNTRULESETHSSTUDE ( 
           FKIDSTUDENTACCOUNT INTEGER            NOT NULL, 
           FKIDSTUDENTACCOU02 INTEGER            NOT NULL ) ;
 
CREATE TABLE MMSTUDENTACCOUNTRULESETSCHLDST ( 
           FKIDSTUDENTACCOUNT INTEGER            NOT NULL, 
           FKIDSTUDENTACCOU02 INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_HAS_GENEDREQUIREMENT ( 
           FKIDGENEDREQUIREME INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMSTUDENTFRCERTIFICATIONSTATEM ( 
           FKIDCERTIFICATIONS INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MMGLACCOUNTSSTHCHRGCNTFRGLSTOR ( 
           FK_ID_GLSTORECODE  INTEGER            NOT NULL, 
           FK_ID_GLACCOUNTS   INTEGER            NOT NULL ) ;
 
CREATE TABLE MMFINAIDSOURCECNGTMNYFINAIDDIS ( 
           FKIDFINAIDDISBURSE INTEGER            NOT NULL, 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL ) ;
 
CREATE TABLE MMFINAIDAWARDDISBURSEMENTFLFLD ( 
           FKIDFINAIDDISBURSE INTEGER            NOT NULL, 
           FKIDFINAIDAWARDDIS INTEGER            NOT NULL ) ;
 
CREATE TABLE MMSTUDENTHSHGHSCHLRQRMNTREQUIR ( 
           FK_ID_REQUIREDGROU INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_SDNMJRGPA_DEGREETRAC ( 
           FK_ID_DEGREETRACK  INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_ISCROSSLISTDFR_COURS ( 
           FK_ID_COURSE       INTEGER            NOT NULL, 
           FK_ID_COURSE02     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FACULTY_OPENSACDMCDTT_PERSO ( 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_FACULTY      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_PERSON_HS_PERSONVIEWSSTUDEN ( 
           FKIDPERSONVIEWSSTU INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FINAIDRULE_FOR_FINAIDRULESE ( 
           FK_ID_FINAIDRULESE INTEGER            NOT NULL, 
           FK_ID_FINAIDRULE   INTEGER            NOT NULL ) ;
 
CREATE TABLE MMFINAIDRULESETSTHCHLDFINAIDRU ( 
           FK_ID_FINAIDRULESE INTEGER            NOT NULL, 
           FK_ID_FINAIDRULE02 INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FAISIR_FOR_FAISIRIMPORTLOG ( 
           FKIDFAISIRIMPORTLO INTEGER            NOT NULL, 
           FK_ID_FAISIR       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMREQUIREDGROUPSFLFLDBYDLTENRO ( 
           FKIDENROLLMENTORFO INTEGER            NOT NULL, 
           FK_ID_REQUIREDGROU INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_STUDENT_SSTDNTSSSTNTFR_CLAS ( 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FINAIDCOA_HAS_FINAIDCOAITEM ( 
           FK_ID_FINAIDCOAITE INTEGER            NOT NULL, 
           FK_ID_FINAIDCOA    INTEGER            NOT NULL ) ;
 
CREATE TABLE MMFINAIDRULESETCNBTHLKPFRFINAI ( 
           FK_ID_FINAIDCOAITE INTEGER            NOT NULL, 
           FK_ID_FINAIDRULESE INTEGER            NOT NULL ) ;
 
CREATE TABLE MMFINAIDRULESETCNQLFYFINAIDCOA ( 
           FK_ID_FINAIDCOAITE INTEGER            NOT NULL, 
           FK_ID_FINAIDRULESE INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_Z_USER_CANSCHEDULE_ROOM ( 
           FK_ID_ROOM         INTEGER            NOT NULL, 
           FK_ID_Z_USER       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CATEGORY_CNBTDT_FINAIDSOURC ( 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL, 
           FK_ID_CATEGORY     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CONTACTLIST_HAS_FINAIDSOURC ( 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
CREATE TABLE MMFINAIDRULESETCNLKPFRFINAIDSO ( 
           FK_ID_FINAIDSOURCE INTEGER            NOT NULL, 
           FK_ID_FINAIDRULESE INTEGER            NOT NULL ) ;
 
CREATE TABLE MMENROLLMENTORFOREIGNEQUIVALEN ( 
           FKIDFINAIDAWARDPER INTEGER            NOT NULL, 
           FKIDENROLLMENTORFO INTEGER            NOT NULL ) ;
 
CREATE TABLE MMZUSERHSTHRTYTCRTWEBUSERMESSA ( 
           CRIDWEBUSERMESSAGE INTEGER            NOT NULL, 
           CRID_Z_USER        INTEGER            NOT NULL ) ;
 
CREATE TABLE MMZUSERHSFLTRFRWEBUSERMESSAGEG ( 
           FLIDWEBUSERMESSAGE INTEGER            NOT NULL, 
           FLID_Z_USER        INTEGER            NOT NULL ) ;
 
CREATE TABLE MMCOLLEGETERMCNBLNKDTFINAIDAWA ( 
           FKIDFINAIDAWARDPER INTEGER            NOT NULL, 
           FK_ID_COLLEGETERM  INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_DEGREEMINOR_FOR_STUDENT ( 
           FK_ID_STUDENT      INTEGER            NOT NULL, 
           FK_ID_DEGREEMINOR  INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CONTACTLIST_CONTAINS_CLASS ( 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_ISONA_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_DONOR_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_DONOR        INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_ISPREREQUISTFR_COURS ( 
           FK_ID_COURSE       INTEGER            NOT NULL, 
           FK_ID_COURSE02     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_ISCOREQUISITFR_COURS ( 
           FK_ID_COURSE       INTEGER            NOT NULL, 
           FK_ID_COURSE02     INTEGER            NOT NULL ) ;
 
CREATE TABLE MMCOURSESPRTFPRQSTGRPCOURSEPRE ( 
           FKIDCOURSEPREREQUI INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_MAILING_FOR_MAILINGGROUP ( 
           FK_ID_MAILINGGROUP INTEGER            NOT NULL, 
           FK_ID_MAILING      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CLASS_FOR_CLASSTEMPLATE ( 
           FK_ID_CLASSTEMPLAT INTEGER            NOT NULL, 
           FK_ID_CLASS        INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_FOR_CLASSTEMPLATE ( 
           FK_ID_CLASSTEMPLAT INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CATEGORY_CANHAVE_SCHOLARSHI ( 
           FK_ID_SCHOLARSHIP  INTEGER            NOT NULL, 
           FK_ID_CATEGORY     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_REPORT_FOR_REPORTGROUP ( 
           FK_ID_REPORTGROUP  INTEGER            NOT NULL, 
           FK_ID_REPORT       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_MAILING_CANGENERATE_DOCUMEN ( 
           FK_ID_DOCUMENT     INTEGER            NOT NULL, 
           FK_ID_MAILING      INTEGER            NOT NULL ) ;
 
CREATE TABLE MMPERSONFSCNDRYDPLCTFRBATCHITE ( 
           FK_ID_BATCHITEM    INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CONTACTLIST_CONTAINS_COHORT ( 
           FK_ID_COHORT       INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
CREATE TABLE MMADMINISTRATIVEDIVISIONSCSBLF ( 
           FK_ID_USERGROUP    INTEGER            NOT NULL, 
           FKIDADMINISTRATIVE INTEGER            NOT NULL ) ;
 
CREATE TABLE MMREMOTEPERSONFRREMOTEMAJORINT ( 
           FKIDREMOTEMAJORINT INTEGER            NOT NULL, 
           FK_ID_REMOTEPERSON INTEGER            NOT NULL ) ;
 
CREATE TABLE MMREMOTEPERSONFRREMOTEEXINTERE ( 
           FKIDREMOTEEXINTERE INTEGER            NOT NULL, 
           FK_ID_REMOTEPERSON INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_SNCLDDNDLT_DEPARTMEN ( 
           FK_ID_DEPARTMENT   INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_STUDENT_ATTNDD_CHAPELSESSIO ( 
           FK_ID_CHAPELSESSIO INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MMSTUDENTWSNGLRDNGCHAPELSESSIO ( 
           FK_ID_CHAPELSESSIO INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_DEPARTMENT_INCLUDES_FACULTY ( 
           FK_ID_FACULTY      INTEGER            NOT NULL, 
           FK_ID_DEPARTMENT   INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_SCHOOL_SCRSSPLCTNFR_PROSPEC ( 
           FK_ID_PROSPECT     INTEGER            NOT NULL, 
           FK_ID_SCHOOL       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMSATRANSACTIONCODESTHCHRGFRRO ( 
           FK_ID_ROOM         INTEGER            NOT NULL, 
           FKIDSATRANSACTIONC INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_COURSE_ISREQRDBY_DEGREETRAC ( 
           FK_ID_DEGREETRACK  INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CONTACTLIST_CONTAINS_ALUMNI ( 
           FK_ID_ALUMNI       INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_STUDENT_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CATEGORY_CANBETIEDTO_ALUMNI ( 
           FK_ID_ALUMNI       INTEGER            NOT NULL, 
           FK_ID_CATEGORY     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_PERSON_FOR_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_DONATION_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_DONATION     INTEGER            NOT NULL ) ;
 
CREATE TABLE MMORGANIZATIONHSGNFCNTLNKTDONO ( 
           SOFTROLEID_DONOR   INTEGER            NOT NULL, 
           SOFTROLEIDORGANIZA INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FUND_ISCOMMONLYGIVNFRM_DONO ( 
           FK_ID_DONOR        INTEGER            NOT NULL, 
           FK_ID_FUND         INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FUND_ISTIEDTO_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_FUND         INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CATEGORY_ISFOR_FUND ( 
           FK_ID_FUND         INTEGER            NOT NULL, 
           FK_ID_CATEGORY     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CONTACTLIST_CONTAINS_CHURCH ( 
           FK_ID_CHURCH       INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CONTACTLIST_CONTAINS_SCHOOL ( 
           FK_ID_SCHOOL       INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_PERSON_ISEMPLYFR_CONTACTLIS ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CONTACTLISTCNTNSORGANIZATIO ( 
           FK_ID_ORGANIZATION INTEGER            NOT NULL, 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL ) ;
 
CREATE TABLE MMCAMPUSLOCATIONSPTNTLCRSLCTNF ( 
           FK_ID_PROSPECT     INTEGER            NOT NULL, 
           FK_IDCAMPUSLOCATIO INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_PROGRAM_FOR_PROSPECT ( 
           FK_ID_PROSPECT     INTEGER            NOT NULL, 
           ISFNTRSTTID_PROGRA INTEGER            NOT NULL ) ;
 
CREATE TABLE MMCOURSECNHVFSSATRANSACTIONCOD ( 
           FKIDSATRANSACTIONC INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MMCOURSETTNBCHRGDBYSATRANSACTI ( 
           FKIDSATRANSACTIONC INTEGER            NOT NULL, 
           FK_ID_COURSE       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_CHURCH_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_CHURCH       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_DONOR_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_DONOR        INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FACULTY_CANBETDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_FACULTY      INTEGER            NOT NULL ) ;
 
CREATE TABLE MMORGANIZATIONCNBTDBCKTCATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_ORGANIZATION INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_PERSON_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_PERSON       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_PROSPECT_CANBTDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_SCHOOL_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_SCHOOL       INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_STAFF_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_STAFF        INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_STUDENT_CANBETDBCKT_CATEGOR ( 
           FK_ID_CATEGORY     INTEGER            NOT NULL, 
           FK_ID_STUDENT      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_EVENT_FOR_STOREDQUERY ( 
           FK_ID_STOREDQUERY  INTEGER            NOT NULL, 
           FK_ID_EVENT        INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_EVENT_FOR_DOCUMENT ( 
           FK_ID_DOCUMENT     INTEGER            NOT NULL, 
           FK_ID_EVENT        INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FACULTY_ISONA_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_FACULTY      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_USERGROUP_CONTANSMMBR_Z_USE ( 
           FK_ID_Z_USER       INTEGER            NOT NULL, 
           FK_ID_USERGROUP    INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_FACULTY_ISINSTRUCTORFR_CLAS ( 
           FK_ID_CLASS        INTEGER            NOT NULL, 
           FK_ID_FACULTY      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_GIFT_ISSOFTCREDITFOR_DONOR ( 
           FK_ID_DONOR        INTEGER            NOT NULL, 
           FK_ID_GIFT         INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_DONOR_GETSSOFTCREDTFRM_DONO ( 
           FK_ID_DONOR        INTEGER            NOT NULL, 
           FK_ID_DONOR02      INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_POTENTIALGIFT_FULLFLDBY_GIF ( 
           FK_ID_GIFT         INTEGER            NOT NULL, 
           FK_ID_POTENTIALGIF INTEGER            NOT NULL ) ;
 
CREATE TABLE MMPROSPECTCNBNFLNCDBYINFLUENCE ( 
           FK_ID_INFLUENCER   INTEGER            NOT NULL, 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_PROSPECT_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST  INTEGER            NOT NULL, 
           FK_ID_PROSPECT     INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_ROOM_CANBESCHEDULEDBY_PERSO ( 
           FK_ID_PERSON       INTEGER            NOT NULL, 
           FK_ID_ROOM         INTEGER            NOT NULL ) ;
 
CREATE TABLE MM_DEPARTMENT_CNBN_GLCOSTCENTE ( 
           FK_ID_GLCOSTCENTER INTEGER            NOT NULL, 
           FK_ID_DEPARTMENT   INTEGER            NOT NULL ) ;
 
CREATE TABLE MMGLCHARTENTRYSFRGLREPORTSECTI ( 
           FKIDGLREPORTSECTIO INTEGER            NOT NULL, 
           FK_ID_GLCHARTENTRY INTEGER            NOT NULL ) ;
 
-- Main key for Entity - AcademicDegree 
CREATE UNIQUE INDEX UACADEMICDEGREEDEGREEV92478107 
       ON ACADEMICDEGREE ( 
           DEGREEVALUE ) ;
 
 
-- Main key for Entity - AcademicDivision 
CREATE UNIQUE INDEX UACADEMICDIVISION_ID_924781110 
       ON ACADEMICDIVISION ( 
           ID ) ;
 
 
-- Index for Relationship - 'FACULTY(is chair of [0:m] ) ACADEMICDIVISION' 
CREATE INDEX ACADEMICDIVISIONFKIDFA92483685 
       ON ACADEMICDIVISION ( 
           FK_ID_FACULTY ) ;
 
 
-- Main key for Entity - AcademicStanding 
CREATE UNIQUE INDEX UACADEMICSTANDING_ID_924781150 
       ON ACADEMICSTANDING ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) ACADEMICSTANDING' 
CREATE INDEX ACADEMICSTANDINGFKIDST92483652 
       ON ACADEMICSTANDING ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(for [0:m] ) ACADEMICSTANDING' 
CREATE INDEX ACADEMICSTANDINGFKIDCO92483655 
       ON ACADEMICSTANDING ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - ActionTask 
CREATE UNIQUE INDEX UACTIONTASK_ID_924781380 
       ON ACTIONTASK ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) ACTIONTASK' 
CREATE INDEX ACTIONTASK_FK_ID_ZUSER92483224 
       ON ACTIONTASK ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'REGISTRATIONAPPROVAL(for (max. card. 1) [0:m] ) ACTIONTASK' 
CREATE INDEX ACTIONTASKFKIDREGISTRA92483225 
       ON ACTIONTASK ( 
           FKIDREGISTRATIONAP ) ;
 
 
-- Index for Relationship - 'PO_APPROVAL(for (max. card. 1) [0:m] ) ACTIONTASK' 
CREATE INDEX ACTIONTASKFKIDPOAPPROV92483226 
       ON ACTIONTASK ( 
           FK_ID_PO_APPROVAL ) ;
 
 
-- Main key for Entity - Activity 
CREATE UNIQUE INDEX UACTIVITY_ID_924781480 
       ON ACTIVITY ( 
           ID ) ;
-- Main key for Entity - Activity 
CREATE INDEX ACTIVITY_TYPE_924781490 
       ON ACTIVITY ( 
           TYPE ) ;
-- Main key for Entity - Activity 
CREATE INDEX ACTIVITY_BEGINDATE_924781520 
       ON ACTIVITY ( 
           BEGINDATE ) ;
-- Main key for Entity - Activity 
CREATE INDEX ACTIVITY_ALARMDATETIME92478159 
       ON ACTIVITY ( 
           ALARMDATETIME ) ;
 
 
-- Index for Relationship - 'z_USER(performs many [0:m] ) ACTIVITY' 
CREATE INDEX ACTIVITY_FK_ID_Z_USER_92484284 
       ON ACTIVITY ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'EVENT(can create  [0:m] ) ACTIVITY' 
CREATE INDEX ACTIVITY_FK_ID_EVENT_924842860 
       ON ACTIVITY ( 
           FK_ID_EVENT ) ;
 
 
-- Main key for Entity - AdditionalEarnings 
CREATE UNIQUE INDEX UADDITIONALEARNINGS_ID92478171 
       ON ADDITIONALEARNINGS ( 
           ID ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has [0:m] ) ADDITIONALEARNINGS' 
CREATE INDEX ADDITIONALEARNINGSFKID92483360 
       ON ADDITIONALEARNINGS ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(has [0:m] ) ADDITIONALEARNINGS' 
CREATE INDEX ADDITIONALEARNINGSFKID92483361 
       ON ADDITIONALEARNINGS ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Main key for Entity - Address 
CREATE UNIQUE INDEX UADDRESS_ID_924781760 
       ON ADDRESS ( 
           ID ) ;
-- Main key for Entity - Address 
CREATE INDEX ADDRESS_PHONE1_924781880 
       ON ADDRESS ( 
           PHONE1 ) ;
-- Main key for Entity - Address 
CREATE INDEX ADDRESS_CITY_924781810 
       ON ADDRESS ( 
           CITY ) ;
-- Main key for Entity - Address 
CREATE INDEX ADDRESS_STATE_924781820 
       ON ADDRESS ( 
           STATEPROVINCE ) ;
-- Main key for Entity - Address 
CREATE INDEX ADDRESS_ZIPCODE_924781860 
       ON ADDRESS ( 
           POSTALCODE ) ;
 
 
-- Index for Relationship - 'STUDENTHEALTH(has [0:m] ) ADDRESS' 
CREATE INDEX ADDRESSFKIDSTUDENTHEAL92483518 
       ON ADDRESS ( 
           FK_ID_STUDENTHEALT ) ;
 
 
-- Index for Relationship - 'HOST(has [0:m] ) ADDRESS' 
CREATE INDEX ADDRESS_FK_HOSTID_HOST92484281 
       ON ADDRESS ( 
           FK_HOSTID_HOST ) ;
 
 
-- Index for Relationship - 'HOST(has shipping [0:m] ) ADDRESS' 
CREATE INDEX ADDRESS_SHIPHOSTIDHOST92484283 
       ON ADDRESS ( 
           SHIPHOSTID_HOST ) ;
 
 
-- Index for Relationship - 'PERSON(may be at [0:m] ) ADDRESS' 
CREATE INDEX ADDRESS_FK_ID_PERSON_924843040 
       ON ADDRESS ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(has [0:m] ) ADDRESS' 
CREATE INDEX ADDRESSFKIDORGANIZATIO92484305 
       ON ADDRESS ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'SCHOOL(has [0:m] ) ADDRESS' 
CREATE INDEX ADDRESS_FK_ID_SCHOOL_924843230 
       ON ADDRESS ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'CHURCH(has [0:m] ) ADDRESS' 
CREATE INDEX ADDRESS_FK_ID_CHURCH_924843730 
       ON ADDRESS ( 
           FK_ID_CHURCH ) ;
 
 
-- Main key for Entity - AdjunctBudgetEstimate 
CREATE UNIQUE INDEX UADJUNCTBUDGETESTIMATE92478208 
       ON ADJUNCTBUDGETESTIMATE ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLBUDGET(has [0:m] ) ADJUNCTBUDGETESTIMATE' 
CREATE INDEX ADJUNCTBUDGETESTIMATEF92483311 
       ON ADJUNCTBUDGETESTIMATE ( 
           FK_ID_GLBUDGET ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(created [0:m] ) ADJUNCTBUDGETESTIMATE' 
CREATE INDEX ADJUNCTBUDGETESTIMATEF92483312 
       ON ADJUNCTBUDGETESTIMATE ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) ADJUNCTBUDGETESTIMATE' 
CREATE INDEX ADJUNCTBUDGETESTIMATEF92483313 
       ON ADJUNCTBUDGETESTIMATE ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(has [0:m] ) ADJUNCTBUDGETESTIMATE' 
CREATE INDEX ADJUNCTBUDGETESTIMATEF92483314 
       ON ADJUNCTBUDGETESTIMATE ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Main key for Entity - AdministrativeDivision 
CREATE UNIQUE INDEX UADMINISTRATIVEDIVISIO92478213 
       ON ADMINISTRATIVEDIVISION ( 
           ID ) ;
 
 
-- Index for Relationship - 'DOCUMENT(is document for trans request [0:m] ) ADMINISTRATIVEDIVISION' 
CREATE INDEX ADMINISTRATIVEDIVISION92483727 
       ON ADMINISTRATIVEDIVISION ( 
           FK_ID_DOCUMENT ) ;
 
 
-- Main key for Entity - AdmissionRequirement 
CREATE UNIQUE INDEX UADMISSIONREQUIREMENTI92478223 
       ON ADMISSIONREQUIREMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) ADMISSIONREQUIREMENT' 
CREATE INDEX ADMISSIONREQUIREMENTFK92483996 
       ON ADMISSIONREQUIREMENT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - AdmissionRequirementMet 
CREATE UNIQUE INDEX UADMISSIONREQUIREMENTM92478231 
       ON ADMISSIONREQUIREMENTMET ( 
           ID ) ;
 
 
-- Index for Relationship - 'PROSPECT(meets [0:m] ) ADMISSIONREQUIREMENTMET' 
CREATE INDEX ADMISSIONREQUIREMENTME92483990 
       ON ADMISSIONREQUIREMENTMET ( 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'ADMISSIONREQUIREMENT(has [0:m] ) ADMISSIONREQUIREMENTMET' 
CREATE INDEX ADMISSIONREQUIREMENTME92483991 
       ON ADMISSIONREQUIREMENTMET ( 
           FKIDADMISSIONREQUI ) ;
 
 
-- Main key for Entity - AdmissionsMajor 
CREATE UNIQUE INDEX UADMISSIONSMAJOR_ID_924782360 
       ON ADMISSIONSMAJOR ( 
           ID ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(has [0:m] ) ADMISSIONSMAJOR' 
CREATE INDEX ADMISSIONSMAJORFKIDDEP92483705 
       ON ADMISSIONSMAJOR ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'DEGREEMAJOR(is generated by [0:m] ) ADMISSIONSMAJOR' 
CREATE INDEX ADMISSIONSMAJORFKIDDEG92483706 
       ON ADMISSIONSMAJOR ( 
           FK_ID_DEGREEMAJOR ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) ADMISSIONSMAJOR' 
CREATE INDEX ADMISSIONSMAJORFKIDADM92483707 
       ON ADMISSIONSMAJOR ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - AdmissionsStatistics 
CREATE UNIQUE INDEX UADMISSIONSSTATISTICSI92478242 
       ON ADMISSIONSSTATISTICS ( 
           ID ) ;
 
 
-- Main key for Entity - AdmissionTrack 
CREATE UNIQUE INDEX UADMISSIONTRACK_ID_924782570 
       ON ADMISSIONTRACK ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) ADMISSIONTRACK' 
CREATE INDEX ADMISSIONTRACKFKIDADMI92483997 
       ON ADMISSIONTRACK ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - AdmissionTrackRequirement 
CREATE UNIQUE INDEX UADMISSIONTRACKREQUIRE92483966 
       ON ADMISSIONTRACKREQUIREMENT ( 
           FK_IDADMISSIONTRAC, 
           FKIDADMISSIONREQUI ) ;
 
 
-- Index for Relationship - 'ADMISSIONTRACK(for [0:m] ) ADMISSIONTRACKREQUIREMENT' 
CREATE INDEX ADMISSIONTRACKREQUIREM92483966 
       ON ADMISSIONTRACKREQUIREMENT ( 
           FK_IDADMISSIONTRAC ) ;
 
 
-- Index for Relationship - 'ADMISSIONREQUIREMENT(for [0:m] ) ADMISSIONTRACKREQUIREMENT' 
CREATE INDEX ADMISSIONTRACKREQUIREM92483968 
       ON ADMISSIONTRACKREQUIREMENT ( 
           FKIDADMISSIONREQUI ) ;
 
 
-- Main key for Entity - Alumni 
CREATE UNIQUE INDEX UALUMNI_ID_924782670 
       ON ALUMNI ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(isa [0:1] ) ALUMNI' 
CREATE INDEX ALUMNI_FK_ID_PERSON_924840950 
       ON ALUMNI ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - APBillPayment 
CREATE UNIQUE INDEX UAPBILLPAYMENT_ID_924783040 
       ON APBILLPAYMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'APBILLVOUCHER(is paid by [0:m] ) APBILLPAYMENT' 
CREATE INDEX APBILLPAYMENTFKIDAPBIL92483428 
       ON APBILLPAYMENT ( 
           FK_ID_APBILLVOUCHE ) ;
 
 
-- Index for Relationship - 'APBILLVOUCHER(is a credit used to pay [0:m] ) APBILLPAYMENT' 
CREATE INDEX APBILLPAYMENTCREDITFRO92483429 
       ON APBILLPAYMENT ( 
           CREDITFROMIDAPBILL ) ;
 
 
-- Index for Relationship - 'FINANCIALACCOUNTTRANSACTION(can has [0:m] ) APBILLPAYMENT' 
CREATE INDEX APBILLPAYMENTFKIDFINAN92483430 
       ON APBILLPAYMENT ( 
           FKIDFINANCIALACCOU ) ;
 
 
-- Main key for Entity - APBillVoucher 
CREATE UNIQUE INDEX UAPBILLVOUCHER_ID_924783090 
       ON APBILLVOUCHER ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLACCOUNTTRANSAPPLIED(has refund part [0:m] ) APBILLVOUCHER' 
CREATE INDEX APBILLVOUCHERFKIDGLACC92483424 
       ON APBILLVOUCHER ( 
           FKIDGLACCOUNTTRANS ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(is for [0:m] ) APBILLVOUCHER' 
CREATE INDEX APBILLVOUCHERFKIDGLJOU92483426 
       ON APBILLVOUCHER ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(is void for [0:m] ) APBILLVOUCHER' 
CREATE INDEX APBILLVOUCHERVOIDIDGLJ92483427 
       ON APBILLVOUCHER ( 
           VOIDIDGLJOURNALENT ) ;
 
 
-- Index for Relationship - 'VENDOR(sends [0:m] ) APBILLVOUCHER' 
CREATE INDEX APBILLVOUCHERFKIDVENDO92483438 
       ON APBILLVOUCHER ( 
           FK_ID_VENDOR ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(submits [0:m] ) APBILLVOUCHER' 
CREATE INDEX APBILLVOUCHERFKIDEMPLO92483439 
       ON APBILLVOUCHER ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Index for Relationship - 'APTERMS(are for [0:m] ) APBILLVOUCHER' 
CREATE INDEX APBILLVOUCHERFKIDAPTER92483440 
       ON APBILLVOUCHER ( 
           FK_ID_APTERMS ) ;
 
 
-- Main key for Entity - APBillVoucherLine 
CREATE UNIQUE INDEX UAPBILLVOUCHERLINE_ID_92478333 
       ON APBILLVOUCHERLINE ( 
           ID ) ;
 
 
-- Index for Relationship - 'APBILLVOUCHER(for [0:m] ) APBILLVOUCHERLINE' 
CREATE INDEX APBILLVOUCHERLINEFKIDA92483444 
       ON APBILLVOUCHERLINE ( 
           FK_ID_APBILLVOUCHE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(for [0:m] ) APBILLVOUCHERLINE' 
CREATE INDEX APBILLVOUCHERLINEFKIDG92483445 
       ON APBILLVOUCHERLINE ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(buys stuff via [0:m] ) APBILLVOUCHERLINE' 
CREATE INDEX APBILLVOUCHERLINEFKIDD92483446 
       ON APBILLVOUCHERLINE ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Main key for Entity - APTerms 
CREATE UNIQUE INDEX UAPTERMS_ID_924783390 
       ON APTERMS ( 
           ID ) ;
 
 
-- Main key for Entity - AssessmentGroup 
CREATE UNIQUE INDEX UASSESSMENTGROUP_ID_924783460 
       ON ASSESSMENTGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'CLASSGRADEBOOK(has [0:m] ) ASSESSMENTGROUP' 
CREATE INDEX ASSESSMENTGROUPFKIDCLA92483383 
       ON ASSESSMENTGROUP ( 
           FK_IDCLASSGRADEBOO ) ;
 
 
-- Main key for Entity - Assignment 
CREATE UNIQUE INDEX UASSIGNMENT_ID_924783580 
       ON ASSIGNMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ASSESSMENTGROUP(has [0:m] ) ASSIGNMENT' 
CREATE INDEX ASSIGNMENTFKIDASSESSME92483381 
       ON ASSIGNMENT ( 
           FKIDASSESSMENTGROU ) ;
 
 
-- Index for Relationship - 'CLASSGRADEBOOK(has [0:m] ) ASSIGNMENT' 
CREATE INDEX ASSIGNMENTFKIDCLASSGRA92483382 
       ON ASSIGNMENT ( 
           FK_IDCLASSGRADEBOO ) ;
 
 
-- Main key for Entity - AttendanceSession 
CREATE UNIQUE INDEX UATTENDANCESESSION_ID_92483519 
       ON ATTENDANCESESSION ( 
           FK_ID_CLASS, 
           FK_ID_STUDENT, 
           z_DATE ) ;
 
 
-- Index for Relationship - 'CLASS(for [0:m] ) ATTENDANCESESSION' 
CREATE INDEX ATTENDANCESESSIONFKIDC92483519 
       ON ATTENDANCESESSION ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'STUDENT(for [0:m] ) ATTENDANCESESSION' 
CREATE INDEX ATTENDANCESESSIONFKIDS92483520 
       ON ATTENDANCESESSION ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - BatchEditList 
CREATE UNIQUE INDEX UBATCHEDITLIST_ID_924783790 
       ON BATCHEDITLIST ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(ownes [0:m] ) BATCHEDITLIST' 
CREATE INDEX BATCHEDITLISTFKIDZUSER92483985 
       ON BATCHEDITLIST ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - BatchItem 
CREATE UNIQUE INDEX UBATCHITEM_ID_924783880 
       ON BATCHITEM ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(is online for [0:1] ) BATCHITEM' 
CREATE INDEX BATCHITEM_FK_ID_Z_USER92483248 
       ON BATCHITEM ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'PROSPECT(has online app [0:m] ) BATCHITEM' 
CREATE INDEX BATCHITEM_FKIDPROSPECT92483249 
       ON BATCHITEM ( 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'DATAENTRYBATCH(has [0:m] ) BATCHITEM' 
CREATE INDEX BATCHITEMFKIDDATAENTRY92483976 
       ON BATCHITEM ( 
           FK_IDDATAENTRYBATC ) ;
 
 
-- Index for Relationship - 'PERSON(is main duplicate for [0:m] ) BATCHITEM' 
CREATE INDEX BATCHITEM_FK_ID_PERSON92483978 
       ON BATCHITEM ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - BillingPeriod 
CREATE UNIQUE INDEX UBILLINGPERIOD_ID_924783970 
       ON BILLINGPERIOD ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTPROFILE(contains [0:m] ) BILLINGPERIOD' 
CREATE INDEX BILLINGPERIODFKIDSTUDE92483541 
       ON BILLINGPERIOD ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'PAYMENTPLAN(can be tied to [0:m] ) BILLINGPERIOD' 
CREATE INDEX BILLINGPERIODFKIDPAYME92484448 
       ON BILLINGPERIOD ( 
           FK_ID_PAYMENTPLAN ) ;
 
 
-- Main key for Entity - BuckleyDataEntry 
CREATE UNIQUE INDEX UBUCKLEYDATAENTRYIDENT92483719 
       ON BUCKLEYDATAENTRY ( 
           FK_ID_STUDENT, 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) BUCKLEYDATAENTRY' 
CREATE INDEX BUCKLEYDATAENTRYFKIDST92483719 
       ON BUCKLEYDATAENTRY ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) BUCKLEYDATAENTRY' 
CREATE INDEX BUCKLEYDATAENTRYFKIDPE92483720 
       ON BUCKLEYDATAENTRY ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - Building 
CREATE UNIQUE INDEX UBUILDING_ID_924784300 
       ON BUILDING ( 
           ID ) ;
 
 
-- Main key for Entity - CalendarGroup 
CREATE UNIQUE INDEX UCALENDARGROUP_ID_924784370 
       ON CALENDARGROUP ( 
           ID ) ;
 
 
-- Main key for Entity - Callback 
CREATE UNIQUE INDEX UCALLBACK_ID_924784410 
       ON CALLBACK ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) CALLBACK' 
CREATE INDEX CALLBACK_FK_ID_PERSON_92483431 
       ON CALLBACK ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) CALLBACK' 
CREATE INDEX CALLBACK_FK_ID_Z_USER_92483433 
       ON CALLBACK ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'CHURCH(has [0:m] ) CALLBACK' 
CREATE INDEX CALLBACK_FK_ID_CHURCH_92483435 
       ON CALLBACK ( 
           FK_ID_CHURCH ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(has [0:m] ) CALLBACK' 
CREATE INDEX CALLBACKFKIDORGANIZATI92483436 
       ON CALLBACK ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Main key for Entity - CampusLocation 
CREATE UNIQUE INDEX UCAMPUSLOCATION_ID_924784450 
       ON CAMPUSLOCATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) CAMPUSLOCATION' 
CREATE INDEX CAMPUSLOCATIONFKIDADMI92484196 
       ON CAMPUSLOCATION ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - CampusOrganization 
CREATE UNIQUE INDEX UCAMPUSORGANIZATION_ID92478450 
       ON CAMPUSORGANIZATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(for [0:m] ) CAMPUSORGANIZATION' 
CREATE INDEX CAMPUSORGANIZATIONFKID92484362 
       ON CAMPUSORGANIZATION ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Main key for Entity - CapitalImprovementRequest 
CREATE UNIQUE INDEX UCAPITALIMPROVEMENTREQ92478455 
       ON CAPITALIMPROVEMENTREQUEST ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(has made [0:m] ) CAPITALIMPROVEMENTREQUEST' 
CREATE INDEX CAPITALIMPROVEMENTREQU92483265 
       ON CAPITALIMPROVEMENTREQUEST ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) CAPITALIMPROVEMENTREQUEST' 
CREATE INDEX CAPITALIMPROVEMENTREQU92483266 
       ON CAPITALIMPROVEMENTREQUEST ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'GLPROJECT(for [0:1] ) CAPITALIMPROVEMENTREQUEST' 
CREATE INDEX CAPITALIMPROVEMENTREQU92483272 
       ON CAPITALIMPROVEMENTREQUEST ( 
           FK_ID_GLPROJECT ) ;
 
 
-- Main key for Entity - Category 
CREATE UNIQUE INDEX UCATEGORY_ID_924784680 
       ON CATEGORY ( 
           ID ) ;
-- Main key for Entity - Category 
CREATE INDEX CATEGORY_NAME_924784690 
       ON CATEGORY ( 
           NAME ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) CATEGORY' 
CREATE INDEX CATEGORYFKIDADMINISTRA92484109 
       ON CATEGORY ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - CertificationStatement 
CREATE UNIQUE INDEX UCERTIFICATIONSTATEMEN92478478 
       ON CERTIFICATIONSTATEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) CERTIFICATIONSTATEMENT' 
CREATE INDEX CERTIFICATIONSTATEMENT92483592 
       ON CERTIFICATIONSTATEMENT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - ChangeRequest 
CREATE UNIQUE INDEX UCHANGEREQUEST_ID_924784870 
       ON CHANGEREQUEST ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) CHANGEREQUEST' 
CREATE INDEX CHANGEREQUESTFKIDZUSER92483390 
       ON CHANGEREQUEST ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - ChapelSession 
CREATE UNIQUE INDEX UCHAPELSESSION_ID_924784990 
       ON CHAPELSESSION ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) CHAPELSESSION' 
CREATE INDEX CHAPELSESSIONFKIDCOLLE92483710 
       ON CHAPELSESSION ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - Church 
CREATE UNIQUE INDEX UCHURCH_ID_924785060 
       ON CHURCH ( 
           ID ) ;
-- Main key for Entity - Church 
CREATE INDEX CHURCH_NAME_924785070 
       ON CHURCH ( 
           NAME ) ;
-- Main key for Entity - Church 
CREATE INDEX CHURCH_PHONE1_924785100 
       ON CHURCH ( 
           PHONE ) ;
-- Main key for Entity - Church 
CREATE INDEX CHURCH_DISTRICTCODE_924785120 
       ON CHURCH ( 
           DISTRICTCODE ) ;
 
 
-- Index for Relationship - 'PERSON(is the primary contact for [0:1] ) CHURCH' 
CREATE INDEX CHURCH_FK_ID_PERSON_924842800 
       ON CHURCH ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ADDRESS(is primary for [0:1] ) CHURCH' 
CREATE INDEX CHURCH_FK_ID_ADDRESS_924843270 
       ON CHURCH ( 
           FK_ID_ADDRESS ) ;
 
 
-- Main key for Entity - ChurchPersonRole 
CREATE UNIQUE INDEX UCHURCHPERSONROLE_ID_924785320 
       ON CHURCHPERSONROLE ( 
           ID ) ;
-- Main key for Entity - ChurchPersonRole 
CREATE INDEX CHURCHPERSONROLE_TYPE_92478533 
       ON CHURCHPERSONROLE ( 
           TYPE ) ;
 
 
-- Index for Relationship - 'CHURCH(has person with [0:m] ) CHURCHPERSONROLE' 
CREATE INDEX CHURCHPERSONROLEFKIDCH92484389 
       ON CHURCHPERSONROLE ( 
           FK_ID_CHURCH ) ;
 
 
-- Index for Relationship - 'PERSON(is the staff or pastor role of [0:m] ) CHURCHPERSONROLE' 
CREATE INDEX CHURCHPERSONROLEFKIDPE92484390 
       ON CHURCHPERSONROLE ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - CL_ItemEmployee 
CREATE UNIQUE INDEX UCL_ITEMEMPLOYEE_ID_924785370 
       ON CL_ITEMEMPLOYEE ( 
           ID ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has [0:m] ) CL_ITEMEMPLOYEE' 
CREATE INDEX CLITEMEMPLOYEEFKIDEMPL92483474 
       ON CL_ITEMEMPLOYEE ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(has [0:m] ) CL_ITEMEMPLOYEE' 
CREATE INDEX CLITEMEMPLOYEEFKIDCONT92483903 
       ON CL_ITEMEMPLOYEE ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Main key for Entity - Class 
CREATE UNIQUE INDEX UCLASS_ID_924785400 
       ON CLASS ( 
           ID ) ;
 
 
-- Index for Relationship - 'GRADESCALE(is defined for [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_ID_GRADESCALE92483358 
       ON CLASS ( 
           FK_ID_GRADESCALE ) ;
 
 
-- Index for Relationship - 'CLASSROOMSTANDARDSCHEDULE(is schedule for [0:m] ) CLASS' 
CREATE INDEX CLASSFKIDCLASSROOMSTAN92483822 
       ON CLASS ( 
           FKIDCLASSROOMSTAND ) ;
 
 
-- Index for Relationship - 'COURSETOPIC(is taught in [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_IDCOURSETOPIC92483890 
       ON CLASS ( 
           FK_ID_COURSETOPIC ) ;
 
 
-- Index for Relationship - 'COHORT(has [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_ID_COHORT_924839890 
       ON CLASS ( 
           FK_ID_COHORT ) ;
 
 
-- Index for Relationship - 'COURSE(is taught in [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_ID_COURSE_924840730 
       ON CLASS ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_IDCOLLEGETERM92484075 
       ON CLASS ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'ROOM(is used for [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_ID_ROOM_924840830 
       ON CLASS ( 
           FK_ID_ROOM ) ;
 
 
-- Index for Relationship - 'ROOM(is used for final exam for [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_ID_ROOM02_924840840 
       ON CLASS ( 
           FK_ID_ROOM02 ) ;
 
 
-- Index for Relationship - 'FACULTY(is main instructor for [0:m] ) CLASS' 
CREATE INDEX CLASS_FK_ID_FACULTY_924843180 
       ON CLASS ( 
           FK_ID_FACULTY ) ;
 
 
-- Main key for Entity - ClassGradeBook 
CREATE UNIQUE INDEX UCLASSGRADEBOOK_ID_924785920 
       ON CLASSGRADEBOOK ( 
           ID ) ;
 
 
-- Index for Relationship - 'CLASS(for [0:1] ) CLASSGRADEBOOK' 
CREATE INDEX CLASSGRADEBOOKFKIDCLAS92483384 
       ON CLASSGRADEBOOK ( 
           FK_ID_CLASS ) ;
 
 
-- Main key for Entity - ClassGradeComponent 
CREATE UNIQUE INDEX UCLASSGRADECOMPONENTID92478599 
       ON CLASSGRADECOMPONENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'CLASS(has [0:m] ) CLASSGRADECOMPONENT' 
CREATE INDEX CLASSGRADECOMPONENTFKI92483814 
       ON CLASSGRADECOMPONENT ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) CLASSGRADECOMPONENT' 
CREATE INDEX CLASSGRADECOMPONENTFKI92483815 
       ON CLASSGRADECOMPONENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - ClassResource 
CREATE UNIQUE INDEX UCLASSRESOURCE_ID_924786050 
       ON CLASSRESOURCE ( 
           ID ) ;
 
 
-- Index for Relationship - 'CLASSGRADEBOOK(has [0:m] ) CLASSRESOURCE' 
CREATE INDEX CLASSRESOURCEFKIDCLASS92483357 
       ON CLASSRESOURCE ( 
           FK_IDCLASSGRADEBOO ) ;
 
 
-- Main key for Entity - ClassRoomSession 
CREATE UNIQUE INDEX UCLASSROOMSESSION_ID_924786140 
       ON CLASSROOMSESSION ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDYOPTIONGROUP(has [0:m] ) CLASSROOMSESSION' 
CREATE INDEX CLASSROOMSESSIONFKIDST92483772 
       ON CLASSROOMSESSION ( 
           FKIDSTUDYOPTIONGRO ) ;
 
 
-- Index for Relationship - 'CLASS(has [0:m] ) CLASSROOMSESSION' 
CREATE INDEX CLASSROOMSESSIONFKIDCL92483812 
       ON CLASSROOMSESSION ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'CLASS(has attendance [0:m] ) CLASSROOMSESSION' 
CREATE INDEX CLASSROOMSESSIONATIDCL92483813 
       ON CLASSROOMSESSION ( 
           ATID_CLASS ) ;
 
 
-- Index for Relationship - 'CLASSROOMSTANDARDSCHEDULE(has [0:m] ) CLASSROOMSESSION' 
CREATE INDEX CLASSROOMSESSIONFKIDCL92483823 
       ON CLASSROOMSESSION ( 
           FKIDCLASSROOMSTAND ) ;
 
 
-- Main key for Entity - ClassRoomStandardSchedule 
CREATE UNIQUE INDEX UCLASSROOMSTANDARDSCHE92478621 
       ON CLASSROOMSTANDARDSCHEDULE ( 
           ID ) ;
 
 
-- Main key for Entity - ClassTemplate 
CREATE UNIQUE INDEX UCLASSTEMPLATE_ID_924786260 
       ON CLASSTEMPLATE ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) CLASSTEMPLATE' 
CREATE INDEX CLASSTEMPLATEFKIDADMIN92483931 
       ON CLASSTEMPLATE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(for [0:m] ) CLASSTEMPLATE' 
CREATE INDEX CLASSTEMPLATEFKIDCOLLE92483936 
       ON CLASSTEMPLATE ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - ClearingHouseReportLog 
CREATE UNIQUE INDEX UCLEARINGHOUSEREPORTLO92478630 
       ON CLEARINGHOUSEREPORTLOG ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) CLEARINGHOUSEREPORTLOG' 
CREATE INDEX CLEARINGHOUSEREPORTLOG92483418 
       ON CLEARINGHOUSEREPORTLOG ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) CLEARINGHOUSEREPORTLOG' 
CREATE INDEX CLEARINGHOUSEREPORTLOG92483419 
       ON CLEARINGHOUSEREPORTLOG ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - COD_Disbursement 
CREATE UNIQUE INDEX UCOD_DISBURSEMENT_ID_924786380 
       ON COD_DISBURSEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDDISBURSEMENT(has [0:m] ) COD_DISBURSEMENT' 
CREATE INDEX CODDISBURSEMENTFKIDFIN92484434 
       ON COD_DISBURSEMENT ( 
           FKIDFINAIDAWARDDIS ) ;
 
 
-- Main key for Entity - Cohort 
CREATE UNIQUE INDEX UCOHORT_ID_924786430 
       ON COHORT ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(is educational specialist for [0:m] ) COHORT' 
CREATE INDEX COHORT_FK_ID_PERSON_924839930 
       ON COHORT ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'STUDENT(is class rep for [0:m] ) COHORT' 
CREATE INDEX COHORT_FK_ID_STUDENT_924839940 
       ON COHORT ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'PROGRAM(is used by [0:m] ) COHORT' 
CREATE INDEX COHORT_FK_ID_PROGRAM_924840090 
       ON COHORT ( 
           FK_ID_PROGRAM ) ;
 
 
-- Index for Relationship - 'CAMPUSLOCATION(has [0:m] ) COHORT' 
CREATE INDEX COHORTFKIDCAMPUSLOCATI92484010 
       ON COHORT ( 
           FK_IDCAMPUSLOCATIO ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) COHORT' 
CREATE INDEX COHORTFKIDADMINISTRATI92484184 
       ON COHORT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - CohortActivity 
CREATE UNIQUE INDEX UCOHORTACTIVITY_ID_924786710 
       ON COHORTACTIVITY ( 
           ID ) ;
 
 
-- Index for Relationship - 'COHORT(has [0:m] ) COHORTACTIVITY' 
CREATE INDEX COHORTACTIVITYFKIDCOHO92484015 
       ON COHORTACTIVITY ( 
           FK_ID_COHORT ) ;
 
 
-- Main key for Entity - CohortMember 
CREATE UNIQUE INDEX UCOHORTMEMBER_ID_924786790 
       ON COHORTMEMBER ( 
           ID ) ;
 
 
-- Index for Relationship - 'COHORT(has [0:m] ) COHORTMEMBER' 
CREATE INDEX COHORTMEMBERFKIDCOHORT92483992 
       ON COHORTMEMBER ( 
           FK_ID_COHORT ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) COHORTMEMBER' 
CREATE INDEX COHORTMEMBERFKIDSTUDEN92484038 
       ON COHORTMEMBER ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - College 
CREATE UNIQUE INDEX UCOLLEGE_ID_924786840 
       ON COLLEGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has default [0:1] ) COLLEGE' 
CREATE INDEX COLLEGEFKIDADMINISTRAT92483887 
       ON COLLEGE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - CollegeDegree 
CREATE UNIQUE INDEX UCOLLEGEDEGREE_ID_924786890 
       ON COLLEGEDEGREE ( 
           ID ) ;
 
 
-- Main key for Entity - CollegeTerm 
CREATE UNIQUE INDEX UCOLLEGETERM_ID_924786960 
       ON COLLEGETERM ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) COLLEGETERM' 
CREATE INDEX COLLEGETERMFKIDCOLLEGE92483768 
       ON COLLEGETERM ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - CollegeYear 
CREATE UNIQUE INDEX UCOLLEGEYEAR_ID_924787360 
       ON COLLEGEYEAR ( 
           ID ) ;
 
 
-- Main key for Entity - CommunicationPlan 
CREATE UNIQUE INDEX UCOMMUNICATIONPLAN_ID_92478742 
       ON COMMUNICATIONPLAN ( 
           ID ) ;
-- Main key for Entity - CommunicationPlan 
CREATE INDEX COMMUNICATIONPLANBEGIN92478747 
       ON COMMUNICATIONPLAN ( 
           BEGINDATE ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) COMMUNICATIONPLAN' 
CREATE INDEX COMMUNICATIONPLANFKIDA92484167 
       ON COMMUNICATIONPLAN ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - ContactActivity 
CREATE UNIQUE INDEX UCONTACTACTIVITY_ID_924787590 
       ON CONTACTACTIVITY ( 
           ID ) ;
-- Main key for Entity - ContactActivity 
CREATE INDEX CONTACTACTIVITY_TYPE_924787600 
       ON CONTACTACTIVITY ( 
           TYPE ) ;
-- Main key for Entity - ContactActivity 
CREATE INDEX CONTACTACTIVITYCOMPLET92478764 
       ON CONTACTACTIVITY ( 
           COMPLETEDDATETIME ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has a history of [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDEMP92483534 
       ON CONTACTACTIVITY ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(has documented activity for [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDFIN92483825 
       ON CONTACTACTIVITY ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'PERSON(has a history of [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDPER92484110 
       ON CONTACTACTIVITY ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'EVENT(is tied to [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDEVE92484132 
       ON CONTACTACTIVITY ( 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'DOCUMENT(is tied to [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDDOC92484133 
       ON CONTACTACTIVITY ( 
           FK_ID_DOCUMENT ) ;
 
 
-- Index for Relationship - 'ACTIVITY(generates [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDACT92484293 
       ON CONTACTACTIVITY ( 
           FK_ID_ACTIVITY ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(has a history of [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDORG92484294 
       ON CONTACTACTIVITY ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'SCHOOL(has a history of [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDSCH92484295 
       ON CONTACTACTIVITY ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'CHURCH(has a history of [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDCHU92484296 
       ON CONTACTACTIVITY ( 
           FK_ID_CHURCH ) ;
 
 
-- Index for Relationship - 'z_USER(completes [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDZUS92484297 
       ON CONTACTACTIVITY ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'PERSON(has private [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYPK2IDPE92484298 
       ON CONTACTACTIVITY ( 
           PK2_ID_PERSON ) ;
 
 
-- Index for Relationship - 'VENDOR(can have [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDVEN92484299 
       ON CONTACTACTIVITY ( 
           FK_ID_VENDOR ) ;
 
 
-- Index for Relationship - 'DONOR(has a history of [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDDON92484336 
       ON CONTACTACTIVITY ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'STUDENT(has a history of [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYFKIDSTU92484337 
       ON CONTACTACTIVITY ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'STUDENT(has private [0:m] ) CONTACTACTIVITY' 
CREATE INDEX CONTACTACTIVITYPRIIDST92484338 
       ON CONTACTACTIVITY ( 
           PRIID_STUDENT ) ;
 
 
-- Main key for Entity - ContactList 
CREATE UNIQUE INDEX UCONTACTLIST_ID_924787760 
       ON CONTACTLIST ( 
           ID ) ;
 
 
-- Index for Relationship - 'CONTACTLISTCATEGORY(has [0:m] ) CONTACTLIST' 
CREATE INDEX CONTACTLISTFKIDCONTACT92483904 
       ON CONTACTLIST ( 
           FKIDCONTACTLISTCAT ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) CONTACTLIST' 
CREATE INDEX CONTACTLISTFKIDADMINIS92484003 
       ON CONTACTLIST ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(is dynamic definition for [0:m] ) CONTACTLIST' 
CREATE INDEX CONTACTLISTFKIDSTOREDQ92484134 
       ON CONTACTLIST ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Index for Relationship - 'z_USER(has the assignement of [0:m] ) CONTACTLIST' 
CREATE INDEX CONTACTLIST_FK_IDZUSER92484288 
       ON CONTACTLIST ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'EVENT(generates potential contacts [0:m] ) CONTACTLIST' 
CREATE INDEX CONTACTLIST_FK_IDEVENT92484383 
       ON CONTACTLIST ( 
           FK_ID_EVENT ) ;
 
 
-- Main key for Entity - ContactListCategory 
CREATE UNIQUE INDEX UCONTACTLISTCATEGORYID92478790 
       ON CONTACTLISTCATEGORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) CONTACTLISTCATEGORY' 
CREATE INDEX CONTACTLISTCATEGORYFKI92483905 
       ON CONTACTLISTCATEGORY ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - ContactListItem 
CREATE UNIQUE INDEX UCONTACTLISTITEM_ID_924787940 
       ON CONTACTLISTITEM ( 
           ID ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(has [0:m] ) CONTACTLISTITEM' 
CREATE INDEX CONTACTLISTITEMFKIDCON92483676 
       ON CONTACTLISTITEM ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'VENDOR(is on [0:m] ) CONTACTLISTITEM' 
CREATE INDEX CONTACTLISTITEMFKIDVEN92483677 
       ON CONTACTLISTITEM ( 
           FK_ID_VENDOR ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) CONTACTLISTITEM' 
CREATE INDEX CONTACTLISTITEMFKIDSTU92483691 
       ON CONTACTLISTITEM ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - Context 
CREATE UNIQUE INDEX UCONTEXT_ID_924787970 
       ON CONTEXT ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_DOMAIN(has [0:m] ) CONTEXT' 
CREATE INDEX CONTEXT_FK_ID_Z_DOMAIN92483251 
       ON CONTEXT ( 
           FK_ID_Z_DOMAIN ) ;
 
 
-- Main key for Entity - Course 
CREATE UNIQUE INDEX UCOURSE_ID_924788020 
       ON COURSE ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(is catalog start for [0:m] ) COURSE' 
CREATE INDEX COURSE_FKIDCOLLEGEYEAR92483601 
       ON COURSE ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(is catalog end for [0:m] ) COURSE' 
CREATE INDEX COURSEFKIDCOLLEGEYEA0292483602 
       ON COURSE ( 
           FK_ID_COLLEGEYEA02 ) ;
 
 
-- Index for Relationship - 'COURSE(is equivalent of [0:m] ) COURSE' 
CREATE INDEX COURSE_FK_ID_COURSE_924838850 
       ON COURSE ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COLLEGE(has [0:m] ) COURSE' 
CREATE INDEX COURSE_FK_ID_COLLEGE_924838860 
       ON COURSE ( 
           FK_ID_COLLEGE ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(has [0:m] ) COURSE' 
CREATE INDEX COURSE_FK_IDDEPARTMENT92484031 
       ON COURSE ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Main key for Entity - CoursePrerequisiteGroup 
CREATE UNIQUE INDEX UCOURSEPREREQUISITEGRO92478832 
       ON COURSEPREREQUISITEGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'COURSE(is prerequisite for [0:m] ) COURSEPREREQUISITEGROUP' 
CREATE INDEX COURSEPREREQUISITEGROU92483916 
       ON COURSEPREREQUISITEGROUP ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COURSE(has [0:m] ) COURSEPREREQUISITEGROUP' 
CREATE INDEX COURSEPREREQUISITEGR0292483917 
       ON COURSEPREREQUISITEGROUP ( 
           FK_ID_COURSE02 ) ;
 
 
-- Main key for Entity - CourseTopic 
CREATE UNIQUE INDEX UCOURSETOPIC_ID_924788360 
       ON COURSETOPIC ( 
           ID ) ;
 
 
-- Index for Relationship - 'COURSE(has [0:m] ) COURSETOPIC' 
CREATE INDEX COURSETOPIC_FKIDCOURSE92483889 
       ON COURSETOPIC ( 
           FK_ID_COURSE ) ;
 
 
-- Main key for Entity - CourseWithinRequiredGroup 
CREATE UNIQUE INDEX UCOURSEWITHINREQUIREDG92478842 
       ON COURSEWITHINREQUIREDGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'COURSE(has [0:m] ) COURSEWITHINREQUIREDGROUP' 
CREATE INDEX COURSEWITHINREQUIREDGR92483873 
       ON COURSEWITHINREQUIREDGROUP ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'REQUIREDGROUP(has [0:m] ) COURSEWITHINREQUIREDGROUP' 
CREATE INDEX COURSEWITHINREQUIREDGR92483874 
       ON COURSEWITHINREQUIREDGROUP ( 
           FK_ID_REQUIREDGROU ) ;
 
 
-- Index for Relationship - 'REQUIREDSUBGROUP(has [0:m] ) COURSEWITHINREQUIREDGROUP' 
CREATE INDEX COURSEWITHINREQUIREDGR92483875 
       ON COURSEWITHINREQUIREDGROUP ( 
           FKIDREQUIREDSUBGRO ) ;
 
 
-- Main key for Entity - CustomTransciptTerm 
CREATE UNIQUE INDEX UCUSTOMTRANSCIPTTERMID92478845 
       ON CUSTOMTRANSCIPTTERM ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) CUSTOMTRANSCIPTTERM' 
CREATE INDEX CUSTOMTRANSCIPTTERMFKI92483673 
       ON CUSTOMTRANSCIPTTERM ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) CUSTOMTRANSCIPTTERM' 
CREATE INDEX CUSTOMTRANSCIPTTERMFKI92483700 
       ON CUSTOMTRANSCIPTTERM ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - CustomTranscriptLine 
CREATE UNIQUE INDEX UCUSTOMTRANSCRIPTLINEI92478848 
       ON CUSTOMTRANSCRIPTLINE ( 
           ID ) ;
 
 
-- Index for Relationship - 'CUSTOMTRANSCIPTTERM(has [0:m] ) CUSTOMTRANSCRIPTLINE' 
CREATE INDEX CUSTOMTRANSCRIPTLINEFK92483557 
       ON CUSTOMTRANSCRIPTLINE ( 
           FKIDCUSTOMTRANSCIP ) ;
 
 
-- Main key for Entity - DashboardFrame 
CREATE UNIQUE INDEX UDASHBOARDFRAME_ID_924788520 
       ON DASHBOARDFRAME ( 
           ID ) ;
 
 
-- Main key for Entity - DashboardFrameUser 
CREATE UNIQUE INDEX UDASHBOARDFRAMEUSER_ID92478860 
       ON DASHBOARDFRAMEUSER ( 
           ID ) ;
 
 
-- Index for Relationship - 'DASHBOARDFRAME(has [0:m] ) DASHBOARDFRAMEUSER' 
CREATE INDEX DASHBOARDFRAMEUSERFKID92483324 
       ON DASHBOARDFRAMEUSER ( 
           FK_IDDASHBOARDFRAM ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) DASHBOARDFRAMEUSER' 
CREATE INDEX DASHBOARDFRAMEUSERFKID92483325 
       ON DASHBOARDFRAMEUSER ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - DataEntryBatch 
CREATE UNIQUE INDEX UDATAENTRYBATCH_ID_924788650 
       ON DATAENTRYBATCH ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(created [0:m] ) DATAENTRYBATCH' 
CREATE INDEX DATAENTRYBATCHFKIDZUSE92483977 
       ON DATAENTRYBATCH ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - DegreeAuditSpecification 
CREATE UNIQUE INDEX UDEGREEAUDITSPECIFICAT92478876 
       ON DEGREEAUDITSPECIFICATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(has [0:m] ) DEGREEAUDITSPECIFICATION' 
CREATE INDEX DEGREEAUDITSPECIFICATI92483738 
       ON DEGREEAUDITSPECIFICATION ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Index for Relationship - 'ENROLLMENTORFOREIGNEQUIVALENT(has [0:m] ) DEGREEAUDITSPECIFICATION' 
CREATE INDEX DEGREEAUDITSPECIFICATI92484023 
       ON DEGREEAUDITSPECIFICATION ( 
           FKIDENROLLMENTORFO ) ;
 
 
-- Index for Relationship - 'REQUIREDGROUP(has [0:m] ) DEGREEAUDITSPECIFICATION' 
CREATE INDEX DEGREEAUDITSPECIFICATI92484024 
       ON DEGREEAUDITSPECIFICATION ( 
           FK_ID_REQUIREDGROU ) ;
 
 
-- Index for Relationship - 'REQUIREDSUBGROUP(has [0:m] ) DEGREEAUDITSPECIFICATION' 
CREATE INDEX DEGREEAUDITSPECIFICATI92484025 
       ON DEGREEAUDITSPECIFICATION ( 
           FKIDREQUIREDSUBGRO ) ;
 
 
-- Index for Relationship - 'COURSE(has [0:m] ) DEGREEAUDITSPECIFICATION' 
CREATE INDEX DEGREEAUDITSPECIFICATI92484026 
       ON DEGREEAUDITSPECIFICATION ( 
           FK_ID_COURSE ) ;
 
 
-- Main key for Entity - DegreeCandidacy 
CREATE UNIQUE INDEX UDEGREECANDIDACY_ID_924788790 
       ON DEGREECANDIDACY ( 
           ID ) ;
 
 
-- Index for Relationship - 'GRADUATIONDATE(has anticipated graduate [0:m] ) DEGREECANDIDACY' 
CREATE INDEX DEGREECANDIDACYFKIDGRA92483634 
       ON DEGREECANDIDACY ( 
           FK_IDGRADUATIONDAT ) ;
 
 
-- Index for Relationship - 'GRADUATIONDATE(has participant [0:m] ) DEGREECANDIDACY' 
CREATE INDEX DEGREECANDIDACYFKIDG0292483669 
       ON DEGREECANDIDACY ( 
           FK_IDGRADUATIOND02 ) ;
 
 
-- Index for Relationship - 'GRADUATIONDATE(has graduate [0:m] ) DEGREECANDIDACY' 
CREATE INDEX DEGREECANDIDACYFKIDG0392483670 
       ON DEGREECANDIDACY ( 
           FK_IDGRADUATIOND03 ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) DEGREECANDIDACY' 
CREATE INDEX DEGREECANDIDACYFKIDSTU92483672 
       ON DEGREECANDIDACY ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - DegreeMajor 
CREATE UNIQUE INDEX UDEGREEMAJOR_ID_924788950 
       ON DEGREEMAJOR ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGE(has [0:m] ) DEGREEMAJOR' 
CREATE INDEX DEGREEMAJORFKIDCOLLEGE92483878 
       ON DEGREEMAJOR ( 
           FK_ID_COLLEGE ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(for [0:m] ) DEGREEMAJOR' 
CREATE INDEX DEGREEMAJORFKIDDEPARTM92484032 
       ON DEGREEMAJOR ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) DEGREEMAJOR' 
CREATE INDEX DEGREEMAJORFKIDADMINIS92484061 
       ON DEGREEMAJOR ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - DegreeMinor 
CREATE UNIQUE INDEX UDEGREEMINOR_ID_924789050 
       ON DEGREEMINOR ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGE(has [0:m] ) DEGREEMINOR' 
CREATE INDEX DEGREEMINORFKIDCOLLEGE92483879 
       ON DEGREEMINOR ( 
           FK_ID_COLLEGE ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) DEGREEMINOR' 
CREATE INDEX DEGREEMINORFKIDADMINIS92484339 
       ON DEGREEMINOR ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(for [0:m] ) DEGREEMINOR' 
CREATE INDEX DEGREEMINORFKIDDEPARTM92484340 
       ON DEGREEMINOR ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Main key for Entity - DegreeTrack 
CREATE UNIQUE INDEX UDEGREETRACK_ID_924789150 
       ON DEGREETRACK ( 
           ID ) ;
 
 
-- Index for Relationship - 'DEGREEMINOR(has [0:m] ) DEGREETRACK' 
CREATE INDEX DEGREETRACKFKIDDEGREEM92483880 
       ON DEGREETRACK ( 
           FK_ID_DEGREEMINOR ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(offers [0:m] ) DEGREETRACK' 
CREATE INDEX DEGREETRACKFKIDDEPARTM92484017 
       ON DEGREETRACK ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'DEGREEMAJOR(has [0:m] ) DEGREETRACK' 
CREATE INDEX DEGREETRACKFKIDDEGREEM92484022 
       ON DEGREETRACK ( 
           FK_ID_DEGREEMAJOR ) ;
 
 
-- Index for Relationship - 'COLLEGEDEGREE(has [0:m] ) DEGREETRACK' 
CREATE INDEX DEGREETRACKFKIDCOLLEGE92484070 
       ON DEGREETRACK ( 
           FK_ID_COLLEGEDEGRE ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) DEGREETRACK' 
CREATE INDEX DEGREETRACKFKIDCOLLEGE92484319 
       ON DEGREETRACK ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - DegreeTrackRequiredGroup 
CREATE UNIQUE INDEX UDEGREETRACKREQUIREDGR92483774 
       ON DEGREETRACKREQUIREDGROUP ( 
           FK_ID_REQUIREDGROU, 
           FK_ID_DEGREETRACK ) ;
 
 
-- Index for Relationship - 'REQUIREDGROUP(has [0:m] ) DEGREETRACKREQUIREDGROUP' 
CREATE INDEX DEGREETRACKREQUIREDGRO92483774 
       ON DEGREETRACKREQUIREDGROUP ( 
           FK_ID_REQUIREDGROU ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(has [0:m] ) DEGREETRACKREQUIREDGROUP' 
CREATE INDEX DEGREETRACKREQUIREDGRO92483775 
       ON DEGREETRACKREQUIREDGROUP ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Main key for Entity - DegreeYearData 
CREATE UNIQUE INDEX UDEGREEYEARDATA_ID_924789430 
       ON DEGREEYEARDATA ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGEDEGREE(has [0:m] ) DEGREEYEARDATA' 
CREATE INDEX DEGREEYEARDATAFKIDCOLL92483661 
       ON DEGREEYEARDATA ( 
           FK_ID_COLLEGEDEGRE ) ;
 
 
-- Main key for Entity - DeleteTrace 
CREATE UNIQUE INDEX UDELETETRACE_ID_924789490 
       ON DELETETRACE ( 
           ID ) ;
-- Main key for Entity - DeleteTrace 
CREATE INDEX DELETETRACE_ROOTENTITY92478950 
       ON DELETETRACE ( 
           ROOTENTITYNAME ) ;
-- Main key for Entity - DeleteTrace 
CREATE INDEX DELETETRACE_OBJECTNAME92478952 
       ON DELETETRACE ( 
           OBJECTNAME ) ;
 
 
-- Main key for Entity - Demographics 
CREATE UNIQUE INDEX UDEMOGRAPHICS_ID_924789620 
       ON DEMOGRAPHICS ( 
           ID ) ;
-- Main key for Entity - Demographics 
CREATE INDEX DEMOGRAPHICSNATIONOFCI92478972 
       ON DEMOGRAPHICS ( 
           NATIONOFCITIZENSHI ) ;
-- Main key for Entity - Demographics 
CREATE INDEX DEMOGRAPHICSCITIZENSHI92478966 
       ON DEMOGRAPHICS ( 
           CITIZENSHIPCODE ) ;
 
 
-- Index for Relationship - 'PERSON(for [0:1] ) DEMOGRAPHICS' 
CREATE INDEX DEMOGRAPHICSFKIDPERSON92484271 
       ON DEMOGRAPHICS ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - Department 
CREATE UNIQUE INDEX UDEPARTMENT_ID_924790100 
       ON DEPARTMENT ( 
           ID ) ;
-- Main key for Entity - Department 
CREATE INDEX DEPARTMENTDEPARTMENTCO92479011 
       ON DEPARTMENT ( 
           DEPARTMENTCODE ) ;
 
 
-- Index for Relationship - 'DIVISION(has [0:m] ) DEPARTMENT' 
CREATE INDEX DEPARTMENTFKIDDIVISION92483408 
       ON DEPARTMENT ( 
           FK_ID_DIVISION ) ;
 
 
-- Index for Relationship - 'ACADEMICDIVISION(has [0:m] ) DEPARTMENT' 
CREATE INDEX DEPARTMENTFKIDACADEMIC92483525 
       ON DEPARTMENT ( 
           FKIDACADEMICDIVISI ) ;
 
 
-- Index for Relationship - 'FACULTY(is chair of [0:m] ) DEPARTMENT' 
CREATE INDEX DEPARTMENT_FKIDFACULTY92483684 
       ON DEPARTMENT ( 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) DEPARTMENT' 
CREATE INDEX DEPARTMENTFKIDADMINIST92484033 
       ON DEPARTMENT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - DepartmentContractDistribution 
CREATE UNIQUE INDEX UDEPARTMENTCONTRACTDIS92479021 
       ON DEPARTMENTCONTRACTDISTRIBUTION ( 
           ID ) ;
 
 
-- Index for Relationship - 'YEARLYCONTRACT(has [0:m] ) DEPARTMENTCONTRACTDISTRIBUTION' 
CREATE INDEX DEPARTMENTCONTRACTDIST92483535 
       ON DEPARTMENTCONTRACTDISTRIBUTION ( 
           FK_IDYEARLYCONTRAC ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) DEPARTMENTCONTRACTDISTRIBUTION' 
CREATE INDEX DEPARTMENTCONTRACTDIST92483538 
       ON DEPARTMENTCONTRACTDISTRIBUTION ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(has [0:m] ) DEPARTMENTCONTRACTDISTRIBUTION' 
CREATE INDEX DEPARTMENTCONTRACTDIST92483539 
       ON DEPARTMENTCONTRACTDISTRIBUTION ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Main key for Entity - Deposit 
CREATE UNIQUE INDEX UDEPOSIT_ID_924790270 
       ON DEPOSIT ( 
           ID ) ;
-- Main key for Entity - Deposit 
CREATE INDEX DEPOSIT_DEPOSITDATE_924790280 
       ON DEPOSIT ( 
           DEPOSITDATE ) ;
 
 
-- Main key for Entity - DepositGrouping 
CREATE UNIQUE INDEX UDEPOSITGROUPING_ID_924790400 
       ON DEPOSITGROUPING ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINANCIALACCOUNTSTATEMENT(as reconciled [0:m] ) DEPOSITGROUPING' 
CREATE INDEX DEPOSITGROUPINGFKIDFIN92483480 
       ON DEPOSITGROUPING ( 
           FKIDFINANCIALACCOU ) ;
 
 
-- Main key for Entity - DevProject 
CREATE UNIQUE INDEX UDEVPROJECT_ID_924790480 
       ON DEVPROJECT ( 
           ID ) ;
 
 
-- Main key for Entity - DirectoryRestrictions 
CREATE UNIQUE INDEX UDIRECTORYRESTRICTIONS92479056 
       ON DIRECTORYRESTRICTIONS ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(can have [0:m] ) DIRECTORYRESTRICTIONS' 
CREATE INDEX DIRECTORYRESTRICTIONSF92483441 
       ON DIRECTORYRESTRICTIONS ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - Division 
CREATE UNIQUE INDEX UDIVISION_ID_924790780 
       ON DIVISION ( 
           ID ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(is div head for [0:m] ) DIVISION' 
CREATE INDEX DIVISION_FK_IDEMPLOYEE92483407 
       ON DIVISION ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Main key for Entity - Document 
CREATE UNIQUE INDEX UDOCUMENT_ID_924790830 
       ON DOCUMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) DOCUMENT' 
CREATE INDEX DOCUMENTFKIDADMINISTRA92483971 
       ON DOCUMENT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'DOCUMENTCATEGORY(has [0:m] ) DOCUMENT' 
CREATE INDEX DOCUMENTFKIDDOCUMENTCA92484391 
       ON DOCUMENT ( 
           FKIDDOCUMENTCATEGO ) ;
 
 
-- Main key for Entity - DocumentCategory 
CREATE UNIQUE INDEX UDOCUMENTCATEGORY_ID_924791090 
       ON DOCUMENTCATEGORY ( 
           ID ) ;
 
 
-- Main key for Entity - DocumentToSend 
CREATE UNIQUE INDEX UDOCUMENTTOSEND_ID_924791130 
       ON DOCUMENTTOSEND ( 
           ID ) ;
 
 
-- Index for Relationship - 'STAFF(sends [0:m] ) DOCUMENTTOSEND' 
CREATE INDEX DOCUMENTTOSENDFKIDSTAF92483415 
       ON DOCUMENTTOSEND ( 
           FK_ID_STAFF ) ;
 
 
-- Index for Relationship - 'DOCUMENT(is sent from [0:m] ) DOCUMENTTOSEND' 
CREATE INDEX DOCUMENTTOSENDFKIDDOCU92483416 
       ON DOCUMENTTOSEND ( 
           FK_ID_DOCUMENT ) ;
 
 
-- Index for Relationship - 'PROSPECT(has sent [0:m] ) DOCUMENTTOSEND' 
CREATE INDEX DOCUMENTTOSENDFKIDPROS92483417 
       ON DOCUMENTTOSEND ( 
           FK_ID_PROSPECT ) ;
 
 
-- Main key for Entity - Domain 
CREATE UNIQUE INDEX Uz_DOMAIN_ID_924791170 
       ON z_DOMAIN ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has special [0:m] ) z_DOMAIN' 
CREATE INDEX zDOMAINFKIDADMINISTRAT92483970 
       ON z_DOMAIN ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - DomainValue 
CREATE UNIQUE INDEX UDOMAINVALUEDOMAINVALU92479129 
       ON DOMAINVALUE ( 
           DOMAINVALUE_TOKEN ) ;
 
 
-- Index for Relationship - 'CONTEXT(has [0:m] ) DOMAINVALUE' 
CREATE INDEX DOMAINVALUEFKIDCONTEXT92483252 
       ON DOMAINVALUE ( 
           FK_ID_CONTEXT ) ;
 
 
-- Index for Relationship - 'z_DOMAIN(has [0:m] ) DOMAINVALUE' 
CREATE INDEX DOMAINVALUEFKIDZDOMAIN92484311 
       ON DOMAINVALUE ( 
           FK_ID_Z_DOMAIN ) ;
 
 
-- Main key for Entity - Donation 
CREATE UNIQUE INDEX UDONATION_ID_924791310 
       ON DONATION ( 
           ID ) ;
-- Main key for Entity - Donation 
CREATE INDEX DONATION_DONATIONTYPE_92479132 
       ON DONATION ( 
           TYPE ) ;
-- Main key for Entity - Donation 
CREATE INDEX DONATION_RECEIVEDDATE_92479134 
       ON DONATION ( 
           RECEIVEDDATE ) ;
-- Main key for Entity - Donation 
CREATE INDEX DONATION_AMOUNT_924791400 
       ON DONATION ( 
           AMOUNT ) ;
 
 
-- Index for Relationship - 'EVENT(can generate [0:m] ) DONATION' 
CREATE INDEX DONATION_FK_ID_EVENT_924841200 
       ON DONATION ( 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'DONOR(gives [0:m] ) DONATION' 
CREATE INDEX DONATION_FK_ID_DONOR_924843250 
       ON DONATION ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'DEPOSIT(the result of  [1:m] ) DONATION' 
CREATE INDEX DONATION_FK_ID_DEPOSIT92484328 
       ON DONATION ( 
           FK_ID_DEPOSIT ) ;
 
 
-- Main key for Entity - Donor 
CREATE UNIQUE INDEX UDONOR_ID_924791600 
       ON DONOR ( 
           ID ) ;
-- Main key for Entity - Donor 
CREATE INDEX DONOR_EMPLOYERMATCH_924791640 
       ON DONOR ( 
           EMPLOYERMATCH ) ;
 
 
-- Index for Relationship - 'CHURCH(can be [0:1] ) DONOR' 
CREATE INDEX DONOR_FK_ID_CHURCH_924841110 
       ON DONOR ( 
           FK_ID_CHURCH ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(can be a [0:1] ) DONOR' 
CREATE INDEX DONOR_FKIDORGANIZATION92484121 
       ON DONOR ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'FUND(donations from (default) [0:m] ) DONOR' 
CREATE INDEX DONOR_FK_ID_FUND_924843330 
       ON DONOR ( 
           FK_ID_FUND ) ;
 
 
-- Main key for Entity - DonorAnnualSummary 
CREATE UNIQUE INDEX UDONORANNUALSUMMARY_ID92479203 
       ON DONORANNUALSUMMARY ( 
           ID ) ;
 
 
-- Index for Relationship - 'DONOR(has [0:m] ) DONORANNUALSUMMARY' 
CREATE INDEX DONORANNUALSUMMARYFKID92484349 
       ON DONORANNUALSUMMARY ( 
           FK_ID_DONOR ) ;
 
 
-- Main key for Entity - DonorContactType 
CREATE UNIQUE INDEX UDONORCONTACTTYPE_ID_924792220 
       ON DONORCONTACTTYPE ( 
           ID ) ;
 
 
-- Index for Relationship - 'FUND(has [0:m] ) DONORCONTACTTYPE' 
CREATE INDEX DONORCONTACTTYPEFKIDFU92484130 
       ON DONORCONTACTTYPE ( 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'DONOR(has [0:m] ) DONORCONTACTTYPE' 
CREATE INDEX DONORCONTACTTYPEFKIDDO92484131 
       ON DONORCONTACTTYPE ( 
           FK_ID_DONOR ) ;
 
 
-- Main key for Entity - Emailback 
CREATE UNIQUE INDEX UEMAILBACK_ID_924792260 
       ON EMAILBACK ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) EMAILBACK' 
CREATE INDEX EMAILBACK_FK_ID_PERSON92483432 
       ON EMAILBACK ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) EMAILBACK' 
CREATE INDEX EMAILBACK_FK_ID_Z_USER92483434 
       ON EMAILBACK ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - Employee 
CREATE UNIQUE INDEX UEMPLOYEE_ID_924792300 
       ON EMPLOYEE ( 
           ID ) ;
 
 
-- Index for Relationship - 'YEARLYCONTRACT(is active for [0:m] ) EMPLOYEE' 
CREATE INDEX EMPLOYEEFKIDYEARLYCONT92483551 
       ON EMPLOYEE ( 
           FK_IDYEARLYCONTRAC ) ;
 
 
-- Index for Relationship - 'PERSON(for [0:1] ) EMPLOYEE' 
CREATE INDEX EMPLOYEE_FK_ID_PERSON_92483553 
       ON EMPLOYEE ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - EmployeeClassCompensation 
CREATE UNIQUE INDEX UEMPLOYEECLASSCOMPENSA92479248 
       ON EMPLOYEECLASSCOMPENSATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has [0:m] ) EMPLOYEECLASSCOMPENSATION' 
CREATE INDEX EMPLOYEECLASSCOMPENSAT92483410 
       ON EMPLOYEECLASSCOMPENSATION ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Index for Relationship - 'CLASS(has [0:m] ) EMPLOYEECLASSCOMPENSATION' 
CREATE INDEX EMPLOYEECLASSCOMPENSAT92483411 
       ON EMPLOYEECLASSCOMPENSATION ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) EMPLOYEECLASSCOMPENSATION' 
CREATE INDEX EMPLOYEECLASSCOMPENSAT92483412 
       ON EMPLOYEECLASSCOMPENSATION ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(has [0:m] ) EMPLOYEECLASSCOMPENSATION' 
CREATE INDEX EMPLOYEECLASSCOMPENSAT92483413 
       ON EMPLOYEECLASSCOMPENSATION ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Main key for Entity - EmploymentPeriod 
CREATE UNIQUE INDEX UEMPLOYMENTPERIOD_ID_924792530 
       ON EMPLOYMENTPERIOD ( 
           ID ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has [0:m] ) EMPLOYMENTPERIOD' 
CREATE INDEX EMPLOYMENTPERIODFKIDEM92483400 
       ON EMPLOYMENTPERIOD ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Main key for Entity - EnrollmentHistory 
CREATE UNIQUE INDEX UENROLLMENTHISTORY_ID_92479262 
       ON ENROLLMENTHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'PROSPECT(has (max card 1) [0:m] ) ENROLLMENTHISTORY' 
CREATE INDEX ENROLLMENTHISTORYFKIDP92483338 
       ON ENROLLMENTHISTORY ( 
           FK_ID_PROSPECT ) ;
 
 
-- Main key for Entity - EnrollmentModification 
CREATE UNIQUE INDEX UENROLLMENTMODIFICATIO92479274 
       ON ENROLLMENTMODIFICATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) ENROLLMENTMODIFICATION' 
CREATE INDEX ENROLLMENTMODIFICATION92483732 
       ON ENROLLMENTMODIFICATION ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'z_USER(creates [0:m] ) ENROLLMENTMODIFICATION' 
CREATE INDEX ENROLLMENTMODIFICATION92483735 
       ON ENROLLMENTMODIFICATION ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - EnrollmentOrForeignEquivalent 
CREATE UNIQUE INDEX UENROLLMENTORFOREIGNEQ92479294 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'TRANSFERGROUP(has [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQU92483555 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK_ID_TRANSFERGROU ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQ292483556 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK2_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'LEGACYTRANSCRIPTGROUP(has [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQU92483573 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FKIDLEGACYTRANSCRI ) ;
 
 
-- Index for Relationship - 'COURSE(is a xref course override for [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQU92483663 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'FOREIGNCOURSE(has [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQU92483722 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK_ID_FOREIGNCOURS ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(is term for transfer record [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQU92483876 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQU92484071 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CLASS(has [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNEQU92484072 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'COURSE(has equivalent foreign course [0:m] ) ENROLLMENTORFOREIGNEQUIVALENT' 
CREATE INDEX ENROLLMENTORFOREIGNE0292484074 
       ON ENROLLMENTORFOREIGNEQUIVALENT ( 
           FK_ID_COURSE02 ) ;
 
 
-- Main key for Entity - Event 
CREATE UNIQUE INDEX UEVENT_ID_924793260 
       ON EVENT ( 
           ID ) ;
-- Main key for Entity - Event 
CREATE INDEX EVENT_BEGINDATE_924793350 
       ON EVENT ( 
           BEGINDATE ) ;
-- Main key for Entity - Event 
CREATE INDEX EVENT_EVENTTYPE_924793330 
       ON EVENT ( 
           EVENTTYPE ) ;
 
 
-- Index for Relationship - 'CALENDARGROUP(has scheduled [0:m] ) EVENT' 
CREATE INDEX EVENT_FKIDCALENDARGROU92483451 
       ON EVENT ( 
           FK_ID_CALENDARGROU ) ;
 
 
-- Index for Relationship - 'FOLDER(has [0:m] ) EVENT' 
CREATE INDEX EVENT_FK_ID_FOLDER_924842740 
       ON EVENT ( 
           FK_ID_FOLDER ) ;
 
 
-- Index for Relationship - 'z_USER(is responsible for [0:m] ) EVENT' 
CREATE INDEX EVENT_FK_ID_Z_USER_924842870 
       ON EVENT ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'COMMUNICATIONPLAN(can have associated [0:m] ) EVENT' 
CREATE INDEX EVENTFKIDCOMMUNICATION92484321 
       ON EVENT ( 
           FKIDCOMMUNICATIONP ) ;
 
 
-- Index for Relationship - 'PERSON(has private [0:m] ) EVENT' 
CREATE INDEX EVENT_FK_ID_PERSON_924843940 
       ON EVENT ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'EVENT(is a parent of [0:m] ) EVENT' 
CREATE INDEX EVENT_FK_ID_EVENT_924843950 
       ON EVENT ( 
           FK_ID_EVENT ) ;
 
 
-- Main key for Entity - ExamHistory 
CREATE UNIQUE INDEX UEXAMHISTORY_ID_924793490 
       ON EXAMHISTORY ( 
           ID ) ;
-- Main key for Entity - ExamHistory 
CREATE INDEX EXAMHISTORY_EXAMTYPE_924793500 
       ON EXAMHISTORY ( 
           EXAMTYPE ) ;
-- Main key for Entity - ExamHistory 
CREATE INDEX EXAMHISTORYTOTALCOMPOS92479359 
       ON EXAMHISTORY ( 
           TOTALCOMPOSITE ) ;
 
 
-- Index for Relationship - 'PROSPECT(has [0:m] ) EXAMHISTORY' 
CREATE INDEX EXAMHISTORYFKIDPROSPEC92484267 
       ON EXAMHISTORY ( 
           FK_ID_PROSPECT ) ;
 
 
-- Main key for Entity - ExtraCurricularActivity 
CREATE UNIQUE INDEX UEXTRACURRICULARACTIVI92479368 
       ON EXTRACURRICULARACTIVITY ( 
           ID ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARACTIVITYGROUP(has [0:m] ) EXTRACURRICULARACTIVITY' 
CREATE INDEX EXTRACURRICULARACTIVIT92483461 
       ON EXTRACURRICULARACTIVITY ( 
           FKIDEXTRACURRICULA ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) EXTRACURRICULARACTIVITY' 
CREATE INDEX EXTRACURRICULARACTIVIT92483462 
       ON EXTRACURRICULARACTIVITY ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - ExtraCurricularActivityGroup 
CREATE UNIQUE INDEX UEXTRACURRICULARACTIVI92479376 
       ON EXTRACURRICULARACTIVITYGROUP ( 
           ID ) ;
 
 
-- Main key for Entity - ExtraCurricularAward 
CREATE UNIQUE INDEX UEXTRACURRICULARAWARDI92479382 
       ON EXTRACURRICULARAWARD ( 
           ID ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARACTIVITY(has [0:m] ) EXTRACURRICULARAWARD' 
CREATE INDEX EXTRACURRICULARAWARDFK92483468 
       ON EXTRACURRICULARAWARD ( 
           FKIDEXTRACURRICULA ) ;
 
 
-- Main key for Entity - ExtraCurricularRole 
CREATE UNIQUE INDEX UEXTRACURRICULARROLEID92479387 
       ON EXTRACURRICULARROLE ( 
           ID ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARSTANDARDROLE(has [0:m] ) EXTRACURRICULARROLE' 
CREATE INDEX EXTRACURRICULARROLEFKI92483469 
       ON EXTRACURRICULARROLE ( 
           FKIDEXTRACURRICULA ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARACTIVITY(has [0:m] ) EXTRACURRICULARROLE' 
CREATE INDEX EXTRACURRICULARROLEF0292483470 
       ON EXTRACURRICULARROLE ( 
           FKIDEXTRACURRICU02 ) ;
 
 
-- Main key for Entity - ExtraCurricularStandardRole 
CREATE UNIQUE INDEX UEXTRACURRICULARSTANDA92479393 
       ON EXTRACURRICULARSTANDARDROLE ( 
           ID ) ;
 
 
-- Main key for Entity - FA_AutoAwardEligibility 
CREATE UNIQUE INDEX UFAAUTOAWARDELIGIBILIT92479397 
       ON FA_AUTOAWARDELIGIBILITY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(has [0:m] ) FA_AUTOAWARDELIGIBILITY' 
CREATE INDEX FAAUTOAWARDELIGIBILITY92484452 
       ON FA_AUTOAWARDELIGIBILITY ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) FA_AUTOAWARDELIGIBILITY' 
CREATE INDEX FAAUTOAWARDELIGIBILITY92484453 
       ON FA_AUTOAWARDELIGIBILITY ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) FA_AUTOAWARDELIGIBILITY' 
CREATE INDEX FAAUTOAWARDELIGIBILITY92484454 
       ON FA_AUTOAWARDELIGIBILITY ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - FA_AutoAwardGenerateMessage 
CREATE UNIQUE INDEX UFAAUTOAWARDGENERATEME92479405 
       ON FA_AUTOAWARDGENERATEMESSAGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) FA_AUTOAWARDGENERATEMESSAGE' 
CREATE INDEX FAAUTOAWARDGENERATEMES92484455 
       ON FA_AUTOAWARDGENERATEMESSAGE ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) FA_AUTOAWARDGENERATEMESSAGE' 
CREATE INDEX FAAUTOAWARDGENERATEMES92484456 
       ON FA_AUTOAWARDGENERATEMESSAGE ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - FA_AutoAwardVariable 
CREATE UNIQUE INDEX UFAAUTOAWARDVARIABLEID92479410 
       ON FA_AUTOAWARDVARIABLE ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(has [0:m] ) FA_AUTOAWARDVARIABLE' 
CREATE INDEX FAAUTOAWARDVARIABLEFKI92483220 
       ON FA_AUTOAWARDVARIABLE ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Main key for Entity - FA_AwardMatrix 
CREATE UNIQUE INDEX UFA_AWARDMATRIX_ID_924794150 
       ON FA_AWARDMATRIX ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(has [0:m] ) FA_AWARDMATRIX' 
CREATE INDEX FAAWARDMATRIXFKIDFINAI92484458 
       ON FA_AWARDMATRIX ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) FA_AWARDMATRIX' 
CREATE INDEX FAAWARDMATRIXFKIDCOLLE92484459 
       ON FA_AWARDMATRIX ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - FA_AwardMatrixCell 
CREATE UNIQUE INDEX UFA_AWARDMATRIXCELL_ID92479419 
       ON FA_AWARDMATRIXCELL ( 
           ID ) ;
 
 
-- Index for Relationship - 'FA_AWARDMATRIX(has [0:m] ) FA_AWARDMATRIXCELL' 
CREATE INDEX FAAWARDMATRIXCELLFKIDF92484457 
       ON FA_AWARDMATRIXCELL ( 
           FK_ID_FAAWARDMATRI ) ;
 
 
-- Main key for Entity - FA_CL_ImportExportFileHistory 
CREATE UNIQUE INDEX UFACLIMPORTEXPORTFILEH92479428 
       ON FA_CL_IMPORTEXPORTFILEHISTORY ( 
           ID ) ;
 
 
-- Main key for Entity - FA_LoanImportExportHistory 
CREATE UNIQUE INDEX UFALOANIMPORTEXPORTHIS92479434 
       ON FA_LOANIMPORTEXPORTHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FA_CL_IMPORTEXPORTFILEHISTORY(has [0:m] ) FA_LOANIMPORTEXPORTHISTORY' 
CREATE INDEX FALOANIMPORTEXPORTHIST92483228 
       ON FA_LOANIMPORTEXPORTHISTORY ( 
           FKIDFACLIMPORTEXPO ) ;
 
 
-- Index for Relationship - 'FINAIDLOAN(has [0:m] ) FA_LOANIMPORTEXPORTHISTORY' 
CREATE INDEX FALOANIMPORTEXPORTHIST92483232 
       ON FA_LOANIMPORTEXPORTHISTORY ( 
           FK_ID_FINAIDLOAN ) ;
 
 
-- Main key for Entity - Faculty 
CREATE UNIQUE INDEX UFACULTY_ID_924794420 
       ON FACULTY ( 
           ID ) ;
-- Main key for Entity - Faculty 
CREATE INDEX FACULTY_STATUS_924794430 
       ON FACULTY ( 
           STATUS ) ;
-- Main key for Entity - Faculty 
CREATE INDEX FACULTY_TYPE_924794440 
       ON FACULTY ( 
           TYPE ) ;
 
 
-- Index for Relationship - 'PERSON(isa [0:m] ) FACULTY' 
CREATE INDEX FACULTY_FK_ID_PERSON_924843130 
       ON FACULTY ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) FACULTY' 
CREATE INDEX FACULTYFKIDADMINISTRAT92484341 
       ON FACULTY ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - FAISIR 
CREATE UNIQUE INDEX UFAISIR_ID_924794590 
       ON FAISIR ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(for [0:m] ) FAISIR' 
CREATE INDEX FAISIR_FKIDCOLLEGEYEAR92483745 
       ON FAISIR ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(has a per year [0:m] ) FAISIR' 
CREATE INDEX FAISIRFKIDFINAIDPROFIL92483851 
       ON FAISIR ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Index for Relationship - 'STUDENT(applies for [0:m] ) FAISIR' 
CREATE INDEX FAISIR_FK_ID_STUDENT_924842230 
       ON FAISIR ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'PROSPECT(has [0:m] ) FAISIR' 
CREATE INDEX FAISIR_FK_ID_PROSPECT_92484238 
       ON FAISIR ( 
           FK_ID_PROSPECT ) ;
 
 
-- Main key for Entity - FAISIRAcg 
CREATE UNIQUE INDEX UFAISIRACG_ID_924795830 
       ON FAISIRACG ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIR(has [0:m] ) FAISIRACG' 
CREATE INDEX FAISIRACG_FK_ID_FAISIR92483393 
       ON FAISIRACG ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRAcknowledgementCommentCode 
CREATE UNIQUE INDEX UFAISIRACKNOWLEDGEMENT92479600 
       ON FAISIRACKNOWLEDGEMENTCOMMENTCO ( 
           ACKNOWLDGMNTCMMNTC, 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(for [0:m] ) FAISIRACKNOWLEDGEMENTCOMMENTCO' 
CREATE INDEX FAISIRACKNOWLEDGEMENTC92483755 
       ON FAISIRACKNOWLEDGEMENTCOMMENTCO ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIRAssumption 
CREATE UNIQUE INDEX UFAISIRASSUMPTION_ID_924796030 
       ON FAISIRASSUMPTION ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(has (1) [0:m] ) FAISIRASSUMPTION' 
CREATE INDEX FAISIRASSUMPTIONFKIDFA92483746 
       ON FAISIRASSUMPTION ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIRAssumptionOverride 
CREATE UNIQUE INDEX UFAISIRASSUMPTIONOVERR92479635 
       ON FAISIRASSUMPTIONOVERRIDE ( 
           ASSUMPTIONOVERRIDC, 
           FK_ID_FAISIR ) ;
 
 
-- Index for Relationship - 'FAISIR(has [0:m] ) FAISIRASSUMPTIONOVERRIDE' 
CREATE INDEX FAISIRASSUMPTIONOVERRI92483749 
       ON FAISIRASSUMPTIONOVERRIDE ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRChange 
CREATE UNIQUE INDEX UFAISIRCHANGE_ID_924796380 
       ON FAISIRCHANGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIR(to [0:m] ) FAISIRCHANGE' 
CREATE INDEX FAISIRCHANGEFKIDFAISIR92483743 
       ON FAISIRCHANGE ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRCommentCode 
CREATE UNIQUE INDEX UFAISIRCOMMENTCODE_ID_92479647 
       ON FAISIRCOMMENTCODE ( 
           COMMENTCODE ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(for [0:m] ) FAISIRCOMMENTCODE' 
CREATE INDEX FAISIRCOMMENTCODEFKIDF92483754 
       ON FAISIRCOMMENTCODE ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIRCorrectionCode 
CREATE UNIQUE INDEX UFAISIRCORRECTIONCODEI92483757 
       ON FAISIRCORRECTIONCODE ( 
           FKIDFAISIRELIGIBIL, 
           FIELDNAME ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(for [0:m] ) FAISIRCORRECTIONCODE' 
CREATE INDEX FAISIRCORRECTIONCODEFK92483757 
       ON FAISIRCORRECTIONCODE ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIRDataVerifyCodes 
CREATE UNIQUE INDEX UFAISIRDATAVERIFYCODES92479653 
       ON FAISIRDATAVERIFYCODES ( 
           FIELDNAME, 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(for [0:m] ) FAISIRDATAVERIFYCODES' 
CREATE INDEX FAISIRDATAVERIFYCODESF92483747 
       ON FAISIRDATAVERIFYCODES ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIRDomain 
CREATE UNIQUE INDEX UFAISIRDOMAIN_ID_924796570 
       ON FAISIRDOMAIN ( 
           ID ) ;
 
 
-- Main key for Entity - FAISIRDomainValue 
CREATE UNIQUE INDEX UFAISIRDOMAINVALUE_ID_92479665 
       ON FAISIRDOMAINVALUE ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIRDOMAIN(has [0:m] ) FAISIRDOMAINVALUE' 
CREATE INDEX FAISIRDOMAINVALUEFKIDF92484312 
       ON FAISIRDOMAINVALUE ( 
           FK_ID_FAISIRDOMAIN ) ;
 
 
-- Main key for Entity - FAISIREFCInformation 
CREATE UNIQUE INDEX UFAISIREFCINFORMATIONI92479670 
       ON FAISIREFCINFORMATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(for [0:m] ) FAISIREFCINFORMATION' 
CREATE INDEX FAISIREFCINFORMATIONFK92483756 
       ON FAISIREFCINFORMATION ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIREligibility 
CREATE UNIQUE INDEX UFAISIRELIGIBILITY_ID_92479745 
       ON FAISIRELIGIBILITY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIR(has [0:m] ) FAISIRELIGIBILITY' 
CREATE INDEX FAISIRELIGIBILITYFKIDF92483761 
       ON FAISIRELIGIBILITY ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRFinAidHistory 
CREATE UNIQUE INDEX UFAISIRFINAIDHISTORYID92479793 
       ON FAISIRFINAIDHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIR(has a [0:m] ) FAISIRFINAIDHISTORY' 
CREATE INDEX FAISIRFINAIDHISTORYFKI92483759 
       ON FAISIRFINAIDHISTORY ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRHighlightFields 
CREATE UNIQUE INDEX UFAISIRHIGHLIGHTFIELDS92479860 
       ON FAISIRHIGHLIGHTFIELDS ( 
           FIELDNAME, 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(for [0:m] ) FAISIRHIGHLIGHTFIELDS' 
CREATE INDEX FAISIRHIGHLIGHTFIELDSF92483753 
       ON FAISIRHIGHLIGHTFIELDS ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIRImportLog 
CREATE UNIQUE INDEX UFAISIRIMPORTLOG_ID_924798630 
       ON FAISIRIMPORTLOG ( 
           ID ) ;
 
 
-- Main key for Entity - FAISIRLoan 
CREATE UNIQUE INDEX UFAISIRLOAN_ID_924837620 
       ON FAISIRLOAN ( 
           FKIDFAISIRFINAIDHI, 
           SEQUENCENUMBER ) ;
 
 
-- Index for Relationship - 'FAISIRFINAIDHISTORY(for [0:m] ) FAISIRLOAN' 
CREATE INDEX FAISIRLOANFKIDFAISIRFI92483762 
       ON FAISIRLOAN ( 
           FKIDFAISIRFINAIDHI ) ;
 
 
-- Main key for Entity - FAISIRParent 
CREATE UNIQUE INDEX UFAISIRPARENT_ID_924837480 
       ON FAISIRPARENT ( 
           FK_ID_FAISIR ) ;
 
 
-- Index for Relationship - 'FAISIR(has for 1 parent [0:m] ) FAISIRPARENT' 
CREATE INDEX FAISIRPARENTFKIDFAISIR92483748 
       ON FAISIRPARENT ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRPell 
CREATE UNIQUE INDEX UFAISIRPELL_ID_924799460 
       ON FAISIRPELL ( 
           SEQUENCENUMBER, 
           FKIDFAISIRFINAIDHI ) ;
 
 
-- Index for Relationship - 'FAISIRFINAIDHISTORY(is of [0:m] ) FAISIRPELL' 
CREATE INDEX FAISIRPELLFKIDFAISIRFI92483760 
       ON FAISIRPELL ( 
           FKIDFAISIRFINAIDHI ) ;
 
 
-- Main key for Entity - FAISIRRejectOverride 
CREATE UNIQUE INDEX UFAISIRREJECTOVERRIDEI92479959 
       ON FAISIRREJECTOVERRIDE ( 
           REJECTOVERRIDECODE, 
           FK_ID_FAISIR ) ;
 
 
-- Index for Relationship - 'FAISIR(has [0:m] ) FAISIRREJECTOVERRIDE' 
CREATE INDEX FAISIRREJECTOVERRIDEFK92483750 
       ON FAISIRREJECTOVERRIDE ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRRejectReason 
CREATE UNIQUE INDEX UFAISIRREJECTREASON_ID92479962 
       ON FAISIRREJECTREASON ( 
           REJECTCODE, 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Index for Relationship - 'FAISIRELIGIBILITY(for [0:m] ) FAISIRREJECTREASON' 
CREATE INDEX FAISIRREJECTREASONFKID92483752 
       ON FAISIRREJECTREASON ( 
           FKIDFAISIRELIGIBIL ) ;
 
 
-- Main key for Entity - FAISIRSchool 
CREATE UNIQUE INDEX UFAISIRSCHOOL_ID_924799660 
       ON FAISIRSCHOOL ( 
           FEDERALSCHOOLCODE, 
           FK_ID_FAISIR ) ;
 
 
-- Index for Relationship - 'FAISIR(has several (to 6) [0:m] ) FAISIRSCHOOL' 
CREATE INDEX FAISIRSCHOOLFKIDFAISIR92483758 
       ON FAISIRSCHOOL ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRSchoolTrans 
CREATE UNIQUE INDEX UFAISIRSCHOOLTRANS_ID_92479970 
       ON FAISIRSCHOOLTRANS ( 
           SCHOOLNUMBER, 
           FK_ID_FAISIR ) ;
 
 
-- Index for Relationship - 'FAISIR(for [0:m] ) FAISIRSCHOOLTRANS' 
CREATE INDEX FAISIRSCHOOLTRANSFKIDF92483751 
       ON FAISIRSCHOOLTRANS ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRSMart 
CREATE UNIQUE INDEX UFAISIRSMART_ID_924799740 
       ON FAISIRSMART ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIR(has [0:m] ) FAISIRSMART' 
CREATE INDEX FAISIRSMART_FKIDFAISIR92483395 
       ON FAISIRSMART ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FAISIRTeach 
CREATE UNIQUE INDEX UFAISIRTEACH_ID_924799900 
       ON FAISIRTEACH ( 
           ID ) ;
 
 
-- Index for Relationship - 'FAISIR(has [0:m] ) FAISIRTEACH' 
CREATE INDEX FAISIRTEACH_FKIDFAISIR92483259 
       ON FAISIRTEACH ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FinAidAdmin 
CREATE UNIQUE INDEX UFINAIDADMIN_ID_924800040 
       ON FINAIDADMIN ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) FINAIDADMIN' 
CREATE INDEX FINAIDADMINFKIDCOLLEGE92483871 
       ON FINAIDADMIN ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) FINAIDADMIN' 
CREATE INDEX FINAIDADMINFKIDADMINIS92483872 
       ON FINAIDADMIN ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - FinAidAnnualBudgeted 
CREATE UNIQUE INDEX UFINAIDANNUALBUDGETEDI92483869 
       ON FINAIDANNUALBUDGETED ( 
           FK_ID_FINAIDSOURCE, 
           FK_ID_FINAIDADMIN ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(for [0:m] ) FINAIDANNUALBUDGETED' 
CREATE INDEX FINAIDANNUALBUDGETEDFK92483869 
       ON FINAIDANNUALBUDGETED ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'FINAIDADMIN(for [0:m] ) FINAIDANNUALBUDGETED' 
CREATE INDEX FINAIDANNUALBUDGETEDFK92483870 
       ON FINAIDANNUALBUDGETED ( 
           FK_ID_FINAIDADMIN ) ;
 
 
-- Main key for Entity - FinAidAwardAssigned 
CREATE UNIQUE INDEX UFINAIDAWARDASSIGNEDID92480024 
       ON FINAIDAWARDASSIGNED ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDLOAN(has [0:m] ) FINAIDAWARDASSIGNED' 
CREATE INDEX FINAIDAWARDASSIGNEDFKI92483236 
       ON FINAIDAWARDASSIGNED ( 
           FK_ID_FINAIDLOAN ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(contains [0:m] ) FINAIDAWARDASSIGNED' 
CREATE INDEX FINAIDAWARDASSIGNEDFKI92483848 
       ON FINAIDAWARDASSIGNED ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(is the source of funds for [0:m] ) FINAIDAWARDASSIGNED' 
CREATE INDEX FINAIDAWARDASSIGNEDFKI92483868 
       ON FINAIDAWARDASSIGNED ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Main key for Entity - FinAidAwardDisbursement 
CREATE UNIQUE INDEX UFINAIDAWARDDISBURSEME92480046 
       ON FINAIDAWARDDISBURSEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(created [0:m] ) FINAIDAWARDDISBURSEMENT' 
CREATE INDEX FINAIDAWARDDISBURSEMEN92483642 
       ON FINAIDAWARDDISBURSEMENT ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDDISBURSEMENT(swapped to [0:m] ) FINAIDAWARDDISBURSEMENT' 
CREATE INDEX FINAIDAWARDDISBURSEMEN92483644 
       ON FINAIDAWARDDISBURSEMENT ( 
           FKIDFINAIDAWARDDIS ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDASSIGNED(has [0:m] ) FINAIDAWARDDISBURSEMENT' 
CREATE INDEX FINAIDAWARDDISBURSEMEN92483853 
       ON FINAIDAWARDDISBURSEMENT ( 
           FKIDFINAIDAWARDASS ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDPERIOD(for [0:m] ) FINAIDAWARDDISBURSEMENT' 
CREATE INDEX FINAIDAWARDDISBURSEMEN92483862 
       ON FINAIDAWARDDISBURSEMENT ( 
           FKIDFINAIDAWARDPER ) ;
 
 
-- Main key for Entity - FinAidAwardDisbursementHistory 
CREATE UNIQUE INDEX UFINAIDAWARDDISBURSEME92480073 
       ON FINAIDAWARDDISBURSEMENTHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDDISBURSEMENT(has [0:m] ) FINAIDAWARDDISBURSEMENTHISTORY' 
CREATE INDEX FINAIDAWARDDISBURSEMEN92483643 
       ON FINAIDAWARDDISBURSEMENTHISTORY ( 
           FKIDFINAIDAWARDDIS ) ;
 
 
-- Index for Relationship - 'z_USER(has modified [0:m] ) FINAIDAWARDDISBURSEMENTHISTORY' 
CREATE INDEX FINAIDAWARDDISBURSEMEN92483645 
       ON FINAIDAWARDDISBURSEMENTHISTORY ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - FinAidAwardPeriod 
CREATE UNIQUE INDEX UFINAIDAWARDPERIOD_ID_92480081 
       ON FINAIDAWARDPERIOD ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(has anticipated for cohorts [0:m] ) FINAIDAWARDPERIOD' 
CREATE INDEX FINAIDAWARDPERIODFKIDF92483841 
       ON FINAIDAWARDPERIOD ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Index for Relationship - 'FINAIDADMIN(has depending on settings [0:m] ) FINAIDAWARDPERIOD' 
CREATE INDEX FINAIDAWARDPERIODFKIDF92483867 
       ON FINAIDAWARDPERIOD ( 
           FK_ID_FINAIDADMIN ) ;
 
 
-- Main key for Entity - FinAidCalcLookupColumn 
CREATE UNIQUE INDEX UFINAIDCALCLOOKUPCOLUM92480090 
       ON FINAIDCALCLOOKUPCOLUMN ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDCALCLOOKUPROW(has [0:m] ) FINAIDCALCLOOKUPCOLUMN' 
CREATE INDEX FINAIDCALCLOOKUPCOLUMN92483701 
       ON FINAIDCALCLOOKUPCOLUMN ( 
           FKIDFINAIDCALCLOOK ) ;
 
 
-- Main key for Entity - FinAidCalcLookupRow 
CREATE UNIQUE INDEX UFINAIDCALCLOOKUPROWID92480104 
       ON FINAIDCALCLOOKUPROW ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULESET(has [0:m] ) FINAIDCALCLOOKUPROW' 
CREATE INDEX FINAIDCALCLOOKUPROWFKI92483571 
       ON FINAIDCALCLOOKUPROW ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(has [0:m] ) FINAIDCALCLOOKUPROW' 
CREATE INDEX FINAIDCALCLOOKUPROWFKI92483709 
       ON FINAIDCALCLOOKUPROW ( 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Main key for Entity - FinAidCOA 
CREATE UNIQUE INDEX UFINAIDCOA_ID_924801180 
       ON FINAIDCOA ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(can have [0:m] ) FINAIDCOA' 
CREATE INDEX FINAIDCOAFKIDADMINISTR92483789 
       ON FINAIDCOA ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(can qualify for [0:m] ) FINAIDCOA' 
CREATE INDEX FINAIDCOAFKIDFINAIDRUL92483791 
       ON FINAIDCOA ( 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Main key for Entity - FinAidCOAItem 
CREATE UNIQUE INDEX UFINAIDCOAITEM_ID_924801230 
       ON FINAIDCOAITEM ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(can have [0:m] ) FINAIDCOAITEM' 
CREATE INDEX FINAIDCOAITEMFKIDADMIN92483790 
       ON FINAIDCOAITEM ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - FinAidCOAItemAssigned 
CREATE UNIQUE INDEX UFINAIDCOAITEMASSIGNED92480133 
       ON FINAIDCOAITEMASSIGNED ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(is built from [0:m] ) FINAIDCOAITEMASSIGNED' 
CREATE INDEX FINAIDCOAITEMASSIGNEDF92483802 
       ON FINAIDCOAITEMASSIGNED ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Index for Relationship - 'FINAIDCOAITEM(for [0:m] ) FINAIDCOAITEMASSIGNED' 
CREATE INDEX FINAIDCOAITEMASSIGNEDF92483804 
       ON FINAIDCOAITEMASSIGNED ( 
           FK_ID_FINAIDCOAITE ) ;
 
 
-- Index for Relationship - 'FINAIDCOAITEMFORYEAR(for [0:m] ) FINAIDCOAITEMASSIGNED' 
CREATE INDEX FINAIDCOAITEMASSIGNEDF92484437 
       ON FINAIDCOAITEMASSIGNED ( 
           FKIDFINAIDCOAITEMF ) ;
 
 
-- Main key for Entity - FinAidCOAItemForYear 
CREATE UNIQUE INDEX UFINAIDCOAITEMFORYEARI92480140 
       ON FINAIDCOAITEMFORYEAR ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDCOAITEM(has [0:m] ) FINAIDCOAITEMFORYEAR' 
CREATE INDEX FINAIDCOAITEMFORYEARFK92484436 
       ON FINAIDCOAITEMFORYEAR ( 
           FK_ID_FINAIDCOAITE ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) FINAIDCOAITEMFORYEAR' 
CREATE INDEX FINAIDCOAITEMFORYEARFK92484446 
       ON FINAIDCOAITEMFORYEAR ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - FinAidDisbursement 
CREATE UNIQUE INDEX UFINAIDDISBURSEMENT_ID92480147 
       ON FINAIDDISBURSEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(creates [0:m] ) FINAIDDISBURSEMENT' 
CREATE INDEX FINAIDDISBURSEMENTFKID92483646 
       ON FINAIDDISBURSEMENT ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'z_USER(has processed SATran for [0:m] ) FINAIDDISBURSEMENT' 
CREATE INDEX FINAIDDISBURSEMENTFK0292483647 
       ON FINAIDDISBURSEMENT ( 
           FK_ID_Z_USER02 ) ;
 
 
-- Main key for Entity - FinAidISIRLayout 
CREATE UNIQUE INDEX UFINAIDISIRLAYOUT_ID_924801570 
       ON FINAIDISIRLAYOUT ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDADMIN(for [0:m] ) FINAIDISIRLAYOUT' 
CREATE INDEX FINAIDISIRLAYOUTFKIDFI92483764 
       ON FINAIDISIRLAYOUT ( 
           FK_ID_FINAIDADMIN ) ;
 
 
-- Main key for Entity - FinAidISIRLayoutAttribute 
CREATE UNIQUE INDEX UFINAIDISIRLAYOUTATTRI92480163 
       ON FINAIDISIRLAYOUTATTRIBUTE ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDISIRLAYOUT(has [0:m] ) FINAIDISIRLAYOUTATTRIBUTE' 
CREATE INDEX FINAIDISIRLAYOUTATTRIB92483763 
       ON FINAIDISIRLAYOUTATTRIBUTE ( 
           FKIDFINAIDISIRLAYO ) ;
 
 
-- Main key for Entity - FinAidISIRValueDescription 
CREATE UNIQUE INDEX UFINAIDISIRVALUEDESCRI92480181 
       ON FINAIDISIRVALUEDESCRIPTION ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDISIRLAYOUTATTRIBUTE(can have [0:m] ) FINAIDISIRVALUEDESCRIPTION' 
CREATE INDEX FINAIDISIRVALUEDESCRIP92483744 
       ON FINAIDISIRVALUEDESCRIPTION ( 
           FKIDFINAIDISIRLAYO ) ;
 
 
-- Main key for Entity - FinAidLenderGuarantor 
CREATE UNIQUE INDEX UFINAIDLENDERGUARANTOR92480187 
       ON FINAIDLENDERGUARANTOR ( 
           ID ) ;
 
 
-- Main key for Entity - FinAidLoan 
CREATE UNIQUE INDEX UFINAIDLOAN_ID_924801990 
       ON FINAIDLOAN ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(is current for [0:m] ) FINAIDLOAN' 
CREATE INDEX FINAIDLOANFKIDFINAIDPR92483233 
       ON FINAIDLOAN ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Index for Relationship - 'z_USER(for [0:m] ) FINAIDLOAN' 
CREATE INDEX FINAIDLOAN_FK_ID_ZUSER92483234 
       ON FINAIDLOAN ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) FINAIDLOAN' 
CREATE INDEX FINAIDLOAN_FKIDSTUDENT92483235 
       ON FINAIDLOAN ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'FINAIDLENDERGUARANTOR(has [0:m] ) FINAIDLOAN' 
CREATE INDEX FINAIDLOANFKIDFINAIDLE92483237 
       ON FINAIDLOAN ( 
           FKIDFINAIDLENDERGU ) ;
 
 
-- Main key for Entity - FinAidProfile 
CREATE UNIQUE INDEX UFINAIDPROFILE_ID_924803090 
       ON FINAIDPROFILE ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDADMIN(has  [0:m] ) FINAIDPROFILE' 
CREATE INDEX FINAIDPROFILEFKIDFINAI92483803 
       ON FINAIDPROFILE ( 
           FK_ID_FINAIDADMIN ) ;
 
 
-- Index for Relationship - 'FINAIDTRACK(has [0:m] ) FINAIDPROFILE' 
CREATE INDEX FINAIDPROFILEFKIDFINAI92483808 
       ON FINAIDPROFILE ( 
           FK_ID_FINAIDTRACK ) ;
 
 
-- Index for Relationship - 'PERSON(can have [0:m] ) FINAIDPROFILE' 
CREATE INDEX FINAIDPROFILEFKIDPERSO92483850 
       ON FINAIDPROFILE ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'FAISIR(is current for (max card 1) [0:m] ) FINAIDPROFILE' 
CREATE INDEX FINAIDPROFILEFKIDFAISI92483852 
       ON FINAIDPROFILE ( 
           FK_ID_FAISIR ) ;
 
 
-- Main key for Entity - FinAidProfileRequirement 
CREATE UNIQUE INDEX UFINAIDPROFILEREQUIREM92480350 
       ON FINAIDPROFILEREQUIREMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(has [0:m] ) FINAIDPROFILEREQUIREMENT' 
CREATE INDEX FINAIDPROFILEREQUIREME92484440 
       ON FINAIDPROFILEREQUIREMENT ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Index for Relationship - 'FINAIDREQUIREMENT(has [0:m] ) FINAIDPROFILEREQUIREMENT' 
CREATE INDEX FINAIDPROFILEREQUIREME92484441 
       ON FINAIDPROFILEREQUIREMENT ( 
           FKIDFINAIDREQUIREM ) ;
 
 
-- Main key for Entity - FinAidRequirement 
CREATE UNIQUE INDEX UFINAIDREQUIREMENT_ID_92480359 
       ON FINAIDREQUIREMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(for [0:m] ) FINAIDREQUIREMENT' 
CREATE INDEX FINAIDREQUIREMENTFKIDA92483810 
       ON FINAIDREQUIREMENT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) FINAIDREQUIREMENT' 
CREATE INDEX FINAIDREQUIREMENTFKIDC92484442 
       ON FINAIDREQUIREMENT ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - FinAidRequirementMet 
CREATE UNIQUE INDEX UFINAIDREQUIREMENTMETI92480375 
       ON FINAIDREQUIREMENTMET ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDREQUIREMENT(has [0:m] ) FINAIDREQUIREMENTMET' 
CREATE INDEX FINAIDREQUIREMENTMETFK92483805 
       ON FINAIDREQUIREMENTMET ( 
           FKIDFINAIDREQUIREM ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(for [0:m] ) FINAIDREQUIREMENTMET' 
CREATE INDEX FINAIDREQUIREMENTMETFK92483806 
       ON FINAIDREQUIREMENTMET ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Main key for Entity - FinAidRule 
CREATE UNIQUE INDEX UFINAIDRULE_ID_924803800 
       ON FINAIDRULE ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(can have [0:m] ) FINAIDRULE' 
CREATE INDEX FINAIDRULEFKIDADMINIST92483842 
       ON FINAIDRULE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - FinAidRuleSet 
CREATE UNIQUE INDEX UFINAIDRULESET_ID_924804030 
       ON FINAIDRULESET ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) FINAIDRULESET' 
CREATE INDEX FINAIDRULESETFKIDADMIN92483801 
       ON FINAIDRULESET ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - FinAidSource 
CREATE UNIQUE INDEX UFINAIDSOURCE_ID_924804120 
       ON FINAIDSOURCE ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(can qualify for [0:m] ) FINAIDSOURCE' 
CREATE INDEX FINAIDSOURCEFKIDFINAID92483800 
       ON FINAIDSOURCE ( 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Index for Relationship - 'SCHOLARSHIP(can be a [0:1] ) FINAIDSOURCE' 
CREATE INDEX FINAIDSOURCEFKIDSCHOLA92483824 
       ON FINAIDSOURCE ( 
           FK_ID_SCHOLARSHIP ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(used by (max card 1) [0:m] ) FINAIDSOURCE' 
CREATE INDEX FINAIDSOURCEFKIDSTORED92483826 
       ON FINAIDSOURCE ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(for [0:m] ) FINAIDSOURCE' 
CREATE INDEX FINAIDSOURCEFKIDSATRAN92483831 
       ON FINAIDSOURCE ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) FINAIDSOURCE' 
CREATE INDEX FINAIDSOURCEFKIDADMINI92483836 
       ON FINAIDSOURCE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - FinAidSourceHistorical 
CREATE UNIQUE INDEX UFINAIDSOURCEHISTORICA92483660 
       ON FINAIDSOURCEHISTORICAL ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(for [0:1] ) FINAIDSOURCEHISTORICAL' 
CREATE INDEX FINAIDSOURCEHISTORICAL92483660 
       ON FINAIDSOURCEHISTORICAL ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Main key for Entity - FinAidTrack 
CREATE UNIQUE INDEX UFINAIDTRACK_ID_924804690 
       ON FINAIDTRACK ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(for [0:m] ) FINAIDTRACK' 
CREATE INDEX FINAIDTRACKFKIDADMINIS92483807 
       ON FINAIDTRACK ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - FinAidTrackRequirement 
CREATE UNIQUE INDEX UFINAIDTRACKREQUIREMEN92483811 
       ON FINAIDTRACKREQUIREMENT ( 
           FKIDFINAIDREQUIREM, 
           FK_ID_FINAIDTRACK ) ;
 
 
-- Index for Relationship - 'FINAIDTRACK(has [0:m] ) FINAIDTRACKREQUIREMENT' 
CREATE INDEX FINAIDTRACKREQUIREMENT92483809 
       ON FINAIDTRACKREQUIREMENT ( 
           FK_ID_FINAIDTRACK ) ;
 
 
-- Index for Relationship - 'FINAIDREQUIREMENT(has [0:m] ) FINAIDTRACKREQUIREMENT' 
CREATE INDEX FINAIDTRACKREQUIREMENT92483811 
       ON FINAIDTRACKREQUIREMENT ( 
           FKIDFINAIDREQUIREM ) ;
 
 
-- Main key for Entity - FinalExamSchedule 
CREATE UNIQUE INDEX UFINALEXAMSCHEDULE_ID_92480480 
       ON FINALEXAMSCHEDULE ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(for [0:m] ) FINALEXAMSCHEDULE' 
CREATE INDEX FINALEXAMSCHEDULEFKIDC92483516 
       ON FINALEXAMSCHEDULE ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - FinancialAccount 
CREATE UNIQUE INDEX UFINANCIALACCOUNT_ID_924804890 
       ON FINANCIALACCOUNT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(maintains [0:m] ) FINANCIALACCOUNT' 
CREATE INDEX FINANCIALACCOUNTFKIDOR92483484 
       ON FINANCIALACCOUNT ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is default  [0:m] ) FINANCIALACCOUNT' 
CREATE INDEX FINANCIALACCOUNTFKIDGL92483486 
       ON FINANCIALACCOUNT ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Main key for Entity - FinancialAccountStatement 
CREATE UNIQUE INDEX UFINANCIALACCOUNTSTATE92480504 
       ON FINANCIALACCOUNTSTATEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINANCIALACCOUNT(has  [0:m] ) FINANCIALACCOUNTSTATEMENT' 
CREATE INDEX FINANCIALACCOUNTSTATEM92483482 
       ON FINANCIALACCOUNTSTATEMENT ( 
           FKIDFINANCIALACCOU ) ;
 
 
-- Main key for Entity - FinancialAccountTransaction 
CREATE UNIQUE INDEX UFINANCIALACCOUNTTRANS92480519 
       ON FINANCIALACCOUNTTRANSACTION ( 
           ID ) ;
 
 
-- Index for Relationship - 'DEPOSITGROUPING(becomes a [0:1] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92483481 
       ON FINANCIALACCOUNTTRANSACTION ( 
           BECOMESIDDEPOSITGR ) ;
 
 
-- Index for Relationship - 'DEPOSITGROUPING(groups [0:m] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92483483 
       ON FINANCIALACCOUNTTRANSACTION ( 
           GROUPSIDDEPOSITGRO ) ;
 
 
-- Index for Relationship - 'FINANCIALACCOUNT(has [0:m] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92483485 
       ON FINANCIALACCOUNTTRANSACTION ( 
           FKIDFINANCIALACCOU ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is for [0:m] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92483504 
       ON FINANCIALACCOUNTTRANSACTION ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'VENDOR(receives payment for [0:m] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92483511 
       ON FINANCIALACCOUNTTRANSACTION ( 
           FK_ID_VENDOR ) ;
 
 
-- Index for Relationship - 'FINANCIALACCOUNTSTATEMENT(is reconciles [0:m] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRAN0292483512 
       ON FINANCIALACCOUNTTRANSACTION ( 
           FKIDFINANCIALACC02 ) ;
 
 
-- Index for Relationship - 'PERSON(received [0:m] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92483513 
       ON FINANCIALACCOUNTTRANSACTION ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTTRANSAPPLIED(can have [0:1] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92483515 
       ON FINANCIALACCOUNTTRANSACTION ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(has title 4 refund [0:m] ) FINANCIALACCOUNTTRANSACTION' 
CREATE INDEX FINANCIALACCOUNTTRANSA92484443 
       ON FINANCIALACCOUNTTRANSACTION ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Main key for Entity - FinancialAidConstants 
CREATE UNIQUE INDEX UFINANCIALAIDCONSTANTS92480535 
       ON FINANCIALAIDCONSTANTS ( 
           ID ) ;
 
 
-- Main key for Entity - FinancialApprovalRole 
CREATE UNIQUE INDEX UFINANCIALAPPROVALROLE92480541 
       ON FINANCIALAPPROVALROLE ( 
           ID ) ;
 
 
-- Index for Relationship - 'HOST(has [0:m] ) FINANCIALAPPROVALROLE' 
CREATE INDEX FINANCIALAPPROVALROLEF92483278 
       ON FINANCIALAPPROVALROLE ( 
           FK_HOSTID_HOST ) ;
 
 
-- Index for Relationship - 'FINANCIALAPPROVALROLE(approves [0:m] ) FINANCIALAPPROVALROLE' 
CREATE INDEX FINANCIALAPPROVALROLEF92483289 
       ON FINANCIALAPPROVALROLE ( 
           FKIDFINANCIALAPPRO ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) FINANCIALAPPROVALROLE' 
CREATE INDEX FINANCIALAPPROVALROLEF92483290 
       ON FINANCIALAPPROVALROLE ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - FindList 
CREATE UNIQUE INDEX UFINDLIST_ID_924805470 
       ON FINDLIST ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(for [0:m] ) FINDLIST' 
CREATE INDEX FINDLIST_FK_ID_Z_USER_92483694 
       ON FINDLIST ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(for [0:m] ) FINDLIST' 
CREATE INDEX FINDLISTFKIDADMINISTRA92483695 
       ON FINDLIST ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(is dynamic def for [0:m] ) FINDLIST' 
CREATE INDEX FINDLISTFKIDSTOREDQUER92484135 
       ON FINDLIST ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Main key for Entity - FindListItem 
CREATE UNIQUE INDEX UFINDLISTITEM_ID_924805580 
       ON FINDLISTITEM ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRYDETAIL(has [0:m] ) FINDLISTITEM' 
CREATE INDEX FINDLISTITEMFKIDGLJOUR92483578 
       ON FINDLISTITEM ( 
           FKIDGLJOURNALENTRY ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(for [0:m] ) FINDLISTITEM' 
CREATE INDEX FINDLISTITEMFKIDGLJOUR92483692 
       ON FINDLISTITEM ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Index for Relationship - 'FINDLIST(has [0:m] ) FINDLISTITEM' 
CREATE INDEX FINDLISTITEMFKIDFINDLI92483693 
       ON FINDLISTITEM ( 
           FK_ID_FINDLIST ) ;
 
 
-- Main key for Entity - FinRegEducationalAllowance 
CREATE UNIQUE INDEX UFINREGEDUCATIONALALLO92480561 
       ON FINREGEDUCATIONALALLOWANCE ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) FINREGEDUCATIONALALLOWANCE' 
CREATE INDEX FINREGEDUCATIONALALLOW92484444 
       ON FINREGEDUCATIONALALLOWANCE ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - Folder 
CREATE UNIQUE INDEX UFOLDER_ID_924805670 
       ON FOLDER ( 
           ID ) ;
-- Main key for Entity - Folder 
CREATE INDEX FOLDER_NAME_924805680 
       ON FOLDER ( 
           NAME ) ;
 
 
-- Index for Relationship - 'COMMUNICATIONPLAN(has first level folder [0:m] ) FOLDER' 
CREATE INDEX FOLDERFKIDCOMMUNICATIO92484272 
       ON FOLDER ( 
           FKIDCOMMUNICATIONP ) ;
 
 
-- Index for Relationship - 'COMMUNICATIONPLAN(is organized as [0:m] ) FOLDER' 
CREATE INDEX FOLDERFKIDCOMMUNICAT0292484273 
       ON FOLDER ( 
           FKIDCOMMUNICATIO02 ) ;
 
 
-- Index for Relationship - 'FOLDER(is a parent of [0:m] ) FOLDER' 
CREATE INDEX FOLDER_FK_ID_FOLDER_924842750 
       ON FOLDER ( 
           FK_ID_FOLDER ) ;
 
 
-- Main key for Entity - ForeignCourse 
CREATE UNIQUE INDEX UFOREIGNCOURSE_ID_924805740 
       ON FOREIGNCOURSE ( 
           ID ) ;
 
 
-- Index for Relationship - 'SCHOOL(has [0:m] ) FOREIGNCOURSE' 
CREATE INDEX FOREIGNCOURSEFKIDSCHOO92483723 
       ON FOREIGNCOURSE ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'COURSE(has equivalency [0:m] ) FOREIGNCOURSE' 
CREATE INDEX FOREIGNCOURSEFKIDCOURS92483724 
       ON FOREIGNCOURSE ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(approves [0:m] ) FOREIGNCOURSE' 
CREATE INDEX FOREIGNCOURSEFKIDDEPAR92483725 
       ON FOREIGNCOURSE ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has created [0:m] ) FOREIGNCOURSE' 
CREATE INDEX FOREIGNCOURSEFKIDADMIN92483726 
       ON FOREIGNCOURSE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'z_USER(has created [0:m] ) FOREIGNCOURSE' 
CREATE INDEX FOREIGNCOURSEFKIDZUSER92483728 
       ON FOREIGNCOURSE ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - Fund 
CREATE UNIQUE INDEX UFUND_ID_924805860 
       ON FUND ( 
           ID ) ;
-- Main key for Entity - Fund 
CREATE INDEX FUND_RESTRICTEDTYPE_924805900 
       ON FUND ( 
           RESTRICTEDTYPE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is asset (cash) account [0:m] ) FUND' 
CREATE INDEX FUND_FK_IDGLCHARTENTRY92484203 
       ON FUND ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is the fund account [0:m] ) FUND' 
CREATE INDEX FUNDFKFUNDIDGLCHARTENT92484204 
       ON FUND ( 
           FKFUNDIDGLCHARTENT ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is the stock account for [0:m] ) FUND' 
CREATE INDEX FUNDFKSTOCKIDGLCHARTEN92484205 
       ON FUND ( 
           FKSTOCKIDGLCHARTEN ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(pledge receivable for [0:m] ) FUND' 
CREATE INDEX FUNDFKPLEDGEIDGLCHARTE92484206 
       ON FUND ( 
           FKPLEDGEIDGLCHARTE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is the payroll account for [0:m] ) FUND' 
CREATE INDEX FUNDFKPAYIDGLCHARTENTR92484207 
       ON FUND ( 
           FKPAYIDGLCHARTENTR ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is the other account for [0:m] ) FUND' 
CREATE INDEX FUNDFKOTHERIDGLCHARTEN92484208 
       ON FUND ( 
           FKOTHERIDGLCHARTEN ) ;
 
 
-- Index for Relationship - 'DONOR(is the main contact for [0:m] ) FUND' 
CREATE INDEX FUND_FK_ID_DONOR_924843340 
       ON FUND ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'DONOR(is the secondary contact for [0:m] ) FUND' 
CREATE INDEX FUND_FK_ID_DONOR02_924843350 
       ON FUND ( 
           FK_ID_DONOR02 ) ;
 
 
-- Main key for Entity - FundAnnualAmount 
CREATE UNIQUE INDEX UFUNDANNUALAMOUNT_ID_924806150 
       ON FUNDANNUALAMOUNT ( 
           ID ) ;
 
 
-- Index for Relationship - 'FUND(has [0:m] ) FUNDANNUALAMOUNT' 
CREATE INDEX FUNDANNUALAMOUNTFKIDFU92483391 
       ON FUNDANNUALAMOUNT ( 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(has  [0:m] ) FUNDANNUALAMOUNT' 
CREATE INDEX FUNDANNUALAMOUNTFKIDGL92483392 
       ON FUNDANNUALAMOUNT ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Main key for Entity - FYR_Enrollment 
CREATE UNIQUE INDEX UFYR_ENROLLMENT_ID_924806220 
       ON FYR_ENROLLMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'FYREPORTSUMMARY(has [0:m] ) FYR_ENROLLMENT' 
CREATE INDEX FYRENROLLMENTFKIDFYREP92483351 
       ON FYR_ENROLLMENT ( 
           FKIDFYREPORTSUMMAR ) ;
 
 
-- Main key for Entity - FYReportClassSummary 
CREATE UNIQUE INDEX UFYREPORTCLASSSUMMARYI92480693 
       ON FYREPORTCLASSSUMMARY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FYREPORTSUMMARY(for [0:1] ) FYREPORTCLASSSUMMARY' 
CREATE INDEX FYREPORTCLASSSUMMARYFK92483328 
       ON FYREPORTCLASSSUMMARY ( 
           FKIDFYREPORTSUMMAR ) ;
 
 
-- Main key for Entity - FYReportProspectSummary 
CREATE UNIQUE INDEX UFYREPORTPROSPECTSUMMA92480710 
       ON FYREPORTPROSPECTSUMMARY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FYREPORTSUMMARY(has [0:1] ) FYREPORTPROSPECTSUMMARY' 
CREATE INDEX FYREPORTPROSPECTSUMMAR92483330 
       ON FYREPORTPROSPECTSUMMARY ( 
           FKIDFYREPORTSUMMAR ) ;
 
 
-- Main key for Entity - FYReportSummary 
CREATE UNIQUE INDEX UFYREPORTSUMMARY_ID_924808020 
       ON FYREPORTSUMMARY ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(for [0:1] ) FYREPORTSUMMARY' 
CREATE INDEX FYREPORTSUMMARYFKIDGLF92483352 
       ON FYREPORTSUMMARY ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Main key for Entity - FYRSFA_Category 
CREATE UNIQUE INDEX UFYRSFA_CATEGORY_ID_924808480 
       ON FYRSFA_CATEGORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FYREPORTSUMMARY(has [0:m] ) FYRSFA_CATEGORY' 
CREATE INDEX FYRSFACATEGORYFKIDFYRE92483353 
       ON FYRSFA_CATEGORY ( 
           FKIDFYREPORTSUMMAR ) ;
 
 
-- Main key for Entity - GenEdRequirement 
CREATE UNIQUE INDEX UGENEDREQUIREMENT_ID_924808990 
       ON GENEDREQUIREMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) GENEDREQUIREMENT' 
CREATE INDEX GENEDREQUIREMENTFKIDAD92483591 
       ON GENEDREQUIREMENT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - Gift 
CREATE UNIQUE INDEX UGIFT_ID_924809060 
       ON GIFT ( 
           ID ) ;
-- Main key for Entity - Gift 
CREATE INDEX GIFT_GIFTDATE_924809080 
       ON GIFT ( 
           GIFTDATE ) ;
-- Main key for Entity - Gift 
CREATE INDEX GIFT_POSTED_924809090 
       ON GIFT ( 
           POSTED ) ;
-- Main key for Entity - Gift 
CREATE INDEX GIFT_AMOUNT_924809110 
       ON GIFT ( 
           AMOUNT ) ;
-- Main key for Entity - Gift 
CREATE INDEX GIFT_MATCHINGGIFT_924809130 
       ON GIFT ( 
           GIFTHASMATCHINGGIF ) ;
 
 
-- Index for Relationship - 'DEVPROJECT(can be tied to  [0:m] ) GIFT' 
CREATE INDEX GIFT_FK_ID_DEVPROJECT_92484210 
       ON GIFT ( 
           FK_ID_DEVPROJECT ) ;
 
 
-- Index for Relationship - 'FUND(receives income from [0:m] ) GIFT' 
CREATE INDEX GIFT_FK_ID_FUND_924843470 
       ON GIFT ( 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'DONATION(can be allocated to [1:m] ) GIFT' 
CREATE INDEX GIFT_FK_ID_DONATION_924843520 
       ON GIFT ( 
           FK_ID_DONATION ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(debit for [0:m] ) GIFT' 
CREATE INDEX GIFTDEBITIDGLCHARTENTR92484366 
       ON GIFT ( 
           DEBITIDGLCHARTENTR ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(credit for [0:m] ) GIFT' 
CREATE INDEX GIFTCREDITIDGLCHARTENT92484367 
       ON GIFT ( 
           CREDITIDGLCHARTENT ) ;
 
 
-- Index for Relationship - 'EVENT(can be the stimulas for [0:m] ) GIFT' 
CREATE INDEX GIFT_FK_ID_EVENT_924843700 
       ON GIFT ( 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'PLEDGE(promise is fulfilled by [0:m] ) GIFT' 
CREATE INDEX GIFT_FK_ID_PLEDGE_924843710 
       ON GIFT ( 
           FK_ID_PLEDGE ) ;
 
 
-- Main key for Entity - GL_CC_BudgeNote 
CREATE UNIQUE INDEX UGL_CC_BUDGENOTE_ID_924809260 
       ON GL_CC_BUDGENOTE ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) GL_CC_BUDGENOTE' 
CREATE INDEX GLCCBUDGENOTEFKIDGLCOS92483349 
       ON GL_CC_BUDGENOTE ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(has [0:m] ) GL_CC_BUDGENOTE' 
CREATE INDEX GLCCBUDGENOTEFKIDGLFIS92483350 
       ON GL_CC_BUDGENOTE ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Main key for Entity - GLAccountingPeriod 
CREATE UNIQUE INDEX UGLACCOUNTINGPERIOD_ID92480932 
       ON GLACCOUNTINGPERIOD ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(has [0:m] ) GLACCOUNTINGPERIOD' 
CREATE INDEX GLACCOUNTINGPERIODFKID92484430 
       ON GLACCOUNTINGPERIOD ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(is closing fund for (max card 1) [0:m] ) GLACCOUNTINGPERIOD' 
CREATE INDEX GLACCOUNTINGPERIODFKID92484431 
       ON GLACCOUNTINGPERIOD ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Main key for Entity - GLAccountingPeriodTotals 
CREATE UNIQUE INDEX UGLACCOUNTINGPERIODTOT92480941 
       ON GLACCOUNTINGPERIODTOTALS ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(hold values for [0:m] ) GLACCOUNTINGPERIODTOTALS' 
CREATE INDEX GLACCOUNTINGPERIODTOTA92484402 
       ON GLACCOUNTINGPERIODTOTALS ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLACCOUNTINGPERIOD(has values thru [0:m] ) GLACCOUNTINGPERIODTOTALS' 
CREATE INDEX GLACCOUNTINGPERIODTOTA92484403 
       ON GLACCOUNTINGPERIODTOTALS ( 
           FKIDGLACCOUNTINGPE ) ;
 
 
-- Main key for Entity - GLAccountingProfile 
CREATE UNIQUE INDEX UGLACCOUNTINGPROFILEID92480947 
       ON GLACCOUNTINGPROFILE ( 
           ID ) ;
 
 
-- Index for Relationship - 'HOST(has  [0:m] ) GLACCOUNTINGPROFILE' 
CREATE INDEX GLACCOUNTINGPROFILEFKH92483956 
       ON GLACCOUNTINGPROFILE ( 
           FK_HOSTID_HOST ) ;
 
 
-- Main key for Entity - GLAccounts 
CREATE UNIQUE INDEX UGLACCOUNTS_ID_924809540 
       ON GLACCOUNTS ( 
           ID ) ;
-- Main key for Entity - GLAccounts 
CREATE INDEX GLACCOUNTSACCOUNTNUMBE92480955 
       ON GLACCOUNTS ( 
           ACCOUNTNUMBER ) ;
 
 
-- Index for Relationship - 'GLCHARTOFACCOUNTS(has [0:m] ) GLACCOUNTS' 
CREATE INDEX GLACCOUNTSFKIDGLCHARTO92484416 
       ON GLACCOUNTS ( 
           FKIDGLCHARTOFACCOU ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(can have sub accounts [0:m] ) GLACCOUNTS' 
CREATE INDEX GLACCOUNTSFKIDGLACCOUN92484429 
       ON GLACCOUNTS ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Main key for Entity - GLAccountTransApplied 
CREATE UNIQUE INDEX UGLACCOUNTTRANSAPPLIED92480968 
       ON GLACCOUNTTRANSAPPLIED ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRECEIPT(has [0:m] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDF92483473 
       ON GLACCOUNTTRANSAPPLIED ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(is created for [0:1] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDF92483560 
       ON GLACCOUNTTRANSAPPLIED ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(for CREDIT [0:m] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDC92483562 
       ON GLACCOUNTTRANSAPPLIED ( 
           CREDITIDGLCHARTENT ) ;
 
 
-- Index for Relationship - 'BATCHEDITLIST(has a list of [0:m] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDF92483563 
       ON GLACCOUNTTRANSAPPLIED ( 
           FK_ID_BATCHEDITLIS ) ;
 
 
-- Index for Relationship - 'z_USER(adds  [0:m] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDF92483564 
       ON GLACCOUNTTRANSAPPLIED ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDF92483565 
       ON GLACCOUNTTRANSAPPLIED ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'DEPOSITGROUPING(is a grouped as  [0:m] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDF92483566 
       ON GLACCOUNTTRANSAPPLIED ( 
           FKIDDEPOSITGROUPIN ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(for DEBIT [0:m] ) GLACCOUNTTRANSAPPLIED' 
CREATE INDEX GLACCOUNTTRANSAPPLIEDD92483568 
       ON GLACCOUNTTRANSAPPLIED ( 
           DEBITIDGLCHARTENTR ) ;
 
 
-- Main key for Entity - GLAnnualBudgetDetail 
CREATE UNIQUE INDEX UGLANNUALBUDGETDETAILI92480983 
       ON GLANNUALBUDGETDETAIL ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLBUDGETITEM(has [0:m] ) GLANNUALBUDGETDETAIL' 
CREATE INDEX GLANNUALBUDGETDETAILFK92483323 
       ON GLANNUALBUDGETDETAIL ( 
           FK_ID_GLBUDGETITEM ) ;
 
 
-- Main key for Entity - GLAnnualBudgetReview 
CREATE UNIQUE INDEX UGLANNUALBUDGETREVIEWI92480988 
       ON GLANNUALBUDGETREVIEW ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLPROJECTCOMPONENTBUDGET(has [0:m] ) GLANNUALBUDGETREVIEW' 
CREATE INDEX GLANNUALBUDGETREVIEWFK92483258 
       ON GLANNUALBUDGETREVIEW ( 
           FKIDGLPROJECTCOMPO ) ;
 
 
-- Index for Relationship - 'GLBUDGETITEM(has [0:m] ) GLANNUALBUDGETREVIEW' 
CREATE INDEX GLANNUALBUDGETREVIEWFK92483260 
       ON GLANNUALBUDGETREVIEW ( 
           FK_ID_GLBUDGETITEM ) ;
 
 
-- Main key for Entity - GLBudget 
CREATE UNIQUE INDEX UGLBUDGET_ID_924809920 
       ON GLBUDGET ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(can have [0:m] ) GLBUDGET' 
CREATE INDEX GLBUDGETFKIDGLFISCALYE92483493 
       ON GLBUDGET ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(is default for [0:1] ) GLBUDGET' 
CREATE INDEX GLBUDGETDEFIDGLFISCALY92483494 
       ON GLBUDGET ( 
           DEFID_GLFISCALYEAR ) ;
 
 
-- Index for Relationship - 'STANDARDSALARYDATA(is used by [0:m] ) GLBUDGET' 
CREATE INDEX GLBUDGETFKIDSTANDARDSA92483550 
       ON GLBUDGET ( 
           FKIDSTANDARDSALARY ) ;
 
 
-- Main key for Entity - GLBudgetDistRule 
CREATE UNIQUE INDEX UGLBUDGETDISTRULE_ID_924810080 
       ON GLBUDGETDISTRULE ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(has budget rule of [0:1] ) GLBUDGETDISTRULE' 
CREATE INDEX GLBUDGETDISTRULEFKIDGL92483487 
       ON GLBUDGETDISTRULE ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Main key for Entity - GLBudgetItem 
CREATE UNIQUE INDEX UGLBUDGETITEM_ID_924810260 
       ON GLBUDGETITEM ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLBUDGET(has annualized [0:m] ) GLBUDGETITEM' 
CREATE INDEX GLBUDGETITEMANNIDGLBUD92483488 
       ON GLBUDGETITEM ( 
           ANNID_GLBUDGET ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is annualized [0:m] ) GLBUDGETITEM' 
CREATE INDEX GLBUDGETITEMFKIDGLCHAR92483491 
       ON GLBUDGETITEM ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLBUDGET(has [0:m] ) GLBUDGETITEM' 
CREATE INDEX GLBUDGETITEMFKIDGLBUDG92483495 
       ON GLBUDGETITEM ( 
           FK_ID_GLBUDGET ) ;
 
 
-- Index for Relationship - 'GLACCOUNTINGPERIODTOTALS(has [0:m] ) GLBUDGETITEM' 
CREATE INDEX GLBUDGETITEMFKIDGLACCO92483496 
       ON GLBUDGETITEM ( 
           FKIDGLACCOUNTINGPE ) ;
 
 
-- Main key for Entity - GLChartDefault 
CREATE UNIQUE INDEX UGLCHARTDEFAULT_ID_924810320 
       ON GLCHARTDEFAULT ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(has [0:m] ) GLCHARTDEFAULT' 
CREATE INDEX GLCHARTDEFAULTFKIDGLCH92484404 
       ON GLCHARTDEFAULT ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLCHARTOFACCOUNTS(has [0:m] ) GLCHARTDEFAULT' 
CREATE INDEX GLCHARTDEFAULTFKIDGLCH92484405 
       ON GLCHARTDEFAULT ( 
           FKIDGLCHARTOFACCOU ) ;
 
 
-- Main key for Entity - GLChartEntry 
CREATE UNIQUE INDEX UGLCHARTENTRY_ID_924810360 
       ON GLCHARTENTRY ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is clearing account of [0:m] ) GLCHARTENTRY' 
CREATE INDEX GLCHARTENTRYFKCLEARSID92483477 
       ON GLCHARTENTRY ( 
           FKCLEARSIDGLCHARTE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is closing fund rollup from [0:m] ) GLCHARTENTRY' 
CREATE INDEX GLCHARTENTRYFKROLLUPID92483478 
       ON GLCHARTENTRY ( 
           FKROLLUPIDGLCHARTE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is growth fund for (max card 1) [0:m] ) GLCHARTENTRY' 
CREATE INDEX GLCHARTENTRYFKGRIDGLCH92483479 
       ON GLCHARTENTRY ( 
           FK_GRIDGLCHARTENTR ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(for [0:m] ) GLCHARTENTRY' 
CREATE INDEX GLCHARTENTRYFKIDGLCOST92484410 
       ON GLCHARTENTRY ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'GLFUND(has [0:m] ) GLCHARTENTRY' 
CREATE INDEX GLCHARTENTRYFKIDGLFUND92484411 
       ON GLCHARTENTRY ( 
           FK_ID_GLFUND ) ;
 
 
-- Index for Relationship - 'GLCHARTOFACCOUNTS(for [0:m] ) GLCHARTENTRY' 
CREATE INDEX GLCHARTENTRYFKIDGLCHAR92484412 
       ON GLCHARTENTRY ( 
           FKIDGLCHARTOFACCOU ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(has [0:m] ) GLCHARTENTRY' 
CREATE INDEX GLCHARTENTRYFKIDGLACCO92484413 
       ON GLCHARTENTRY ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Main key for Entity - GLChartOfAccounts 
CREATE UNIQUE INDEX UGLCHARTOFACCOUNTS_ID_92481048 
       ON GLCHARTOFACCOUNTS ( 
           ID ) ;
 
 
-- Main key for Entity - GLCostCenter 
CREATE UNIQUE INDEX UGLCOSTCENTER_ID_924810540 
       ON GLCOSTCENTER ( 
           ID ) ;
-- Main key for Entity - GLCostCenter 
CREATE INDEX GLCOSTCENTER_CODE_924810550 
       ON GLCOSTCENTER ( 
           CODE ) ;
 
 
-- Index for Relationship - 'z_USER(is vp responsible for [0:m] ) GLCOSTCENTER' 
CREATE INDEX GLCOSTCENTER_FKIDZUSER92483267 
       ON GLCOSTCENTER ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'z_USER(is responsible for [0:m] ) GLCOSTCENTER' 
CREATE INDEX GLCOSTCENTER_RUIDZUSER92483268 
       ON GLCOSTCENTER ( 
           RUID_Z_USER ) ;
 
 
-- Index for Relationship - 'DIVISION(has [0:m] ) GLCOSTCENTER' 
CREATE INDEX GLCOSTCENTERFKIDDIVISI92483406 
       ON GLCOSTCENTER ( 
           FK_ID_DIVISION ) ;
 
 
-- Main key for Entity - GLCostCenterBudget 
CREATE UNIQUE INDEX UGLCOSTCENTERBUDGET_ID92481060 
       ON GLCOSTCENTERBUDGET ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) GLCOSTCENTERBUDGET' 
CREATE INDEX GLCOSTCENTERBUDGETFKID92483362 
       ON GLCOSTCENTERBUDGET ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(has [0:m] ) GLCOSTCENTERBUDGET' 
CREATE INDEX GLCOSTCENTERBUDGETFKID92483364 
       ON GLCOSTCENTERBUDGET ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Main key for Entity - GLCostCenterBudgetReview 
CREATE UNIQUE INDEX UGLCOSTCENTERBUDGETREV92481065 
       ON GLCOSTCENTERBUDGETREVIEW ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(reviewed [0:m] ) GLCOSTCENTERBUDGETREVIEW' 
CREATE INDEX GLCOSTCENTERBUDGETREVI92483269 
       ON GLCOSTCENTERBUDGETREVIEW ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(has [0:m] ) GLCOSTCENTERBUDGETREVIEW' 
CREATE INDEX GLCOSTCENTERBUDGETREVI92483270 
       ON GLCOSTCENTERBUDGETREVIEW ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) GLCOSTCENTERBUDGETREVIEW' 
CREATE INDEX GLCOSTCENTERBUDGETREVI92483271 
       ON GLCOSTCENTERBUDGETREVIEW ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Main key for Entity - GLFileImport 
CREATE UNIQUE INDEX UGLFILEIMPORT_ID_924810700 
       ON GLFILEIMPORT ( 
           ID ) ;
 
 
-- Main key for Entity - GLFileImportLine 
CREATE UNIQUE INDEX UGLFILEIMPORTLINE_ID_924810780 
       ON GLFILEIMPORTLINE ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLFILEIMPORT(has [0:m] ) GLFILEIMPORTLINE' 
CREATE INDEX GLFILEIMPORTLINEFKIDGL92483389 
       ON GLFILEIMPORTLINE ( 
           FK_ID_GLFILEIMPORT ) ;
 
 
-- Main key for Entity - GLFiscalYear 
CREATE UNIQUE INDEX UGLFISCALYEAR_ID_924810930 
       ON GLFISCALYEAR ( 
           ID ) ;
 
 
-- Main key for Entity - GLFund 
CREATE UNIQUE INDEX UGLFUND_ID_924811020 
       ON GLFUND ( 
           ID ) ;
-- Main key for Entity - GLFund 
CREATE INDEX GLFUND_CODE_924811030 
       ON GLFUND ( 
           CODE ) ;
 
 
-- Main key for Entity - GLJournal 
CREATE UNIQUE INDEX UGLJOURNAL_ID_924811090 
       ON GLJOURNAL ( 
           ID ) ;
-- Main key for Entity - GLJournal 
CREATE INDEX GLJOURNAL_CODE_924811110 
       ON GLJOURNAL ( 
           CODE ) ;
 
 
-- Main key for Entity - GLJournalEntry 
CREATE UNIQUE INDEX UGLJOURNALENTRY_ID_924811160 
       ON GLJOURNALENTRY ( 
           ID ) ;
-- Main key for Entity - GLJournalEntry 
CREATE INDEX GLJOURNALENTRYTRANSCAT92481120 
       ON GLJOURNALENTRY ( 
           TRANSACTIONDATE ) ;
-- Main key for Entity - GLJournalEntry 
CREATE INDEX GLJOURNALENTRYENTRYDAT92481123 
       ON GLJOURNALENTRY ( 
           ENTEREDDATE ) ;
 
 
-- Index for Relationship - 'FINANCIALACCOUNTTRANSACTION(generates [0:m] ) GLJOURNALENTRY' 
CREATE INDEX GLJOURNALENTRYFKIDFINA92483505 
       ON GLJOURNALENTRY ( 
           FKIDFINANCIALACCOU ) ;
 
 
-- Index for Relationship - 'BATCHEDITLIST(has [0:m] ) GLJOURNALENTRY' 
CREATE INDEX GLJOURNALENTRYFKIDBATC92483984 
       ON GLJOURNALENTRY ( 
           FK_ID_BATCHEDITLIS ) ;
 
 
-- Index for Relationship - 'GLJOURNAL(is source [0:m] ) GLJOURNALENTRY' 
CREATE INDEX GLJOURNALENTRYFKIDGLJO92484426 
       ON GLJOURNALENTRY ( 
           FK_ID_GLJOURNAL ) ;
 
 
-- Index for Relationship - 'GLACCOUNTINGPERIOD(has unrestricted [0:1] ) GLJOURNALENTRY' 
CREATE INDEX GLJOURNALENTRYUNRIDGLA92484432 
       ON GLJOURNALENTRY ( 
           UNRIDGLACCOUNTINGP ) ;
 
 
-- Index for Relationship - 'GLACCOUNTINGPERIOD(has [0:m] ) GLJOURNALENTRY' 
CREATE INDEX GLJOURNALENTRYHASIDGLA92484433 
       ON GLJOURNALENTRY ( 
           HASIDGLACCOUNTINGP ) ;
 
 
-- Main key for Entity - GLJournalEntryDetail 
CREATE UNIQUE INDEX UGLJOURNALENTRYDETAILI92481131 
       ON GLJOURNALENTRYDETAIL ( 
           ID ) ;
-- Main key for Entity - GLJournalEntryDetail 
CREATE INDEX GLJOURNALENTRYDETAILTR92481136 
       ON GLJOURNALENTRYDETAIL ( 
           TRANSACTIONDATE ) ;
 
 
-- Index for Relationship - 'GLPROJECT(can have recorded transactions [0:m] ) GLJOURNALENTRYDETAIL' 
CREATE INDEX GLJOURNALENTRYDETAILFK92483500 
       ON GLJOURNALENTRYDETAIL ( 
           FK_ID_GLPROJECT ) ;
 
 
-- Index for Relationship - 'z_USER(creats [0:m] ) GLJOURNALENTRYDETAIL' 
CREATE INDEX GLJOURNALENTRYDETAILFK92484414 
       ON GLJOURNALENTRYDETAIL ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'z_USER(modifies [0:m] ) GLJOURNALENTRYDETAIL' 
CREATE INDEX GLJOURNALENTRYDETAIL0292484415 
       ON GLJOURNALENTRYDETAIL ( 
           FK_ID_Z_USER02 ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(has [0:m] ) GLJOURNALENTRYDETAIL' 
CREATE INDEX GLJOURNALENTRYDETAILFK92484417 
       ON GLJOURNALENTRYDETAIL ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(has [0:m] ) GLJOURNALENTRYDETAIL' 
CREATE INDEX GLJOURNALENTRYDETAILFK92484418 
       ON GLJOURNALENTRYDETAIL ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Main key for Entity - GLJournalEntryTrace 
CREATE UNIQUE INDEX UGLJOURNALENTRYTRACEID92481146 
       ON GLJOURNALENTRYTRACE ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(has [0:m] ) GLJOURNALENTRYTRACE' 
CREATE INDEX GLJOURNALENTRYTRACEFKI92483253 
       ON GLJOURNALENTRYTRACE ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Main key for Entity - GLJournalRefCount 
CREATE UNIQUE INDEX UGLJOURNALREFCOUNT_ID_92484427 
       ON GLJOURNALREFCOUNT ( 
           FK_ID_GLJOURNAL, 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Index for Relationship - 'GLJOURNAL(to an annual [0:m] ) GLJOURNALREFCOUNT' 
CREATE INDEX GLJOURNALREFCOUNTFKIDG92484427 
       ON GLJOURNALREFCOUNT ( 
           FK_ID_GLJOURNAL ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(has per [0:m] ) GLJOURNALREFCOUNT' 
CREATE INDEX GLJOURNALREFCOUNTFKIDG92484428 
       ON GLJOURNALREFCOUNT ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Main key for Entity - GLProject 
CREATE UNIQUE INDEX UGLPROJECT_ID_924811630 
       ON GLPROJECT ( 
           ID ) ;
 
 
-- Main key for Entity - GLProjectComponent 
CREATE UNIQUE INDEX UGLPROJECTCOMPONENT_ID92481170 
       ON GLPROJECTCOMPONENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLPROJECT(has [0:m] ) GLPROJECTCOMPONENT' 
CREATE INDEX GLPROJECTCOMPONENTFKID92483310 
       ON GLPROJECTCOMPONENT ( 
           FK_ID_GLPROJECT ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(has [0:m] ) GLPROJECTCOMPONENT' 
CREATE INDEX GLPROJECTCOMPONENTFKID92483317 
       ON GLPROJECTCOMPONENT ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'z_USER(maintains budget for [0:m] ) GLPROJECTCOMPONENT' 
CREATE INDEX GLPROJECTCOMPONENTFKID92483318 
       ON GLPROJECTCOMPONENT ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - GLProjectComponentBudget 
CREATE UNIQUE INDEX UGLPROJECTCOMPONENTBUD92481176 
       ON GLPROJECTCOMPONENTBUDGET ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLBUDGETITEM(has annual [0:m] ) GLPROJECTCOMPONENTBUDGET' 
CREATE INDEX GLPROJECTCOMPONENTBUDG92483315 
       ON GLPROJECTCOMPONENTBUDGET ( 
           FK_ID_GLBUDGETITEM ) ;
 
 
-- Index for Relationship - 'GLPROJECTCOMPONENT(has [0:m] ) GLPROJECTCOMPONENTBUDGET' 
CREATE INDEX GLPROJECTCOMPONENTBUDG92483316 
       ON GLPROJECTCOMPONENTBUDGET ( 
           FKIDGLPROJECTCOMPO ) ;
 
 
-- Main key for Entity - GLRecurringJournalEntries 
CREATE UNIQUE INDEX UGLRECURRINGJOURNALENT92481184 
       ON GLRECURRINGJOURNALENTRIES ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLJOURNAL(has [0:m] ) GLRECURRINGJOURNALENTRIES' 
CREATE INDEX GLRECURRINGJOURNALENTR92484419 
       ON GLRECURRINGJOURNALENTRIES ( 
           FK_ID_GLJOURNAL ) ;
 
 
-- Main key for Entity - GLRecurringJournalEntryDetail 
CREATE UNIQUE INDEX UGLRECURRINGJOURNALENT92481200 
       ON GLRECURRINGJOURNALENTRYDETAIL ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLRECURRINGJOURNALENTRIES(has [0:m] ) GLRECURRINGJOURNALENTRYDETAIL' 
CREATE INDEX GLRECURRINGJOURNALENTR92484420 
       ON GLRECURRINGJOURNALENTRYDETAIL ( 
           FKIDGLRECURRINGJOU ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(can have several [0:M] ) GLRECURRINGJOURNALENTRYDETAIL' 
CREATE INDEX GLRECURRINGJOURNALENTR92484421 
       ON GLRECURRINGJOURNALENTRYDETAIL ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Main key for Entity - GLReportSection 
CREATE UNIQUE INDEX UGLREPORTSECTION_ID_924812090 
       ON GLREPORTSECTION ( 
           ID ) ;
 
 
-- Index for Relationship - 'REPORT(can have [0:m] ) GLREPORTSECTION' 
CREATE INDEX GLREPORTSECTIONFKIDREP92483499 
       ON GLREPORTSECTION ( 
           FK_ID_REPORT ) ;
 
 
-- Main key for Entity - GLStoreCode 
CREATE UNIQUE INDEX UGLSTORECODE_ID_924812150 
       ON GLSTORECODE ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(debited from [0:m] ) GLSTORECODE' 
CREATE INDEX GLSTORECODEDEBITIDGLCH92483616 
       ON GLSTORECODE ( 
           DEBITIDGLCHARTENTR ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is credit for [0:m] ) GLSTORECODE' 
CREATE INDEX GLSTORECODECREDITIDGLC92483617 
       ON GLSTORECODE ( 
           CREDITIDGLCHARTENT ) ;
 
 
-- Main key for Entity - GLStoreReport 
CREATE UNIQUE INDEX UGLSTOREREPORT_ID_924812200 
       ON GLSTOREREPORT ( 
           ID ) ;
 
 
-- Index for Relationship - 'BATCHEDITLIST(is for [0:m] ) GLSTOREREPORT' 
CREATE INDEX GLSTOREREPORTFKIDBATCH92483420 
       ON GLSTOREREPORT ( 
           FK_ID_BATCHEDITLIS ) ;
 
 
-- Main key for Entity - GradeScale 
CREATE UNIQUE INDEX UGRADESCALE_ID_924812470 
       ON GRADESCALE ( 
           ID ) ;
 
 
-- Main key for Entity - GradeScaleValues 
CREATE UNIQUE INDEX UGRADESCALEVALUES_ID_924812500 
       ON GRADESCALEVALUES ( 
           ID ) ;
 
 
-- Index for Relationship - 'GRADESCALE(has [0:m] ) GRADESCALEVALUES' 
CREATE INDEX GRADESCALEVALUESFKIDGR92483359 
       ON GRADESCALEVALUES ( 
           FK_ID_GRADESCALE ) ;
 
 
-- Main key for Entity - GraduationDate 
CREATE UNIQUE INDEX UGRADUATIONDATE_ID_924812560 
       ON GRADUATIONDATE ( 
           ID ) ;
 
 
-- Main key for Entity - HealthInformation 
CREATE UNIQUE INDEX UHEALTHINFORMATION_ID_92481265 
       ON HEALTHINFORMATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) HEALTHINFORMATION' 
CREATE INDEX HEALTHINFORMATIONFKIDS92484039 
       ON HEALTHINFORMATION ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - Host 
CREATE UNIQUE INDEX UHOST_HOSTID_924812710 
       ON HOST ( 
           HOSTID ) ;
 
 
-- Main key for Entity - HostStandardTexts 
CREATE UNIQUE INDEX UHOSTSTANDARDTEXTS_ID_92481306 
       ON HOSTSTANDARDTEXTS ( 
           ID ) ;
 
 
-- Index for Relationship - 'HOST(has [0:1] ) HOSTSTANDARDTEXTS' 
CREATE INDEX HOSTSTANDARDTEXTSFKHOS92484282 
       ON HOSTSTANDARDTEXTS ( 
           FK_HOSTID_HOST ) ;
 
 
-- Main key for Entity - HostStudentClassificationData 
CREATE UNIQUE INDEX UHOSTSTUDENTCLASSIFICA92481310 
       ON HOSTSTUDENTCLASSIFICATIONDATA ( 
           ID ) ;
 
 
-- Index for Relationship - 'HOST(has [0:m] ) HOSTSTUDENTCLASSIFICATIONDATA' 
CREATE INDEX HOSTSTUDENTCLASSIFICAT92483254 
       ON HOSTSTUDENTCLASSIFICATIONDATA ( 
           FK_HOSTID_HOST ) ;
 
 
-- Main key for Entity - HR_Position 
CREATE UNIQUE INDEX UHR_POSITION_ID_924813150 
       ON HR_POSITION ( 
           ID ) ;
 
 
-- Main key for Entity - HS_CourseEntry 
CREATE UNIQUE INDEX UHS_COURSEENTRY_ID_924813210 
       ON HS_COURSEENTRY ( 
           ID ) ;
 
 
-- Index for Relationship - 'HS_STANDARDCOURSE(has [0:m] ) HS_COURSEENTRY' 
CREATE INDEX HSCOURSEENTRYFKIDHSSTA92483653 
       ON HS_COURSEENTRY ( 
           FKIDHSSTANDARDCOUR ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) HS_COURSEENTRY' 
CREATE INDEX HSCOURSEENTRYFKIDSTUDE92483654 
       ON HS_COURSEENTRY ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - HS_StandardCourse 
CREATE UNIQUE INDEX UHS_STANDARDCOURSE_ID_92481326 
       ON HS_STANDARDCOURSE ( 
           ID ) ;
 
 
-- Main key for Entity - ImportTable 
CREATE UNIQUE INDEX UIMPORTTABLE_ID_924813320 
       ON IMPORTTABLE ( 
           ID ) ;
 
 
-- Main key for Entity - Influencer 
CREATE UNIQUE INDEX UINFLUENCER_ID_924813480 
       ON INFLUENCER ( 
           ID ) ;
-- Main key for Entity - Influencer 
CREATE INDEX INFLUENCER_TYPE_924813490 
       ON INFLUENCER ( 
           TYPE ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(for [0:m] ) INFLUENCER' 
CREATE INDEX INFLUENCERFKIDADMINIST92484381 
       ON INFLUENCER ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - Interest 
CREATE UNIQUE INDEX UINTEREST_ID_924813530 
       ON INTEREST ( 
           ID ) ;
-- Main key for Entity - Interest 
CREATE INDEX INTEREST_TYPE_924813540 
       ON INTEREST ( 
           TYPE ) ;
 
 
-- Index for Relationship - 'PROSPECT(has [0:m] ) INTEREST' 
CREATE INDEX INTEREST_FK_IDPROSPECT92484382 
       ON INTEREST ( 
           FK_ID_PROSPECT ) ;
 
 
-- Main key for Entity - InternalRuleVariableDef 
CREATE UNIQUE INDEX UINTERNALRULEVARIABLED92481359 
       ON INTERNALRULEVARIABLEDEF ( 
           ID ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(has [0:m] ) INTERNALRULEVARIABLEDEF' 
CREATE INDEX INTERNALRULEVARIABLEDE92483343 
       ON INTERNALRULEVARIABLEDEF ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Main key for Entity - Involvement 
CREATE UNIQUE INDEX UINVOLVEMENT_ID_924813630 
       ON INVOLVEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARACTIVITY(has [0:m] ) INVOLVEMENT' 
CREATE INDEX INVOLVEMENTFKIDEXTRACU92483460 
       ON INVOLVEMENT ( 
           FKIDEXTRACURRICULA ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(can have [0:m] ) INVOLVEMENT' 
CREATE INDEX INVOLVEMENTFKIDCOLLEGE92483464 
       ON INVOLVEMENT ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARAWARD(has [0:m] ) INVOLVEMENT' 
CREATE INDEX INVOLVEMENTFKIDEXTRA0292483465 
       ON INVOLVEMENT ( 
           FKIDEXTRACURRICU02 ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARROLE(has [0:m] ) INVOLVEMENT' 
CREATE INDEX INVOLVEMENTFKIDEXTRA0392483466 
       ON INVOLVEMENT ( 
           FKIDEXTRACURRICU03 ) ;
 
 
-- Index for Relationship - 'STUDENT(can be assigned [0:m] ) INVOLVEMENT' 
CREATE INDEX INVOLVEMENTFKIDSTUDENT92483467 
       ON INVOLVEMENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - LegacyTranscriptGroup 
CREATE UNIQUE INDEX ULEGACYTRANSCRIPTGROUP92481369 
       ON LEGACYTRANSCRIPTGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) LEGACYTRANSCRIPTGROUP' 
CREATE INDEX LEGACYTRANSCRIPTGROUPF92483572 
       ON LEGACYTRANSCRIPTGROUP ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) LEGACYTRANSCRIPTGROUP' 
CREATE INDEX LEGACYTRANSCRIPTGROUPF92483575 
       ON LEGACYTRANSCRIPTGROUP ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - LegacyTranscriptGroupLine 
CREATE UNIQUE INDEX ULEGACYTRANSCRIPTGROUP92481375 
       ON LEGACYTRANSCRIPTGROUPLINE ( 
           ID ) ;
 
 
-- Index for Relationship - 'LEGACYTRANSCRIPTGROUP(has [0:m] ) LEGACYTRANSCRIPTGROUPLINE' 
CREATE INDEX LEGACYTRANSCRIPTGROUPL92483574 
       ON LEGACYTRANSCRIPTGROUPLINE ( 
           FKIDLEGACYTRANSCRI ) ;
 
 
-- Main key for Entity - LegacyTranscriptLine 
CREATE UNIQUE INDEX ULEGACYTRANSCRIPTLINEI92481379 
       ON LEGACYTRANSCRIPTLINE ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) LEGACYTRANSCRIPTLINE' 
CREATE INDEX LEGACYTRANSCRIPTLINEFK92483877 
       ON LEGACYTRANSCRIPTLINE ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - Mailing 
CREATE UNIQUE INDEX UMAILING_ID_924813890 
       ON MAILING ( 
           ID ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(drives [0:m] ) MAILING' 
CREATE INDEX MAILINGFKIDSTOREDQUERY92483928 
       ON MAILING ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Index for Relationship - 'DOCUMENT(is generated as address label by [0:m] ) MAILING' 
CREATE INDEX MAILING_FK_ID_DOCUMENT92483946 
       ON MAILING ( 
           FK_ID_DOCUMENT ) ;
 
 
-- Index for Relationship - 'EVENT(can be triggered by [0:m] ) MAILING' 
CREATE INDEX MAILING_FK_ID_EVENT_924839470 
       ON MAILING ( 
           FK_ID_EVENT ) ;
 
 
-- Main key for Entity - MailingGroup 
CREATE UNIQUE INDEX UMAILINGGROUP_ID_924813980 
       ON MAILINGGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(has assigned [0:m] ) MAILINGGROUP' 
CREATE INDEX MAILINGGROUP_FKIDZUSER92483949 
       ON MAILINGGROUP ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) MAILINGGROUP' 
CREATE INDEX MAILINGGROUPFKIDADMINI92483950 
       ON MAILINGGROUP ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'USERGROUP(has assigned [0:m] ) MAILINGGROUP' 
CREATE INDEX MAILINGGROUPFKIDUSERGR92483951 
       ON MAILINGGROUP ( 
           FK_ID_USERGROUP ) ;
 
 
-- Main key for Entity - ManuallySatisfied 
CREATE UNIQUE INDEX UMANUALLYSATISFIED_ID_92481404 
       ON MANUALLYSATISFIED ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) MANUALLYSATISFIED' 
CREATE INDEX MANUALLYSATISFIEDFKIDS92483708 
       ON MANUALLYSATISFIED ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'REQUIREDGROUP(has [0:m] ) MANUALLYSATISFIED' 
CREATE INDEX MANUALLYSATISFIEDFKIDR92484048 
       ON MANUALLYSATISFIED ( 
           FK_ID_REQUIREDGROU ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(has [0:m] ) MANUALLYSATISFIED' 
CREATE INDEX MANUALLYSATISFIEDFKIDD92484049 
       ON MANUALLYSATISFIED ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Main key for Entity - MatchingGiftProgram 
CREATE UNIQUE INDEX UMATCHINGGIFTPROGRAMID92481408 
       ON MATCHINGGIFTPROGRAM ( 
           ID ) ;
-- Main key for Entity - MatchingGiftProgram 
CREATE INDEX MATCHINGGIFTPROGRAMNAM92481409 
       ON MATCHINGGIFTPROGRAM ( 
           NAME ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(has for employees [0:m] ) MATCHINGGIFTPROGRAM' 
CREATE INDEX MATCHINGGIFTPROGRAMFKI92484164 
       ON MATCHINGGIFTPROGRAM ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Main key for Entity - MealPlan 
CREATE UNIQUE INDEX UMEALPLAN_ID_924814280 
       ON MEALPLAN ( 
           ID ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is the charge for [0:m] ) MEALPLAN' 
CREATE INDEX MEALPLANFKIDSATRANSACT92484089 
       ON MEALPLAN ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Main key for Entity - MedicalCode 
CREATE UNIQUE INDEX UMEDICALCODE_ID_924814390 
       ON MEDICALCODE ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLBUDGET(uses [0:m] ) MEDICALCODE' 
CREATE INDEX MEDICALCODEFKIDGLBUDGE92483549 
       ON MEDICALCODE ( 
           FK_ID_GLBUDGET ) ;
 
 
-- Main key for Entity - MeetingParticipant 
CREATE UNIQUE INDEX UMEETINGPARTICIPANT_ID92481448 
       ON MEETINGPARTICIPANT ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) MEETINGPARTICIPANT' 
CREATE INDEX MEETINGPARTICIPANTFKID92483409 
       ON MEETINGPARTICIPANT ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'EVENT(has [0:m] ) MEETINGPARTICIPANT' 
CREATE INDEX MEETINGPARTICIPANTFKID92483414 
       ON MEETINGPARTICIPANT ( 
           FK_ID_EVENT ) ;
 
 
-- Main key for Entity - NonMatchingID 
CREATE UNIQUE INDEX UNONMATCHINGID_ID_924814510 
       ON NONMATCHINGID ( 
           ID ) ;
 
 
-- Index for Relationship - 'CHAPELSESSION(has [0:m] ) NONMATCHINGID' 
CREATE INDEX NONMATCHINGIDFKIDCHAPE92484050 
       ON NONMATCHINGID ( 
           FK_ID_CHAPELSESSIO ) ;
 
 
-- Main key for Entity - OccupantUnit 
CREATE UNIQUE INDEX UOCCUPANTUNIT_ID_924814560 
       ON OCCUPANTUNIT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ROOM(has [0:m] ) OCCUPANTUNIT' 
CREATE INDEX OCCUPANTUNIT_FK_IDROOM92483729 
       ON OCCUPANTUNIT ( 
           FK_ID_ROOM ) ;
 
 
-- Main key for Entity - Organization 
CREATE UNIQUE INDEX UORGANIZATION_ID_924814620 
       ON ORGANIZATION ( 
           ID ) ;
-- Main key for Entity - Organization 
CREATE INDEX ORGANIZATION_NAME_924814630 
       ON ORGANIZATION ( 
           NAME ) ;
-- Main key for Entity - Organization 
CREATE INDEX ORGANIZATION_PHONE1_924814660 
       ON ORGANIZATION ( 
           PHONE ) ;
-- Main key for Entity - Organization 
CREATE INDEX ORGANIZATION_INDUSTRY_92481469 
       ON ORGANIZATION ( 
           INDUSTRY ) ;
 
 
-- Index for Relationship - 'VENDOR(can be  [0:1] ) ORGANIZATION' 
CREATE INDEX ORGANIZATIONFKIDVENDOR92483506 
       ON ORGANIZATION ( 
           FK_ID_VENDOR ) ;
 
 
-- Index for Relationship - 'PERSON(is the primary contact for [0:m] ) ORGANIZATION' 
CREATE INDEX ORGANIZATIONFKIDPERSON92484163 
       ON ORGANIZATION ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ADDRESS(is primary for [0:1] ) ORGANIZATION' 
CREATE INDEX ORGANIZATIONFKIDADDRES92484306 
       ON ORGANIZATION ( 
           FK_ID_ADDRESS ) ;
 
 
-- Main key for Entity - OrganizationalEvent 
CREATE UNIQUE INDEX UORGANIZATIONALEVENTID92481490 
       ON ORGANIZATIONALEVENT ( 
           ID ) ;
-- Main key for Entity - OrganizationalEvent 
CREATE INDEX ORGANIZATIONALEVENTTYP92481491 
       ON ORGANIZATIONALEVENT ( 
           TYPE ) ;
 
 
-- Index for Relationship - 'EVENT(has [0:m] ) ORGANIZATIONALEVENT' 
CREATE INDEX ORGANIZATIONALEVENTFKI92484276 
       ON ORGANIZATIONALEVENT ( 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(for [0:m] ) ORGANIZATIONALEVENT' 
CREATE INDEX ORGANIZATIONALEVENTFKI92484277 
       ON ORGANIZATIONALEVENT ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'SCHOOL(for [0:m] ) ORGANIZATIONALEVENT' 
CREATE INDEX ORGANIZATIONALEVENTFKI92484278 
       ON ORGANIZATIONALEVENT ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'CHURCH(for [0:m] ) ORGANIZATIONALEVENT' 
CREATE INDEX ORGANIZATIONALEVENTFKI92484279 
       ON ORGANIZATIONALEVENT ( 
           FK_ID_CHURCH ) ;
 
 
-- Main key for Entity - OrgPersonRole 
CREATE UNIQUE INDEX UORGPERSONROLE_ID_924815010 
       ON ORGPERSONROLE ( 
           ID ) ;
-- Main key for Entity - OrgPersonRole 
CREATE INDEX ORGPERSONROLE_TYPE_924815020 
       ON ORGPERSONROLE ( 
           TYPE ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(is to [0:m] ) ORGPERSONROLE' 
CREATE INDEX ORGPERSONROLEFKIDORGAN92484224 
       ON ORGPERSONROLE ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'PERSON(for [0:m] ) ORGPERSONROLE' 
CREATE INDEX ORGPERSONROLEFKIDPERSO92484225 
       ON ORGPERSONROLE ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - OverrideChapelRequirement 
CREATE UNIQUE INDEX UOVERRIDECHAPELREQUIRE92481506 
       ON OVERRIDECHAPELREQUIREMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) OVERRIDECHAPELREQUIREMENT' 
CREATE INDEX OVERRIDECHAPELREQUIREM92483363 
       ON OVERRIDECHAPELREQUIREMENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has for student [0:m] ) OVERRIDECHAPELREQUIREMENT' 
CREATE INDEX OVERRIDECHAPELREQUIREM92483365 
       ON OVERRIDECHAPELREQUIREMENT ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - PaymentMethod 
CREATE UNIQUE INDEX UPAYMENTMETHOD_ID_924815100 
       ON PAYMENTMETHOD ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) PAYMENTMETHOD' 
CREATE INDEX PAYMENTMETHODFKIDPERSO92483964 
       ON PAYMENTMETHOD ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - PaymentPlan 
CREATE UNIQUE INDEX UPAYMENTPLAN_ID_924815150 
       ON PAYMENTPLAN ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(for [0:m] ) PAYMENTPLAN' 
CREATE INDEX PAYMENTPLANFKIDCOLLEGE92484435 
       ON PAYMENTPLAN ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - PaymentPlanLine 
CREATE UNIQUE INDEX UPAYMENTPLANLINE_ID_924815240 
       ON PAYMENTPLANLINE ( 
           ID ) ;
 
 
-- Index for Relationship - 'PAYMENTPLAN(for [0:m] ) PAYMENTPLANLINE' 
CREATE INDEX PAYMENTPLANLINEFKIDPAY92484438 
       ON PAYMENTPLANLINE ( 
           FK_ID_PAYMENTPLAN ) ;
 
 
-- Main key for Entity - PaymentPlanLineAssigned 
CREATE UNIQUE INDEX UPAYMENTPLANLINEASSIGN92481531 
       ON PAYMENTPLANLINEASSIGNED ( 
           ID ) ;
 
 
-- Index for Relationship - 'PAYMENTPLAN(has [0:m] ) PAYMENTPLANLINEASSIGNED' 
CREATE INDEX PAYMENTPLANLINEASSIGNE92484439 
       ON PAYMENTPLANLINEASSIGNED ( 
           FK_ID_PAYMENTPLAN ) ;
 
 
-- Index for Relationship - 'BILLINGPERIOD(has [0:m] ) PAYMENTPLANLINEASSIGNED' 
CREATE INDEX PAYMENTPLANLINEASSIGNE92484449 
       ON PAYMENTPLANLINEASSIGNED ( 
           FK_ID_BILLINGPERIO ) ;
 
 
-- Main key for Entity - Person 
CREATE UNIQUE INDEX UPERSON_ID_924815380 
       ON PERSON ( 
           ID ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_LASTNAME_924815390 
       ON PERSON ( 
           LASTNAME ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_EMAILADDRESS_924815600 
       ON PERSON ( 
           EMAILADDRESS ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_HOMEPHONE_924815520 
       ON PERSON ( 
           HOMEPHONE ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_GENDER_924815480 
       ON PERSON ( 
           GENDER ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_WORKPHONE_924815530 
       ON PERSON ( 
           WORKPHONE ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_SSN_924815640 
       ON PERSON ( 
           SSN ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_OLDKEY_924815870 
       ON PERSON ( 
           CONVERTEDKEY ) ;
-- Main key for Entity - Person 
CREATE INDEX PERSON_UNIQUEID_924815880 
       ON PERSON ( 
           CAMPUSID ) ;
 
 
-- Index for Relationship - 'EXTRACURRICULARACTIVITY(has coach/advisor [0:m] ) PERSON' 
CREATE INDEX PERSONFKIDEXTRACURRICU92483463 
       ON PERSON ( 
           FKIDEXTRACURRICULA ) ;
 
 
-- Index for Relationship - 'TRUSTEE(for [1:1] ) PERSON' 
CREATE INDEX PERSON_FK_ID_TRUSTEE_924835140 
       ON PERSON ( 
           FK_ID_TRUSTEE ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(Is current for [0:m] ) PERSON' 
CREATE INDEX PERSONFKIDFINAIDPROFIL92483849 
       ON PERSON ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Index for Relationship - 'DONOR(isa [0:1] ) PERSON' 
CREATE INDEX PERSON_FK_ID_DONOR_924840940 
       ON PERSON ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'PERSON(is the primary mailing for [0:m] ) PERSON' 
CREATE INDEX PERSON_FK_ID_PERSON_924843100 
       ON PERSON ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ADDRESS(is primary for [0:1] ) PERSON' 
CREATE INDEX PERSON_FK_ID_ADDRESS_924843240 
       ON PERSON ( 
           FK_ID_ADDRESS ) ;
 
 
-- Index for Relationship - 'CHURCH(is the home church of [0:m] ) PERSON' 
CREATE INDEX PERSON_FK_ID_CHURCH_924843880 
       ON PERSON ( 
           FK_ID_CHURCH ) ;
 
 
-- Main key for Entity - PersonalDataModification 
CREATE UNIQUE INDEX UPERSONALDATAMODIFICAT92481612 
       ON PERSONALDATAMODIFICATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) PERSONALDATAMODIFICATION' 
CREATE INDEX PERSONALDATAMODIFICATI92483425 
       ON PERSONALDATAMODIFICATION ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) PERSONALDATAMODIFICATION' 
CREATE INDEX PERSONALDATAMODIFICATI92483733 
       ON PERSONALDATAMODIFICATION ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'z_USER(creates [0:m] ) PERSONALDATAMODIFICATION' 
CREATE INDEX PERSONALDATAMODIFICATI92483734 
       ON PERSONALDATAMODIFICATION ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - PersonAttributeModification 
CREATE UNIQUE INDEX UPERSONATTRIBUTEMODIFI92481620 
       ON PERSONATTRIBUTEMODIFICATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) PERSONATTRIBUTEMODIFICATION' 
CREATE INDEX PERSONATTRIBUTEMODIFIC92483437 
       ON PERSONATTRIBUTEMODIFICATION ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - PersonMergeHistory 
CREATE UNIQUE INDEX UPERSONMERGEHISTORY_ID92481628 
       ON PERSONMERGEHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has target [0:m] ) PERSONMERGEHISTORY' 
CREATE INDEX PERSONMERGEHISTORYFKID92483246 
       ON PERSONMERGEHISTORY ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'BATCHITEM(generated [0:m] ) PERSONMERGEHISTORY' 
CREATE INDEX PERSONMERGEHISTORYFKID92483247 
       ON PERSONMERGEHISTORY ( 
           FK_ID_BATCHITEM ) ;
 
 
-- Index for Relationship - 'z_USER(generated [0:m] ) PERSONMERGEHISTORY' 
CREATE INDEX PERSONMERGEHISTORYFKID92483250 
       ON PERSONMERGEHISTORY ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - PersonReference 
CREATE UNIQUE INDEX UPERSONREFERENCE_ID_924816340 
       ON PERSONREFERENCE ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(for [0:m] ) PERSONREFERENCE' 
CREATE INDEX PERSONREFERENCEFKIDPER92483238 
       ON PERSONREFERENCE ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) PERSONREFERENCE' 
CREATE INDEX PERSONREFERENCEFKIDP0292483239 
       ON PERSONREFERENCE ( 
           FK_ID_PERSON02 ) ;
 
 
-- Main key for Entity - PersonRole 
CREATE UNIQUE INDEX UPERSONROLE_ID_924816380 
       ON PERSONROLE ( 
           ID ) ;
-- Main key for Entity - PersonRole 
CREATE INDEX PERSONROLE_ROLE_924816390 
       ON PERSONROLE ( 
           ROLE ) ;
 
 
-- Index for Relationship - 'PERSON(is related to (subordinant) [0:m] ) PERSONROLE' 
CREATE INDEX PERSONROLE_FK_IDPERSON92484308 
       ON PERSONROLE ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'PERSON(is related as (parent) [0:m] ) PERSONROLE' 
CREATE INDEX PERSONROLEFKIDPERSON0292484309 
       ON PERSONROLE ( 
           FK_ID_PERSON02 ) ;
 
 
-- Main key for Entity - PersonViewsStudent 
CREATE UNIQUE INDEX UPERSONVIEWSSTUDENT_ID92481644 
       ON PERSONVIEWSSTUDENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) PERSONVIEWSSTUDENT' 
CREATE INDEX PERSONVIEWSSTUDENTFKID92483686 
       ON PERSONVIEWSSTUDENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - Pledge 
CREATE UNIQUE INDEX UPLEDGE_ID_924816480 
       ON PLEDGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'EVENT(can generate [0:m] ) PLEDGE' 
CREATE INDEX PLEDGE_FK_ID_EVENT_924842000 
       ON PLEDGE ( 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'FUND(can have [0:m] ) PLEDGE' 
CREATE INDEX PLEDGE_FK_ID_FUND_924842530 
       ON PLEDGE ( 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'DONOR(makes [0:m] ) PLEDGE' 
CREATE INDEX PLEDGE_FK_ID_DONOR_924843680 
       ON PLEDGE ( 
           FK_ID_DONOR ) ;
 
 
-- Main key for Entity - PO_Approval 
CREATE UNIQUE INDEX UPO_APPROVAL_ID_924816640 
       ON PO_APPROVAL ( 
           ID ) ;
 
 
-- Index for Relationship - 'FINANCIALAPPROVALROLE(has [0:m] ) PO_APPROVAL' 
CREATE INDEX POAPPROVALFKIDFINANCIA92483277 
       ON PO_APPROVAL ( 
           FKIDFINANCIALAPPRO ) ;
 
 
-- Index for Relationship - 'PURCHASEORDER(has [0:m] ) PO_APPROVAL' 
CREATE INDEX POAPPROVALFKIDPURCHASE92483284 
       ON PO_APPROVAL ( 
           FK_ID_PURCHASEORDE ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) PO_APPROVAL' 
CREATE INDEX PO_APPROVAL_FK_IDZUSER92483305 
       ON PO_APPROVAL ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - PO_LineItem 
CREATE UNIQUE INDEX UPO_LINEITEM_ID_924816700 
       ON PO_LINEITEM ( 
           ID ) ;
 
 
-- Index for Relationship - 'PURCHASEORDER(has [0:m] ) PO_LINEITEM' 
CREATE INDEX POLINEITEMFKIDPURCHASE92483279 
       ON PO_LINEITEM ( 
           FK_ID_PURCHASEORDE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(for [0:m] ) PO_LINEITEM' 
CREATE INDEX POLINEITEMFKIDGLCHARTE92483285 
       ON PO_LINEITEM ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'z_USER(denied [0:m] ) PO_LINEITEM' 
CREATE INDEX PO_LINEITEM_FK_IDZUSER92483286 
       ON PO_LINEITEM ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'GLBUDGETITEM(is encumbered by [0:m] ) PO_LINEITEM' 
CREATE INDEX POLINEITEMFKIDGLBUDGET92483287 
       ON PO_LINEITEM ( 
           FK_ID_GLBUDGETITEM ) ;
 
 
-- Index for Relationship - 'GLPROJECTCOMPONENT(has charged item [0:m] ) PO_LINEITEM' 
CREATE INDEX POLINEITEMFKIDGLPROJEC92483288 
       ON PO_LINEITEM ( 
           FKIDGLPROJECTCOMPO ) ;
 
 
-- Main key for Entity - PotentialGift 
CREATE UNIQUE INDEX UPOTENTIALGIFT_ID_924816810 
       ON POTENTIALGIFT ( 
           ID ) ;
-- Main key for Entity - PotentialGift 
CREATE INDEX POTENTIALGIFTEXPECTEDD92481687 
       ON POTENTIALGIFT ( 
           EXPECTEDDATE ) ;
 
 
-- Index for Relationship - 'POTENTIALGIFT(is created from [0:1] ) POTENTIALGIFT' 
CREATE INDEX POTENTIALGIFTFKIDPOTEN92483255 
       ON POTENTIALGIFT ( 
           FK_ID_POTENTIALGIF ) ;
 
 
-- Index for Relationship - 'DONOR(may give [0:m] ) POTENTIALGIFT' 
CREATE INDEX POTENTIALGIFTFKIDDONOR92484351 
       ON POTENTIALGIFT ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'GIFT(can generate matching gifts [0:m] ) POTENTIALGIFT' 
CREATE INDEX POTENTIALGIFT_FKIDGIFT92484353 
       ON POTENTIALGIFT ( 
           FK_ID_GIFT ) ;
 
 
-- Index for Relationship - 'PLEDGE(can be broken down into [0:m] ) POTENTIALGIFT' 
CREATE INDEX POTENTIALGIFTFKIDPLEDG92484369 
       ON POTENTIALGIFT ( 
           FK_ID_PLEDGE ) ;
 
 
-- Index for Relationship - 'FUND(may expect [0:m] ) POTENTIALGIFT' 
CREATE INDEX POTENTIALGIFT_FKIDFUND92484372 
       ON POTENTIALGIFT ( 
           FK_ID_FUND ) ;
 
 
-- Main key for Entity - PresentationObjectInstance 
CREATE UNIQUE INDEX UPRESENTATIONOBJECTINS92481699 
       ON PRESENTATIONOBJECTINSTANCE ( 
           ID ) ;
 
 
-- Index for Relationship - 'DASHBOARDFRAMEUSER(has [0:m] ) PRESENTATIONOBJECTINSTANCE' 
CREATE INDEX PRESENTATIONOBJECTINST92483326 
       ON PRESENTATIONOBJECTINSTANCE ( 
           FKIDDASHBOARDFRAME ) ;
 
 
-- Main key for Entity - PriorEducation 
CREATE UNIQUE INDEX UPRIOREDUCATION_ID_924817040 
       ON PRIOREDUCATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) PRIOREDUCATION' 
CREATE INDEX PRIOREDUCATIONFKIDPERS92484268 
       ON PRIOREDUCATION ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'SCHOOL(has [0:m] ) PRIOREDUCATION' 
CREATE INDEX PRIOREDUCATIONFKIDSCHO92484269 
       ON PRIOREDUCATION ( 
           FK_ID_SCHOOL ) ;
 
 
-- Main key for Entity - Program 
CREATE UNIQUE INDEX UPROGRAM_ID_924817150 
       ON PROGRAM ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) PROGRAM' 
CREATE INDEX PROGRAMFKIDADMINISTRAT92484185 
       ON PROGRAM ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - ProgramForCourse 
CREATE UNIQUE INDEX UPROGRAMFORCOURSE_ID_924817220 
       ON PROGRAMFORCOURSE ( 
           ID ) ;
 
 
-- Index for Relationship - 'PROGRAM(has [0:m] ) PROGRAMFORCOURSE' 
CREATE INDEX PROGRAMFORCOURSEFKIDPR92484186 
       ON PROGRAMFORCOURSE ( 
           FK_ID_PROGRAM ) ;
 
 
-- Index for Relationship - 'COURSE(for [0:m] ) PROGRAMFORCOURSE' 
CREATE INDEX PROGRAMFORCOURSEFKIDCO92484187 
       ON PROGRAMFORCOURSE ( 
           FK_ID_COURSE ) ;
 
 
-- Main key for Entity - ProposedEnrollment 
CREATE UNIQUE INDEX UPROPOSEDENROLLMENT_ID92481728 
       ON PROPOSEDENROLLMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'PROPOSEDSCHEDULEHISTORY(has [0:m] ) PROPOSEDENROLLMENT' 
CREATE INDEX PROPOSEDENROLLMENTFKID92483222 
       ON PROPOSEDENROLLMENT ( 
           FKIDPROPOSEDSCHEDU ) ;
 
 
-- Index for Relationship - 'CLASS(has [0:m] ) PROPOSEDENROLLMENT' 
CREATE INDEX PROPOSEDENROLLMENTFKID92483471 
       ON PROPOSEDENROLLMENT ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'COURSE(is a xref course override for [0:m] ) PROPOSEDENROLLMENT' 
CREATE INDEX PROPOSEDENROLLMENTFKID92483472 
       ON PROPOSEDENROLLMENT ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) PROPOSEDENROLLMENT' 
CREATE INDEX PROPOSEDENROLLMENTFKID92483784 
       ON PROPOSEDENROLLMENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - ProposedScheduleHistory 
CREATE UNIQUE INDEX UPROPOSEDSCHEDULEHISTO92481735 
       ON PROPOSEDSCHEDULEHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) PROPOSEDSCHEDULEHISTORY' 
CREATE INDEX PROPOSEDSCHEDULEHISTOR92483221 
       ON PROPOSEDSCHEDULEHISTORY ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - Prospect 
CREATE UNIQUE INDEX UPROSPECT_ID_924817410 
       ON PROSPECT ( 
           ID ) ;
-- Main key for Entity - Prospect 
CREATE INDEX PROSPECT_TYPE_924817420 
       ON PROSPECT ( 
           TYPE ) ;
-- Main key for Entity - Prospect 
CREATE INDEX PROSPECT_STATUS_924817430 
       ON PROSPECT ( 
           STATUS ) ;
 
 
-- Index for Relationship - 'z_USER(processed online application [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FK_ID_Z_USER_92483332 
       ON PROSPECT ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'ADMISSIONSMAJOR(is potential 1st choice for [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDADMISSIONS92483702 
       ON PROSPECT ( 
           FKIDADMISSIONSMAJO ) ;
 
 
-- Index for Relationship - 'ADMISSIONSMAJOR(is potential 2nd choice for [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDADMISSIO0292483703 
       ON PROSPECT ( 
           FKIDADMISSIONSMA02 ) ;
 
 
-- Index for Relationship - 'ADMISSIONSMAJOR(is potential 3rd choice for [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDADMISSIO0392483704 
       ON PROSPECT ( 
           FKIDADMISSIONSMA03 ) ;
 
 
-- Index for Relationship - 'COLLEGE(has [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FK_ID_COLLEGE92483888 
       ON PROSPECT ( 
           FK_ID_COLLEGE ) ;
 
 
-- Index for Relationship - 'TERRITORY(has assigned [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FKIDTERRITORY92483963 
       ON PROSPECT ( 
           FK_ID_TERRITORY ) ;
 
 
-- Index for Relationship - 'ADMISSIONTRACK(has [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDADMISSIONT92483998 
       ON PROSPECT ( 
           FK_IDADMISSIONTRAC ) ;
 
 
-- Index for Relationship - 'DEGREEMAJOR(is first choice of ( (delete) [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDDEGREEMAJO92484053 
       ON PROSPECT ( 
           FK_ID_DEGREEMAJOR ) ;
 
 
-- Index for Relationship - 'DEGREEMAJOR(is second choice of (delete) [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDDEGREEMA0292484054 
       ON PROSPECT ( 
           FK_ID_DEGREEMAJO02 ) ;
 
 
-- Index for Relationship - 'DEGREEMAJOR(is third choice of (delete) [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDDEGREEMA0392484055 
       ON PROSPECT ( 
           FK_ID_DEGREEMAJO03 ) ;
 
 
-- Index for Relationship - 'SCHOOL(is attended by [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FK_ID_SCHOOL_92484062 
       ON PROSPECT ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'COHORT(has assigned [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FK_ID_COHORT_92484179 
       ON PROSPECT ( 
           FK_ID_COHORT ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) PROSPECT' 
CREATE INDEX PROSPECTFKIDADMINISTRA92484197 
       ON PROSPECT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'STAFF(is the admissions counselor for [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FK_ID_STAFF_924842700 
       ON PROSPECT ( 
           FK_ID_STAFF ) ;
 
 
-- Index for Relationship - 'PERSON(isa [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FK_ID_PERSON_92484307 
       ON PROSPECT ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'EVENT(can be the first contact for [0:m] ) PROSPECT' 
CREATE INDEX PROSPECT_FK_ID_EVENT_924843760 
       ON PROSPECT ( 
           FK_ID_EVENT ) ;
 
 
-- Main key for Entity - ProspectHistSummary 
CREATE UNIQUE INDEX UPROSPECTHISTSUMMARYID92481838 
       ON PROSPECTHISTSUMMARY ( 
           ID ) ;
 
 
-- Index for Relationship - 'FYREPORTPROSPECTSUMMARY(has [0:m] ) PROSPECTHISTSUMMARY' 
CREATE INDEX PROSPECTHISTSUMMARYFKI92483329 
       ON PROSPECTHISTSUMMARY ( 
           FKIDFYREPORTPROSPE ) ;
 
 
-- Index for Relationship - 'PROSPECT(has [0:m] ) PROSPECTHISTSUMMARY' 
CREATE INDEX PROSPECTHISTSUMMARYFKI92483331 
       ON PROSPECTHISTSUMMARY ( 
           FK_ID_PROSPECT ) ;
 
 
-- Main key for Entity - ProspectTypeChange 
CREATE UNIQUE INDEX UPROSPECTTYPECHANGE_ID92481855 
       ON PROSPECTTYPECHANGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'PROSPECT(has [0:m] ) PROSPECTTYPECHANGE' 
CREATE INDEX PROSPECTTYPECHANGEFKID92483988 
       ON PROSPECTTYPECHANGE ( 
           FK_ID_PROSPECT ) ;
 
 
-- Main key for Entity - PurchaseOrder 
CREATE UNIQUE INDEX UPURCHASEORDER_ID_924818620 
       ON PURCHASEORDER ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(has submitted [0:m] ) PURCHASEORDER' 
CREATE INDEX PURCHASEORDERFKIDZUSER92483280 
       ON PURCHASEORDER ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'z_USER(created [0:m] ) PURCHASEORDER' 
CREATE INDEX PURCHASEORDERCRIDZUSER92483281 
       ON PURCHASEORDER ( 
           CRID_Z_USER ) ;
 
 
-- Index for Relationship - 'ADDRESS(is billing for [0:m] ) PURCHASEORDER' 
CREATE INDEX PURCHASEORDERBILLIDADD92483282 
       ON PURCHASEORDER ( 
           BILLID_ADDRESS ) ;
 
 
-- Index for Relationship - 'ADDRESS(is shipping for [0:m] ) PURCHASEORDER' 
CREATE INDEX PURCHASEORDERSHIPIDADD92483283 
       ON PURCHASEORDER ( 
           SHIPID_ADDRESS ) ;
 
 
-- Index for Relationship - 'VENDOR(has [0:m] ) PURCHASEORDER' 
CREATE INDEX PURCHASEORDERFKIDVENDO92483295 
       ON PURCHASEORDER ( 
           FK_ID_VENDOR ) ;
 
 
-- Main key for Entity - Receipt 
CREATE UNIQUE INDEX URECEIPT_ID_924818820 
       ON RECEIPT ( 
           ID ) ;
-- Main key for Entity - Receipt 
CREATE INDEX RECEIPT_DATEISSUED_924818850 
       ON RECEIPT ( 
           DATEISSUED ) ;
-- Main key for Entity - Receipt 
CREATE INDEX RECEIPT_RECEIPTNUMBER_92481883 
       ON RECEIPT ( 
           z_NUMBER ) ;
 
 
-- Index for Relationship - 'DONATION(generates [1:m] ) RECEIPT' 
CREATE INDEX RECEIPT_FK_ID_DONATION92484326 
       ON RECEIPT ( 
           FK_ID_DONATION ) ;
 
 
-- Main key for Entity - RegistrationApproval 
CREATE UNIQUE INDEX UREGISTRATIONAPPROVALI92481897 
       ON REGISTRATIONAPPROVAL ( 
           ID ) ;
 
 
-- Index for Relationship - 'PROPOSEDSCHEDULEHISTORY(has [0:m] ) REGISTRATIONAPPROVAL' 
CREATE INDEX REGISTRATIONAPPROVALFK92483223 
       ON REGISTRATIONAPPROVAL ( 
           FKIDPROPOSEDSCHEDU ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) REGISTRATIONAPPROVAL' 
CREATE INDEX REGISTRATIONAPPROVALFK92483256 
       ON REGISTRATIONAPPROVAL ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'FACULTY(has [0:m] ) REGISTRATIONAPPROVAL' 
CREATE INDEX REGISTRATIONAPPROVALFK92483257 
       ON REGISTRATIONAPPROVAL ( 
           FK_ID_FACULTY ) ;
 
 
-- Main key for Entity - RemoteEvent 
CREATE UNIQUE INDEX UREMOTEEVENT_ID_924819040 
       ON REMOTEEVENT ( 
           ID ) ;
 
 
-- Main key for Entity - RemoteExInterest 
CREATE UNIQUE INDEX UREMOTEEXINTEREST_ID_924819120 
       ON REMOTEEXINTEREST ( 
           ID ) ;
 
 
-- Main key for Entity - RemoteMajorInterest 
CREATE UNIQUE INDEX UREMOTEMAJORINTERESTID92481917 
       ON REMOTEMAJORINTEREST ( 
           ID ) ;
 
 
-- Main key for Entity - RemotePerson 
CREATE UNIQUE INDEX UREMOTEPERSON_ID_924819230 
       ON REMOTEPERSON ( 
           ID ) ;
 
 
-- Index for Relationship - 'REMOTEEVENT(has [0:m] ) REMOTEPERSON' 
CREATE INDEX REMOTEPERSONFKIDREMOTE92484016 
       ON REMOTEPERSON ( 
           FK_ID_REMOTEEVENT ) ;
 
 
-- Main key for Entity - Report 
CREATE UNIQUE INDEX UREPORT_ID_924819600 
       ON REPORT ( 
           ID ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(drives [0:m] ) REPORT' 
CREATE INDEX REPORT_FKIDSTOREDQUERY92483958 
       ON REPORT ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(originated [0:m] ) REPORT' 
CREATE INDEX REPORTFKIDSTOREDQUER0292484136 
       ON REPORT ( 
           FK_ID_STOREDQUER02 ) ;
 
 
-- Index for Relationship - 'z_USER(creates [0:m] ) REPORT' 
CREATE INDEX REPORT_FK_ID_Z_USER_924841370 
       ON REPORT ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - ReportGroup 
CREATE UNIQUE INDEX UREPORTGROUP_ID_924819710 
       ON REPORTGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'USERGROUP(has assigned [0:m] ) REPORTGROUP' 
CREATE INDEX REPORTGROUPFKIDUSERGRO92483945 
       ON REPORTGROUP ( 
           FK_ID_USERGROUP ) ;
 
 
-- Index for Relationship - 'z_USER(has assigned [0:m] ) REPORTGROUP' 
CREATE INDEX REPORTGROUP_FK_IDZUSER92483948 
       ON REPORTGROUP ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) REPORTGROUP' 
CREATE INDEX REPORTGROUPFKIDADMINIS92483957 
       ON REPORTGROUP ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - ReportStructure 
CREATE UNIQUE INDEX UREPORTSTRUCTURE_ID_924819770 
       ON REPORTSTRUCTURE ( 
           ID ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTURECATEGORY(has [0:m] ) REPORTSTRUCTURE' 
CREATE INDEX REPORTSTRUCTUREFKIDREP92483372 
       ON REPORTSTRUCTURE ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Index for Relationship - 'z_USER(created [0:m] ) REPORTSTRUCTURE' 
CREATE INDEX REPORTSTRUCTURECRIDZUS92483377 
       ON REPORTSTRUCTURE ( 
           CRID_Z_USER ) ;
 
 
-- Main key for Entity - ReportStructureAccount 
CREATE UNIQUE INDEX UREPORTSTRUCTUREACCOUN92481992 
       ON REPORTSTRUCTUREACCOUNT ( 
           ID ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTUREGROUP(has [0:m] ) REPORTSTRUCTUREACCOUNT' 
CREATE INDEX REPORTSTRUCTUREACCOUNT92483396 
       ON REPORTSTRUCTUREACCOUNT ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(has [0:m] ) REPORTSTRUCTUREACCOUNT' 
CREATE INDEX REPORTSTRUCTUREACCOUNT92483398 
       ON REPORTSTRUCTUREACCOUNT ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Main key for Entity - ReportStructureCategory 
CREATE UNIQUE INDEX UREPORTSTRUCTURECATEGO92481995 
       ON REPORTSTRUCTURECATEGORY ( 
           ID ) ;
 
 
-- Main key for Entity - ReportStructureCC 
CREATE UNIQUE INDEX UREPORTSTRUCTURECC_ID_92482000 
       ON REPORTSTRUCTURECC ( 
           ID ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTUREGROUP(has [0:m] ) REPORTSTRUCTURECC' 
CREATE INDEX REPORTSTRUCTURECCFKIDR92483366 
       ON REPORTSTRUCTURECC ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(for [0:m] ) REPORTSTRUCTURECC' 
CREATE INDEX REPORTSTRUCTURECCFKIDG92483367 
       ON REPORTSTRUCTURECC ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Main key for Entity - ReportStructureChartEntry 
CREATE UNIQUE INDEX UREPORTSTRUCTURECHARTE92482003 
       ON REPORTSTRUCTURECHARTENTRY ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(has [0:m] ) REPORTSTRUCTURECHARTENTRY' 
CREATE INDEX REPORTSTRUCTURECHARTEN92483621 
       ON REPORTSTRUCTURECHARTENTRY ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTUREGROUP(has [0:m] ) REPORTSTRUCTURECHARTENTRY' 
CREATE INDEX REPORTSTRUCTURECHARTEN92483622 
       ON REPORTSTRUCTURECHARTENTRY ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Main key for Entity - ReportStructureCostCenter 
CREATE UNIQUE INDEX UREPORTSTRUCTURECOSTCE92482006 
       ON REPORTSTRUCTURECOSTCENTER ( 
           ID ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTUREGROUP(has [0:m] ) REPORTSTRUCTURECOSTCENTER' 
CREATE INDEX REPORTSTRUCTURECOSTCEN92483397 
       ON REPORTSTRUCTURECOSTCENTER ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(has [0:m] ) REPORTSTRUCTURECOSTCENTER' 
CREATE INDEX REPORTSTRUCTURECOSTCEN92483399 
       ON REPORTSTRUCTURECOSTCENTER ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Main key for Entity - ReportStructureGroup 
CREATE UNIQUE INDEX UREPORTSTRUCTUREGROUPI92482009 
       ON REPORTSTRUCTUREGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTUREGROUP(has subgroup [0:m] ) REPORTSTRUCTUREGROUP' 
CREATE INDEX REPORTSTRUCTUREGROUPFK92483394 
       ON REPORTSTRUCTUREGROUP ( 
           FKSBIDREPORTSTRUCT ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTURE(has [0:m] ) REPORTSTRUCTUREGROUP' 
CREATE INDEX REPORTSTRUCTUREGROUPFK92483401 
       ON REPORTSTRUCTUREGROUP ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Main key for Entity - RequiredGroup 
CREATE UNIQUE INDEX UREQUIREDGROUP_ID_924820160 
       ON REQUIREDGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGE(has [0:m] ) REQUIREDGROUP' 
CREATE INDEX REQUIREDGROUPFKIDCOLLE92483675 
       ON REQUIREDGROUP ( 
           FK_ID_COLLEGE ) ;
 
 
-- Main key for Entity - RequiredSubGroup 
CREATE UNIQUE INDEX UREQUIREDSUBGROUP_ID_924820280 
       ON REQUIREDSUBGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'REQUIREDGROUP(has [0:m] ) REQUIREDSUBGROUP' 
CREATE INDEX REQUIREDSUBGROUPFKIDRE92484067 
       ON REQUIREDSUBGROUP ( 
           FK_ID_REQUIREDGROU ) ;
 
 
-- Main key for Entity - ResultSet 
CREATE UNIQUE INDEX URESULTSET_ID_924820330 
       ON RESULTSET ( 
           ID ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(has [0:m] ) RESULTSET' 
CREATE INDEX RESULTSETFKIDSTOREDQUE92484400 
       ON RESULTSET ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Main key for Entity - RetentionRisk 
CREATE UNIQUE INDEX URETENTIONRISK_ID_924820410 
       ON RETENTIONRISK ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) RETENTIONRISK' 
CREATE INDEX RETENTIONRISKFKIDSTUDE92483721 
       ON RETENTIONRISK ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - ReusableEmailStatement 
CREATE UNIQUE INDEX UREUSABLEEMAILSTATEMEN92482047 
       ON REUSABLEEMAILSTATEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(has [0:m] ) REUSABLEEMAILSTATEMENT' 
CREATE INDEX REUSABLEEMAILSTATEMENT92483348 
       ON REUSABLEEMAILSTATEMENT ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - Room 
CREATE UNIQUE INDEX UROOM_ID_924820530 
       ON ROOM ( 
           ID ) ;
 
 
-- Index for Relationship - 'BUILDING(has [0:m] ) ROOM' 
CREATE INDEX ROOM_FK_ID_BUILDING_924839230 
       ON ROOM ( 
           FK_ID_BUILDING ) ;
 
 
-- Main key for Entity - SAAnnualAdmin 
CREATE UNIQUE INDEX USAANNUALADMIN_ID_924820820 
       ON SAANNUALADMIN ( 
           ID ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is the default for Refunds [0:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDSATRA92483501 
       ON SAANNUALADMIN ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is the registration fee  [0:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDSAT0292483502 
       ON SAANNUALADMIN ( 
           FKIDSATRANSACTIO02 ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is the default Admission fee [1:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDSAT0392483503 
       ON SAANNUALADMIN ( 
           FKIDSATRANSACTIO03 ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDADMIN92483526 
       ON SAANNUALADMIN ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'MEALPLAN(is default for a [0:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDMEALP92483527 
       ON SAANNUALADMIN ( 
           FK_ID_MEALPLAN ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is the default for dorm for male [0:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDSAT0492483528 
       ON SAANNUALADMIN ( 
           FKIDSATRANSACTIO04 ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is default female dorm code [0:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDSAT0592483529 
       ON SAANNUALADMIN ( 
           FKIDSATRANSACTIO05 ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(can have [0:m] ) SAANNUALADMIN' 
CREATE INDEX SAANNUALADMINFKIDCOLLE92483530 
       ON SAANNUALADMIN ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - SACollections 
CREATE UNIQUE INDEX USACOLLECTIONS_ID_924820910 
       ON SACOLLECTIONS ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has data for [0:m] ) SACOLLECTIONS' 
CREATE INDEX SACOLLECTIONSFKIDPERSO92483522 
       ON SACOLLECTIONS ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - SACombineCode 
CREATE UNIQUE INDEX USACOMBINECODE_ID_924821050 
       ON SACOMBINECODE ( 
           ID ) ;
 
 
-- Main key for Entity - SAExportHistory 
CREATE UNIQUE INDEX USAEXPORTHISTORY_ID_924821100 
       ON SAEXPORTHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'SAEXPORTPROFILE(has [0:m] ) SAEXPORTHISTORY' 
CREATE INDEX SAEXPORTHISTORYFKIDSAE92483521 
       ON SAEXPORTHISTORY ( 
           FKIDSAEXPORTPROFIL ) ;
 
 
-- Main key for Entity - SAExportProfile 
CREATE UNIQUE INDEX USAEXPORTPROFILE_ID_924821150 
       ON SAEXPORTPROFILE ( 
           ID ) ;
 
 
-- Main key for Entity - SAInternalRuleVariable 
CREATE UNIQUE INDEX USAINTERNALRULEVARIABL92482126 
       ON SAINTERNALRULEVARIABLE ( 
           ID ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONTERM(has [0:m] ) SAINTERNALRULEVARIABLE' 
CREATE INDEX SAINTERNALRULEVARIABLE92484460 
       ON SAINTERNALRULEVARIABLE ( 
           FKIDCOLLEGETERMSAT ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONTERM(has [0:m] ) SAINTERNALRULEVARIABLE' 
CREATE INDEX SAINTERNALRULEVARIABLE92484461 
       ON SAINTERNALRULEVARIABLE ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Main key for Entity - SASubAccount 
CREATE UNIQUE INDEX USASUBACCOUNT_ID_924821310 
       ON SASUBACCOUNT ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTPROFILE(has subs as [0:m] ) SASUBACCOUNT' 
CREATE INDEX SASUBACCOUNTFKIDSTUDEN92484358 
       ON SASUBACCOUNT ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'CAMPUSORGANIZATION(for [0:m] ) SASUBACCOUNT' 
CREATE INDEX SASUBACCOUNTFKIDCAMPUS92484359 
       ON SASUBACCOUNT ( 
           FKIDCAMPUSORGANIZA ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(can have [0:m] ) SASUBACCOUNT' 
CREATE INDEX SASUBACCOUNTFKIDDEPART92484360 
       ON SASUBACCOUNT ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(for [0:m] ) SASUBACCOUNT' 
CREATE INDEX SASUBACCOUNTFKIDGLCOST92484361 
       ON SASUBACCOUNT ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Main key for Entity - SASubAccountItem 
CREATE UNIQUE INDEX USASUBACCOUNTITEM_ID_924821400 
       ON SASUBACCOUNTITEM ( 
           ID ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(is for  [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDGL92483421 
       ON SASUBACCOUNTITEM ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Index for Relationship - 'BATCHEDITLIST(has [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDBA92483422 
       ON SASUBACCOUNTITEM ( 
           FK_ID_BATCHEDITLIS ) ;
 
 
-- Index for Relationship - 'GLACCOUNTTRANSAPPLIED(has [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDGL92483423 
       ON SASUBACCOUNTITEM ( 
           FKIDGLACCOUNTTRANS ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(has [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDGL92483559 
       ON SASUBACCOUNTITEM ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Index for Relationship - 'GLSTORECODE(is for [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDGL92483618 
       ON SASUBACCOUNTITEM ( 
           FK_ID_GLSTORECODE ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(for [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDGL92483619 
       ON SASUBACCOUNTITEM ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(for credit [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMCREDIT92483620 
       ON SASUBACCOUNTITEM ( 
           CREDITIDGLCHARTENT ) ;
 
 
-- Index for Relationship - 'SASUBACCOUNT(has a list of [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDSA92484363 
       ON SASUBACCOUNTITEM ( 
           FK_ID_SASUBACCOUNT ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTTRANSAPPLIED(is generated by (max card 1) [0:m] ) SASUBACCOUNTITEM' 
CREATE INDEX SASUBACCOUNTITEMFKIDST92484364 
       ON SASUBACCOUNTITEM ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Main key for Entity - SATransactionCode 
CREATE UNIQUE INDEX USATRANSACTIONCODE_ID_92482147 
       ON SATRANSACTIONCODE ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(can have [0:m] ) SATRANSACTIONCODE' 
CREATE INDEX SATRANSACTIONCODEFKIDA92483577 
       ON SATRANSACTIONCODE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULESET(can qualify for [0:m] ) SATRANSACTIONCODE' 
CREATE INDEX SATRANSACTIONCODEFKIDS92483609 
       ON SATRANSACTIONCODE ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULESET(is the refund qualifier of [0:m] ) SATRANSACTIONCODE' 
CREATE INDEX SATRANSACTIONCODEFKI0292483610 
       ON SATRANSACTIONCODE ( 
           FKIDSTUDENTACCOU02 ) ;
 
 
-- Index for Relationship - 'SACOMBINECODE(can soft link [0:m] ) SATRANSACTIONCODE' 
CREATE INDEX SATRANSACTIONCODEFKIDS92483611 
       ON SATRANSACTIONCODE ( 
           FK_ID_SACOMBINECOD ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(debited from [0:m] ) SATRANSACTIONCODE' 
CREATE INDEX SATRANSACTIONCODEFKIDG92483615 
       ON SATRANSACTIONCODE ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is credited from [0:m] ) SATRANSACTIONCODE' 
CREATE INDEX SATRANSACTIONCODECRIDG92483627 
       ON SATRANSACTIONCODE ( 
           CRID_GLCHARTENTRY ) ;
 
 
-- Main key for Entity - SATransactionTerm 
CREATE UNIQUE INDEX USATRANSACTIONTERM_ID_92484078 
       ON SATRANSACTIONTERM ( 
           FK_ID_COLLEGETERM, 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULESET(determines amount for [0:m] ) SATRANSACTIONTERM' 
CREATE INDEX SATRANSACTIONTERMFKIDS92483540 
       ON SATRANSACTIONTERM ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) SATRANSACTIONTERM' 
CREATE INDEX SATRANSACTIONTERMFKIDC92484078 
       ON SATRANSACTIONTERM ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(for [0:m] ) SATRANSACTIONTERM' 
CREATE INDEX SATRANSACTIONTERMFKIDC92484079 
       ON SATRANSACTIONTERM ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(has [0:m] ) SATRANSACTIONTERM' 
CREATE INDEX SATRANSACTIONTERMFKIDS92484080 
       ON SATRANSACTIONTERM ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Main key for Entity - SavedDegreeAudit 
CREATE UNIQUE INDEX USAVEDDEGREEAUDIT_ID_924821760 
       ON SAVEDDEGREEAUDIT ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) SAVEDDEGREEAUDIT' 
CREATE INDEX SAVEDDEGREEAUDITFKIDST92483767 
       ON SAVEDDEGREEAUDIT ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'z_USER(generated [0:m] ) SAVEDDEGREEAUDIT' 
CREATE INDEX SAVEDDEGREEAUDITFKIDZU92484051 
       ON SAVEDDEGREEAUDIT ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(can have [0:m] ) SAVEDDEGREEAUDIT' 
CREATE INDEX SAVEDDEGREEAUDITFKIDDE92484052 
       ON SAVEDDEGREEAUDIT ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Main key for Entity - ScheduledSession 
CREATE UNIQUE INDEX USCHEDULEDSESSION_ID_924821830 
       ON SCHEDULEDSESSION ( 
           ID ) ;
 
 
-- Index for Relationship - 'ROOM(for [0:m] ) SCHEDULEDSESSION' 
CREATE INDEX SCHEDULEDSESSIONFKIDRO92483816 
       ON SCHEDULEDSESSION ( 
           FK_ID_ROOM ) ;
 
 
-- Index for Relationship - 'EVENT(for [0:m] ) SCHEDULEDSESSION' 
CREATE INDEX SCHEDULEDSESSIONFKIDEV92483821 
       ON SCHEDULEDSESSION ( 
           FK_ID_EVENT ) ;
 
 
-- Main key for Entity - Scholarship 
CREATE UNIQUE INDEX USCHOLARSHIP_ID_924821940 
       ON SCHOLARSHIP ( 
           ID ) ;
-- Main key for Entity - Scholarship 
CREATE INDEX SCHOLARSHIPDESCRIPTION92482198 
       ON SCHOLARSHIP ( 
           DESCRIPTION ) ;
 
 
-- Index for Relationship - 'FUND(is the funding for [0:m] ) SCHOLARSHIP' 
CREATE INDEX SCHOLARSHIP_FK_ID_FUND92484348 
       ON SCHOLARSHIP ( 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) SCHOLARSHIP' 
CREATE INDEX SCHOLARSHIPFKIDADMINIS92484350 
       ON SCHOLARSHIP ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - ScholarshipAward 
CREATE UNIQUE INDEX USCHOLARSHIPAWARD_ID_924822090 
       ON SCHOLARSHIPAWARD ( 
           ID ) ;
 
 
-- Index for Relationship - 'SCHOLARSHIP(has [0:m] ) SCHOLARSHIPAWARD' 
CREATE INDEX SCHOLARSHIPAWARDFKIDSC92484068 
       ON SCHOLARSHIPAWARD ( 
           FK_ID_SCHOLARSHIP ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) SCHOLARSHIPAWARD' 
CREATE INDEX SCHOLARSHIPAWARDFKIDPE92484069 
       ON SCHOLARSHIPAWARD ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - School 
CREATE UNIQUE INDEX USCHOOL_ID_924822140 
       ON SCHOOL ( 
           ID ) ;
-- Main key for Entity - School 
CREATE INDEX SCHOOL_NAME_924822170 
       ON SCHOOL ( 
           NAME ) ;
 
 
-- Index for Relationship - 'ADDRESS(is primary [0:1] ) SCHOOL' 
CREATE INDEX SCHOOL_FK_ID_ADDRESS_924843220 
       ON SCHOOL ( 
           FK_ID_ADDRESS ) ;
 
 
-- Main key for Entity - SchoolPersonRole 
CREATE UNIQUE INDEX USCHOOLPERSONROLE_ID_924822310 
       ON SCHOOLPERSONROLE ( 
           ID ) ;
-- Main key for Entity - SchoolPersonRole 
CREATE INDEX SCHOOLPERSONROLE_TYPE_92482232 
       ON SCHOOLPERSONROLE ( 
           TYPE ) ;
 
 
-- Index for Relationship - 'SCHOOL(can have [0:m] ) SCHOOLPERSONROLE' 
CREATE INDEX SCHOOLPERSONROLEFKIDSC92484392 
       ON SCHOOLPERSONROLE ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'PERSON(for [0:m] ) SCHOOLPERSONROLE' 
CREATE INDEX SCHOOLPERSONROLEFKIDPE92484393 
       ON SCHOOLPERSONROLE ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - SecurityArea 
CREATE UNIQUE INDEX USECURITYAREA_ID_924822360 
       ON SECURITYAREA ( 
           ID ) ;
 
 
-- Index for Relationship - 'SECURITYSET(has [0:m] ) SECURITYAREA' 
CREATE INDEX SECURITYAREAFKIDSECURI92483974 
       ON SECURITYAREA ( 
           FK_ID_SECURITYSET ) ;
 
 
-- Index for Relationship - 'SECURITYTEMPLATE(has [0:m] ) SECURITYAREA' 
CREATE INDEX SECURITYAREAFKIDSECURI92483986 
       ON SECURITYAREA ( 
           FKIDSECURITYTEMPLA ) ;
 
 
-- Main key for Entity - SecuritySection 
CREATE UNIQUE INDEX USECURITYSECTION_ID_924822410 
       ON SECURITYSECTION ( 
           ID ) ;
 
 
-- Index for Relationship - 'SECURITYAREA(has [0:m] ) SECURITYSECTION' 
CREATE INDEX SECURITYSECTIONFKIDSEC92483972 
       ON SECURITYSECTION ( 
           FK_ID_SECURITYAREA ) ;
 
 
-- Main key for Entity - SecuritySet 
CREATE UNIQUE INDEX USECURITYSET_ID_924822500 
       ON SECURITYSET ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) SECURITYSET' 
CREATE INDEX SECURITYSETFKIDADMINIS92483973 
       ON SECURITYSET ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'USERGROUP(can have security settings of [0:m] ) SECURITYSET' 
CREATE INDEX SECURITYSETFKIDUSERGRO92483975 
       ON SECURITYSET ( 
           FK_ID_USERGROUP ) ;
 
 
-- Main key for Entity - SecuritySubSection 
CREATE UNIQUE INDEX USECURITYSUBSECTION_ID92482253 
       ON SECURITYSUBSECTION ( 
           ID ) ;
 
 
-- Index for Relationship - 'SECURITYSECTION(has [0:m] ) SECURITYSUBSECTION' 
CREATE INDEX SECURITYSUBSECTIONFKID92483969 
       ON SECURITYSUBSECTION ( 
           FKIDSECURITYSECTIO ) ;
 
 
-- Main key for Entity - SecurityTemplate 
CREATE UNIQUE INDEX USECURITYTEMPLATE_ID_924822590 
       ON SECURITYTEMPLATE ( 
           ID ) ;
 
 
-- Main key for Entity - Staff 
CREATE UNIQUE INDEX USTAFF_ID_924822640 
       ON STAFF ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(isa [0:1] ) STAFF' 
CREATE INDEX STAFF_FK_ID_PERSON_924843740 
       ON STAFF ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - StandardFacultyCompensationTable 
CREATE UNIQUE INDEX USTANDARDFACULTYCOMPEN92482273 
       ON STANDARDFACULTYCOMPENSATIONTAB ( 
           ID ) ;
 
 
-- Main key for Entity - StandardSalaryData 
CREATE UNIQUE INDEX USTANDARDSALARYDATA_ID92482280 
       ON STANDARDSALARYDATA ( 
           ID ) ;
 
 
-- Main key for Entity - StoredQuery 
CREATE UNIQUE INDEX USTOREDQUERY_ID_924822970 
       ON STOREDQUERY ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(creates [0:m] ) STOREDQUERY' 
CREATE INDEX STOREDQUERY_FK_IDZUSER92483929 
       ON STOREDQUERY ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(was used to create [0:m] ) STOREDQUERY' 
CREATE INDEX STOREDQUERYFKIDSTOREDQ92483930 
       ON STOREDQUERY ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) STOREDQUERY' 
CREATE INDEX STOREDQUERYFKIDADMINIS92484138 
       ON STOREDQUERY ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'STOREDQUERYCATEGORY(has [0:m] ) STOREDQUERY' 
CREATE INDEX STOREDQUERYFKIDSTOREDQ92484401 
       ON STOREDQUERY ( 
           FKIDSTOREDQUERYCAT ) ;
 
 
-- Main key for Entity - StoredQueryCategory 
CREATE UNIQUE INDEX USTOREDQUERYCATEGORYID92482312 
       ON STOREDQUERYCATEGORY ( 
           ID ) ;
 
 
-- Main key for Entity - Student 
CREATE UNIQUE INDEX USTUDENT_ID_924823170 
       ON STUDENT ( 
           ID ) ;
-- Main key for Entity - Student 
CREATE INDEX STUDENT_STATUS_924823200 
       ON STUDENT ( 
           STATUS ) ;
 
 
-- Index for Relationship - 'STUDENTHEALTH(for [0:m] ) STUDENT' 
CREATE INDEX STUDENTFKIDSTUDENTHEAL92483517 
       ON STUDENT ( 
           FK_ID_STUDENTHEALT ) ;
 
 
-- Index for Relationship - 'COLLEGE(is the current fo [0:m] ) STUDENT' 
CREATE INDEX STUDENT_FK_ID_COLLEGE_92483674 
       ON STUDENT ( 
           FK_ID_COLLEGE ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(is ranking year for [0:m] ) STUDENT' 
CREATE INDEX STUDENTFKIDCOLLEGEYEAR92483697 
       ON STUDENT ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Index for Relationship - 'PERSON(is educational specialist for [0:m] ) STUDENT' 
CREATE INDEX STUDENT_FK2_ID_PERSON_92483995 
       ON STUDENT ( 
           FK2_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) STUDENT' 
CREATE INDEX STUDENTFKIDADMINISTRAT92484104 
       ON STUDENT ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'PERSON(isa [0:1] ) STUDENT' 
CREATE INDEX STUDENT_FK_ID_PERSON_924843200 
       ON STUDENT ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'COHORT(has [0:m] ) STUDENT' 
CREATE INDEX STUDENT_FK_ID_COHORT_924843420 
       ON STUDENT ( 
           FK_ID_COHORT ) ;
 
 
-- Main key for Entity - Student1098T 
CREATE UNIQUE INDEX USTUDENT1098T_ID_924824030 
       ON STUDENT1098T ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENT1098T' 
CREATE INDEX STUDENT1098TFKIDSTUDEN92484450 
       ON STUDENT1098T ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - StudentAccountHistoricalProfile 
CREATE UNIQUE INDEX USTUDENTACCOUNTHISTORI92482413 
       ON STUDENTACCOUNTHISTORICALPROFIL ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTPROFILE(has historical [0:m] ) STUDENTACCOUNTHISTORICALPROFIL' 
CREATE INDEX STUDENTACCOUNTHISTORIC92483387 
       ON STUDENTACCOUNTHISTORICALPROFIL ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(for [0:m] ) STUDENTACCOUNTHISTORICALPROFIL' 
CREATE INDEX STUDENTACCOUNTHISTORIC92483388 
       ON STUDENTACCOUNTHISTORICALPROFIL ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - StudentAccountProfile 
CREATE UNIQUE INDEX USTUDENTACCOUNTPROFILE92482448 
       ON STUDENTACCOUNTPROFILE ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(is for [0:m] ) STUDENTACCOUNTPROFILE' 
CREATE INDEX STUDENTACCOUNTPROFILEF92483542 
       ON STUDENTACCOUNTPROFILE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(has [0:m] ) STUDENTACCOUNTPROFILE' 
CREATE INDEX STUDENTACCOUNTPROFILEF92483600 
       ON STUDENTACCOUNTPROFILE ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(can be the bill payer for [0:m] ) STUDENTACCOUNTPROFILE' 
CREATE INDEX STUDENTACCOUNTPROFILEF92483606 
       ON STUDENTACCOUNTPROFILE ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'STUDENT(can have per year [0:m] ) STUDENTACCOUNTPROFILE' 
CREATE INDEX STUDENTACCOUNTPROFILEF92483612 
       ON STUDENTACCOUNTPROFILE ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - StudentAccountReceipt 
CREATE UNIQUE INDEX USTUDENTACCOUNTRECEIPT92482490 
       ON STUDENTACCOUNTRECEIPT ( 
           ID ) ;
 
 
-- Main key for Entity - StudentAccountRule 
CREATE UNIQUE INDEX USTUDENTACCOUNTRULE_ID92482500 
       ON STUDENTACCOUNTRULE ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) STUDENTACCOUNTRULE' 
CREATE INDEX STUDENTACCOUNTRULEFKID92484081 
       ON STUDENTACCOUNTRULE ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - StudentAccountRuleSet 
CREATE UNIQUE INDEX USTUDENTACCOUNTRULESET92482523 
       ON STUDENTACCOUNTRULESET ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) STUDENTACCOUNTRULESET' 
CREATE INDEX STUDENTACCOUNTRULESETF92484082 
       ON STUDENTACCOUNTRULESET ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - StudentAccountStatement 
CREATE UNIQUE INDEX USTUDENTACCOUNTSTATEME92482533 
       ON STUDENTACCOUNTSTATEMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTPROFILE(can have [0:m] ) STUDENTACCOUNTSTATEMENT' 
CREATE INDEX STUDENTACCOUNTSTATEMEN92483599 
       ON STUDENTACCOUNTSTATEMENT ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(is billed via [0:m] ) STUDENTACCOUNTSTATEMENT' 
CREATE INDEX STUDENTACCOUNTSTATEMEN92483629 
       ON STUDENTACCOUNTSTATEMENT ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - StudentAccountTransApplied 
CREATE UNIQUE INDEX USTUDENTACCOUNTTRANSAP92482539 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           ID ) ;
 
 
-- Index for Relationship - 'BILLINGPERIOD(can have [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483543 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_ID_BILLINGPERIO ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRY(is created for [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483558 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_IDGLJOURNALENTR ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(credited for [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483561 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           CREDITIDGLCHARTENT ) ;
 
 
-- Index for Relationship - 'DEPOSITGROUPING(is a grouped as  [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483567 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FKIDDEPOSITGROUPIN ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(debit for [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483569 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           DEBITIDGLCHARTENTR ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(has [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483576 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTPROFILE(has [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483603 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'z_USER(applies [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483604 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'TERMOFMEALPLAN(generated [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483608 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_IDTERMOFMEALPLA ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRECEIPT(has [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSA0292483614 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FKIDSTUDENTACCOU02 ) ;
 
 
-- Index for Relationship - 'STUDENT(can have [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483628 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDDISBURSEMENT(has [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483640 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FKIDFINAIDAWARDDIS ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTTRANSAPPLIED(has adjustment [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSA0392483641 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FKIDSTUDENTACCOU03 ) ;
 
 
-- Index for Relationship - 'TERMOFRESIDENCE(generated [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483731 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FKIDTERMOFRESIDENC ) ;
 
 
-- Index for Relationship - 'BATCHEDITLIST(isa list of [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92483983 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_ID_BATCHEDITLIS ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92484076 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'CLASS(generates charges as [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92484077 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'SASUBACCOUNT(is booked as (delete) [0:m] ) STUDENTACCOUNTTRANSAPPLIED' 
CREATE INDEX STUDENTACCOUNTTRANSAPP92484365 
       ON STUDENTACCOUNTTRANSAPPLIED ( 
           FK_ID_SASUBACCOUNT ) ;
 
 
-- Main key for Entity - StudentAssignment 
CREATE UNIQUE INDEX USTUDENTASSIGNMENT_ID_92482557 
       ON STUDENTASSIGNMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENTASSIGNMENT' 
CREATE INDEX STUDENTASSIGNMENTFKIDS92483379 
       ON STUDENTASSIGNMENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'ASSIGNMENT(has [0:m] ) STUDENTASSIGNMENT' 
CREATE INDEX STUDENTASSIGNMENTFKIDA92483380 
       ON STUDENTASSIGNMENT ( 
           FK_ID_ASSIGNMENT ) ;
 
 
-- Main key for Entity - StudentCertification 
CREATE UNIQUE INDEX USTUDENTCERTIFICATIONI92482566 
       ON STUDENTCERTIFICATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) STUDENTCERTIFICATION' 
CREATE INDEX STUDENTCERTIFICATIONFK92483531 
       ON STUDENTCERTIFICATION ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'CERTIFICATIONSTATEMENT(has [0:m] ) STUDENTCERTIFICATION' 
CREATE INDEX STUDENTCERTIFICATIONFK92483532 
       ON STUDENTCERTIFICATION ( 
           FKIDCERTIFICATIONS ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENTCERTIFICATION' 
CREATE INDEX STUDENTCERTIFICATIONFK92483533 
       ON STUDENTCERTIFICATION ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - StudentChangeHistory 
CREATE UNIQUE INDEX USTUDENTCHANGEHISTORYI92482571 
       ON STUDENTCHANGEHISTORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENTCHANGEHISTORY' 
CREATE INDEX STUDENTCHANGEHISTORYFK92483340 
       ON STUDENTCHANGEHISTORY ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - StudentChangeLog 
CREATE UNIQUE INDEX USTUDENTCHANGELOG_ID_924825820 
       ON STUDENTCHANGELOG ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENTCHANGELOG' 
CREATE INDEX STUDENTCHANGELOGFKIDST92483339 
       ON STUDENTCHANGELOG ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - StudentCollegeTerm 
CREATE UNIQUE INDEX USTUDENTCOLLEGETERM_ID92482590 
       ON STUDENTCOLLEGETERM ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENTCOLLEGETERM' 
CREATE INDEX STUDENTCOLLEGETERMFKID92484445 
       ON STUDENTCOLLEGETERM ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) STUDENTCOLLEGETERM' 
CREATE INDEX STUDENTCOLLEGETERMFKID92484447 
       ON STUDENTCOLLEGETERM ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - StudentHealth 
CREATE UNIQUE INDEX USTUDENTHEALTH_ID_924826090 
       ON STUDENTHEALTH ( 
           ID ) ;
 
 
-- Main key for Entity - StudentMajorDegreeTrack 
CREATE UNIQUE INDEX USTUDENTMAJORDEGREETRA92482717 
       ON STUDENTMAJORDEGREETRACK ( 
           ID ) ;
 
 
-- Index for Relationship - 'DEGREECANDIDACY(has [0:m] ) STUDENTMAJORDEGREETRACK' 
CREATE INDEX STUDENTMAJORDEGREETRAC92483635 
       ON STUDENTMAJORDEGREETRACK ( 
           FKIDDEGREECANDIDAC ) ;
 
 
-- Index for Relationship - 'FACULTY(advises student [0:m] ) STUDENTMAJORDEGREETRACK' 
CREATE INDEX STUDENTMAJORDEGREETRAC92484056 
       ON STUDENTMAJORDEGREETRACK ( 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(has [0:m] ) STUDENTMAJORDEGREETRACK' 
CREATE INDEX STUDENTMAJORDEGREETRAC92484180 
       ON STUDENTMAJORDEGREETRACK ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Index for Relationship - 'STUDENT(has active [0:m] ) STUDENTMAJORDEGREETRACK' 
CREATE INDEX STUDENTMAJORDEGREETRAC92484181 
       ON STUDENTMAJORDEGREETRACK ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'STUDENT(has historical [0:m] ) STUDENTMAJORDEGREETRACK' 
CREATE INDEX STUDENTMAJORDEGREETRAC92484182 
       ON STUDENTMAJORDEGREETRACK ( 
           FKHISTID_STUDENT ) ;
 
 
-- Index for Relationship - 'STUDENTMAJORDEGREETRACK(has been switched from [0:1] ) STUDENTMAJORDEGREETRACK' 
CREATE INDEX STUDENTMAJORDEGREETRAC92484183 
       ON STUDENTMAJORDEGREETRACK ( 
           FKIDSTUDENTMAJORDE ) ;
 
 
-- Main key for Entity - StudentMinorDegreeTrack 
CREATE UNIQUE INDEX USTUDENTMINORDEGREETRA92482730 
       ON STUDENTMINORDEGREETRACK ( 
           ID ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(has [0:m] ) STUDENTMINORDEGREETRACK' 
CREATE INDEX STUDENTMINORDEGREETRAC92483765 
       ON STUDENTMINORDEGREETRACK ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENTMINORDEGREETRACK' 
CREATE INDEX STUDENTMINORDEGREETRAC92483766 
       ON STUDENTMINORDEGREETRACK ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - StudentNonresidencyPetition 
CREATE UNIQUE INDEX USTUDENTNONRESIDENCYPE92482733 
       ON STUDENTNONRESIDENCYPETITION ( 
           ID ) ;
 
 
-- Index for Relationship - 'PERSON(has (max 1) [0:m] ) STUDENTNONRESIDENCYPETITION' 
CREATE INDEX STUDENTNONRESIDENCYPET92483240 
       ON STUDENTNONRESIDENCYPETITION ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'z_USER(approved [0:m] ) STUDENTNONRESIDENCYPETITION' 
CREATE INDEX STUDENTNONRESIDENCYPET92483241 
       ON STUDENTNONRESIDENCYPETITION ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - StudentWaitlisted 
CREATE UNIQUE INDEX USTUDENTWAITLISTEDIDEN92483736 
       ON STUDENTWAITLISTED ( 
           FK_ID_STUDENT, 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'COURSE(is a xref course override for [0:m] ) STUDENTWAITLISTED' 
CREATE INDEX STUDENTWAITLISTEDFKIDC92483668 
       ON STUDENTWAITLISTED ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUDENTWAITLISTED' 
CREATE INDEX STUDENTWAITLISTEDFKIDS92483736 
       ON STUDENTWAITLISTED ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CLASS(has [0:m] ) STUDENTWAITLISTED' 
CREATE INDEX STUDENTWAITLISTEDFKIDC92483737 
       ON STUDENTWAITLISTED ( 
           FK_ID_CLASS ) ;
 
 
-- Main key for Entity - StudyOptionGroup 
CREATE UNIQUE INDEX USTUDYOPTIONGROUP_ID_924827470 
       ON STUDYOPTIONGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'CLASS(has [0:m] ) STUDYOPTIONGROUP' 
CREATE INDEX STUDYOPTIONGROUPFKIDCL92483769 
       ON STUDYOPTIONGROUP ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'STUDENT(is student instructor for [0:m] ) STUDYOPTIONGROUP' 
CREATE INDEX STUDYOPTIONGROUPFKIDST92483770 
       ON STUDYOPTIONGROUP ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CLASSROOMSTANDARDSCHEDULE(is used by [0:m] ) STUDYOPTIONGROUP' 
CREATE INDEX STUDYOPTIONGROUPFKIDCL92483771 
       ON STUDYOPTIONGROUP ( 
           FKIDCLASSROOMSTAND ) ;
 
 
-- Index for Relationship - 'ROOM(has scheduled [0:m] ) STUDYOPTIONGROUP' 
CREATE INDEX STUDYOPTIONGROUPFKIDRO92483773 
       ON STUDYOPTIONGROUP ( 
           FK_ID_ROOM ) ;
 
 
-- Main key for Entity - StuHistSummary 
CREATE UNIQUE INDEX USTUHISTSUMMARY_ID_924827510 
       ON STUHISTSUMMARY ( 
           ID ) ;
 
 
-- Index for Relationship - 'PROSPECTHISTSUMMARY(for [0:1] ) STUHISTSUMMARY' 
CREATE INDEX STUHISTSUMMARYFKIDPROS92483333 
       ON STUHISTSUMMARY ( 
           FKIDPROSPECTHISTSU ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(has [0:m] ) STUHISTSUMMARY' 
CREATE INDEX STUHISTSUMMARYFKIDADMI92483354 
       ON STUHISTSUMMARY ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'FYREPORTSUMMARY(has [0:m] ) STUHISTSUMMARY' 
CREATE INDEX STUHISTSUMMARYFKIDFYRE92483355 
       ON STUHISTSUMMARY ( 
           FKIDFYREPORTSUMMAR ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) STUHISTSUMMARY' 
CREATE INDEX STUHISTSUMMARYFKIDSTUD92483356 
       ON STUHISTSUMMARY ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - StuHistSummaryDegreeMajor 
CREATE UNIQUE INDEX USTUHISTSUMMARYDEGREEM92482805 
       ON STUHISTSUMMARYDEGREEMAJOR ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUHISTSUMMARY(has [0:m] ) STUHISTSUMMARYDEGREEMAJOR' 
CREATE INDEX STUHISTSUMMARYDEGREEMA92484451 
       ON STUHISTSUMMARYDEGREEMAJOR ( 
           FK_IDSTUHISTSUMMAR ) ;
 
 
-- Main key for Entity - SubAssignment 
CREATE UNIQUE INDEX USUBASSIGNMENT_ID_924828100 
       ON SUBASSIGNMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ASSIGNMENT(has [0:m] ) SUBASSIGNMENT' 
CREATE INDEX SUBASSIGNMENTFKIDASSIG92483378 
       ON SUBASSIGNMENT ( 
           FK_ID_ASSIGNMENT ) ;
 
 
-- Main key for Entity - TermOfMealPlan 
CREATE UNIQUE INDEX UTERMOFMEALPLAN_ID_924828220 
       ON TERMOFMEALPLAN ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTPROFILE(can have multiple [0:m] ) TERMOFMEALPLAN' 
CREATE INDEX TERMOFMEALPLANFKIDSTUD92483605 
       ON TERMOFMEALPLAN ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'MEALPLAN(is tied to a profile as [0:m] ) TERMOFMEALPLAN' 
CREATE INDEX TERMOFMEALPLANFKIDMEAL92483607 
       ON TERMOFMEALPLAN ( 
           FK_ID_MEALPLAN ) ;
 
 
-- Main key for Entity - TermOfResidence 
CREATE UNIQUE INDEX UTERMOFRESIDENCE_ID_924828280 
       ON TERMOFRESIDENCE ( 
           ID ) ;
 
 
-- Index for Relationship - 'OCCUPANTUNIT(has [0:m] ) TERMOFRESIDENCE' 
CREATE INDEX TERMOFRESIDENCEFKIDOCC92483730 
       ON TERMOFRESIDENCE ( 
           FK_ID_OCCUPANTUNIT ) ;
 
 
-- Index for Relationship - 'ROOM(has [0:m] ) TERMOFRESIDENCE' 
CREATE INDEX TERMOFRESIDENCEFKIDROO92483906 
       ON TERMOFRESIDENCE ( 
           FK_ID_ROOM ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) TERMOFRESIDENCE' 
CREATE INDEX TERMOFRESIDENCEFKIDSTU92483907 
       ON TERMOFRESIDENCE ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - Territory 
CREATE UNIQUE INDEX UTERRITORY_ID_924828350 
       ON TERRITORY ( 
           ID ) ;
 
 
-- Index for Relationship - 'STAFF(is counselor for [0:m] ) TERRITORY' 
CREATE INDEX TERRITORY_FK_ID_STAFF_92483967 
       ON TERRITORY ( 
           FK_ID_STAFF ) ;
 
 
-- Main key for Entity - TrainingChild 
CREATE UNIQUE INDEX UTRAININGCHILD_ID_924828400 
       ON TRAININGCHILD ( 
           ID ) ;
 
 
-- Index for Relationship - 'TRAININGPARENT(has [0:m] ) TRAININGCHILD' 
CREATE INDEX TRAININGCHILDFKIDTRAIN92483385 
       ON TRAININGCHILD ( 
           FK_IDTRAININGPAREN ) ;
 
 
-- Main key for Entity - TrainingGrandChild 
CREATE UNIQUE INDEX UTRAININGGRANDCHILD_ID92482855 
       ON TRAININGGRANDCHILD ( 
           ID ) ;
 
 
-- Index for Relationship - 'TRAININGCHILD(has [0:m] ) TRAININGGRANDCHILD' 
CREATE INDEX TRAININGGRANDCHILDFKID92483386 
       ON TRAININGGRANDCHILD ( 
           FK_ID_TRAININGCHIL ) ;
 
 
-- Main key for Entity - TrainingParent 
CREATE UNIQUE INDEX UTRAININGPARENT_ID_924828700 
       ON TRAININGPARENT ( 
           ID ) ;
 
 
-- Main key for Entity - Transaction 
CREATE UNIQUE INDEX Uz_TRANSACTION_ID_924828910 
       ON z_TRANSACTION ( 
           ID ) ;
-- Main key for Entity - Transaction 
CREATE INDEX z_TRANSACTION_USERID_924828860 
       ON z_TRANSACTION ( 
           USERID ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDEMPLOY92483492 
       ON z_TRANSACTION ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Index for Relationship - 'CLASS(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX z_TRANSACTIONFKIDCLASS92483847 
       ON z_TRANSACTION ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'COURSE(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDCOURSE92483922 
       ON z_TRANSACTION ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COHORT(has [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDCOHORT92483987 
       ON z_TRANSACTION ( 
           FK_ID_COHORT ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDORGANI92484165 
       ON z_TRANSACTION ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'CHURCH(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDCHURCH92484166 
       ON z_TRANSACTION ( 
           FK_ID_CHURCH ) ;
 
 
-- Index for Relationship - 'DEPOSIT(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDDEPOSI92484168 
       ON z_TRANSACTION ( 
           FK_ID_DEPOSIT ) ;
 
 
-- Index for Relationship - 'DONATION(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDDONATI92484169 
       ON z_TRANSACTION ( 
           FK_ID_DONATION ) ;
 
 
-- Index for Relationship - 'PROSPECT(for [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDPROSPE92484170 
       ON z_TRANSACTION ( 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'DONOR(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX z_TRANSACTIONFKIDDONOR92484198 
       ON z_TRANSACTION ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'EVENT(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX z_TRANSACTIONFKIDEVENT92484199 
       ON z_TRANSACTION ( 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'FACULTY(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDFACULT92484201 
       ON z_TRANSACTION ( 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'FUND(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX z_TRANSACTION_FKIDFUND92484202 
       ON z_TRANSACTION ( 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'GIFT(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX z_TRANSACTION_FKIDGIFT92484209 
       ON z_TRANSACTION ( 
           FK_ID_GIFT ) ;
 
 
-- Index for Relationship - 'PERSON(for [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDPERSON92484251 
       ON z_TRANSACTION ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'PLEDGE(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDPLEDGE92484252 
       ON z_TRANSACTION ( 
           FK_ID_PLEDGE ) ;
 
 
-- Index for Relationship - 'POTENTIALGIFT(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDPOTENT92484254 
       ON z_TRANSACTION ( 
           FK_ID_POTENTIALGIF ) ;
 
 
-- Index for Relationship - 'RECEIPT(for [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDRECEIP92484255 
       ON z_TRANSACTION ( 
           FK_ID_RECEIPT ) ;
 
 
-- Index for Relationship - 'SCHOOL(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDSCHOOL92484256 
       ON z_TRANSACTION ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'STAFF(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX z_TRANSACTIONFKIDSTAFF92484257 
       ON z_TRANSACTION ( 
           FK_ID_STAFF ) ;
 
 
-- Index for Relationship - 'STUDENT(has performed against it [0:m] ) z_TRANSACTION' 
CREATE INDEX zTRANSACTIONFKIDSTUDEN92484258 
       ON z_TRANSACTION ( 
           FK_ID_STUDENT ) ;
 
 
-- Main key for Entity - TranscriptRequest 
CREATE UNIQUE INDEX UTRANSCRIPTREQUEST_ID_92482895 
       ON TRANSCRIPTREQUEST ( 
           ID ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) TRANSCRIPTREQUEST' 
CREATE INDEX TRANSCRIPTREQUESTFKIDS92484034 
       ON TRANSCRIPTREQUEST ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'ADDRESS(was for [0:m] ) TRANSCRIPTREQUEST' 
CREATE INDEX TRANSCRIPTREQUESTFKIDA92484035 
       ON TRANSCRIPTREQUEST ( 
           FK_ID_ADDRESS ) ;
 
 
-- Main key for Entity - TransferCourseApprovalRequest 
CREATE UNIQUE INDEX UTRANSFERCOURSEAPPROVA92482913 
       ON TRANSFERCOURSEAPPROVALREQUEST ( 
           ID ) ;
 
 
-- Index for Relationship - 'COURSE(has [0:m] ) TRANSFERCOURSEAPPROVALREQUEST' 
CREATE INDEX TRANSFERCOURSEAPPROVAL92483662 
       ON TRANSFERCOURSEAPPROVALREQUEST ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'DEGREECANDIDACY(has [0:m] ) TRANSFERCOURSEAPPROVALREQUEST' 
CREATE INDEX TRANSFERCOURSEAPPROVAL92483671 
       ON TRANSFERCOURSEAPPROVALREQUEST ( 
           FKIDDEGREECANDIDAC ) ;
 
 
-- Main key for Entity - TransferGroup 
CREATE UNIQUE INDEX UTRANSFERGROUP_ID_924829220 
       ON TRANSFERGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'SCHOOL(has transfer [0:m] ) TRANSFERGROUP' 
CREATE INDEX TRANSFERGROUPFKIDSCHOO92483554 
       ON TRANSFERGROUP ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) TRANSFERGROUP' 
CREATE INDEX TRANSFERGROUPFKIDSTUDE92483696 
       ON TRANSFERGROUP ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(has [0:m] ) TRANSFERGROUP' 
CREATE INDEX TRANSFERGROUPFKIDCOLLE92483698 
       ON TRANSFERGROUP ( 
           FK_ID_COLLEGETERM ) ;
 
 
-- Main key for Entity - TransferGroupTextLine 
CREATE UNIQUE INDEX UTRANSFERGROUPTEXTLINE92482937 
       ON TRANSFERGROUPTEXTLINE ( 
           ID ) ;
 
 
-- Index for Relationship - 'TRANSFERGROUP(has [0:m] ) TRANSFERGROUPTEXTLINE' 
CREATE INDEX TRANSFERGROUPTEXTLINEF92483699 
       ON TRANSFERGROUPTEXTLINE ( 
           FK_ID_TRANSFERGROU ) ;
 
 
-- Main key for Entity - Trustee 
CREATE UNIQUE INDEX UTRUSTEE_ID_924829410 
       ON TRUSTEE ( 
           ID ) ;
 
 
-- Main key for Entity - TrusteeCommitteeAssignment 
CREATE UNIQUE INDEX UTRUSTEECOMMITTEEASSIG92482959 
       ON TRUSTEECOMMITTEEASSIGNMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'TRUSTEE(has [0:m] ) TRUSTEECOMMITTEEASSIGNMENT' 
CREATE INDEX TRUSTEECOMMITTEEASSIGN92483498 
       ON TRUSTEECOMMITTEEASSIGNMENT ( 
           FK_ID_TRUSTEE ) ;
 
 
-- Main key for Entity - TrusteeSubcommitteeAssignment 
CREATE UNIQUE INDEX UTRUSTEESUBCOMMITTEEAS92482970 
       ON TRUSTEESUBCOMMITTEEASSIGNMENT ( 
           ID ) ;
 
 
-- Index for Relationship - 'TRUSTEE(has [0:m] ) TRUSTEESUBCOMMITTEEASSIGNMENT' 
CREATE INDEX TRUSTEESUBCOMMITTEEASS92483497 
       ON TRUSTEESUBCOMMITTEEASSIGNMENT ( 
           FK_ID_TRUSTEE ) ;
 
 
-- Main key for Entity - User 
CREATE UNIQUE INDEX Uz_USER_ID_924829810 
       ON z_USER ( 
           ID ) ;
-- Main key for Entity - User 
CREATE INDEX z_USER_USERNAME_924829820 
       ON z_USER ( 
           USERNAME ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(is prefered for [0:m] ) z_USER' 
CREATE INDEX zUSERFKIDADMINISTRATIV92484285 
       ON z_USER ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'PERSON(isa [0:m] ) z_USER' 
CREATE INDEX z_USER_FK_ID_PERSON_924843750 
       ON z_USER ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - UserGroup 
CREATE UNIQUE INDEX UUSERGROUP_ID_924830140 
       ON USERGROUP ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(is default for [0:m] ) USERGROUP' 
CREATE INDEX USERGROUPFKIDADMINISTR92484004 
       ON USERGROUP ( 
           FKIDADMINISTRATIVE ) ;
 
 
-- Main key for Entity - UserTask 
CREATE UNIQUE INDEX UUSERTASK_ID_924830230 
       ON USERTASK ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(created [0:m] ) USERTASK' 
CREATE INDEX USERTASK_FK_ID_Z_USER_92483304 
       ON USERTASK ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - UserTraceRecord 
CREATE UNIQUE INDEX UUSERTRACERECORD_ID_924830360 
       ON USERTRACERECORD ( 
           ID ) ;
 
 
-- Main key for Entity - VehicleRegistration 
CREATE UNIQUE INDEX UVEHICLEREGISTRATIONID92483045 
       ON VEHICLEREGISTRATION ( 
           ID ) ;
-- Main key for Entity - VehicleRegistration 
CREATE INDEX VEHICLEREGISTRATIONREG92483047 
       ON VEHICLEREGISTRATION ( 
           REGISTRATIONNUMBER ) ;
-- Main key for Entity - VehicleRegistration 
CREATE INDEX VEHICLEREGISTRATIONPLA92483052 
       ON VEHICLEREGISTRATION ( 
           PLATENUMBER ) ;
 
 
-- Index for Relationship - 'PERSON(can have [0:m] ) VEHICLEREGISTRATION' 
CREATE INDEX VEHICLEREGISTRATIONFKI92483523 
       ON VEHICLEREGISTRATION ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'COLLEGEYEAR(for [0:m] ) VEHICLEREGISTRATION' 
CREATE INDEX VEHICLEREGISTRATIONFKI92483524 
       ON VEHICLEREGISTRATION ( 
           FK_ID_COLLEGEYEAR ) ;
 
 
-- Main key for Entity - Vendor 
CREATE UNIQUE INDEX UVENDOR_ID_924830570 
       ON VENDOR ( 
           ID ) ;
 
 
-- Index for Relationship - 'ADDRESS(for orders [0:1] ) VENDOR' 
CREATE INDEX VENDOR_ORDERID_ADDRESS92483442 
       ON VENDOR ( 
           ORDERID_ADDRESS ) ;
 
 
-- Index for Relationship - 'ADDRESS(remitted from [0:1] ) VENDOR' 
CREATE INDEX VENDOR_REMITID_ADDRESS92483443 
       ON VENDOR ( 
           REMITID_ADDRESS ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is the default for [0:m] ) VENDOR' 
CREATE INDEX VENDORFKIDGLCHARTENTRY92483475 
       ON VENDOR ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(is default [0:m] ) VENDOR' 
CREATE INDEX VENDOR_FK_IDGLACCOUNTS92483476 
       ON VENDOR ( 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Index for Relationship - 'APTERMS(for [0:m] ) VENDOR' 
CREATE INDEX VENDOR_FK_ID_APTERMS_924836780 
       ON VENDOR ( 
           FK_ID_APTERMS ) ;
 
 
-- Index for Relationship - 'PERSON(can be a [0:m] ) VENDOR' 
CREATE INDEX VENDOR_FK_ID_PERSON_924836790 
       ON VENDOR ( 
           FK_ID_PERSON ) ;
 
 
-- Main key for Entity - WebAdditionalInteractivePage 
CREATE UNIQUE INDEX UWEBADDITIONALINTERACT92483072 
       ON WEBADDITIONALINTERACTIVEPAGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'WEBPAGE(has [0:m] ) WEBADDITIONALINTERACTIVEPAGE' 
CREATE INDEX WEBADDITIONALINTERACTI92483598 
       ON WEBADDITIONALINTERACTIVEPAGE ( 
           FK_ID_WEBPAGE ) ;
 
 
-- Main key for Entity - WebDesignStructure 
CREATE UNIQUE INDEX UWEBDESIGNSTRUCTURE_ID92483076 
       ON WEBDESIGNSTRUCTURE ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(created [0:m] ) WEBDESIGNSTRUCTURE' 
CREATE INDEX WEBDESIGNSTRUCTUREFKID92483570 
       ON WEBDESIGNSTRUCTURE ( 
           FK_ID_Z_USER ) ;
 
 
-- Main key for Entity - WebPage 
CREATE UNIQUE INDEX UWEBPAGE_ID_924830810 
       ON WEBPAGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'WEBDESIGNSTRUCTURE(has [0:m] ) WEBPAGE' 
CREATE INDEX WEBPAGEFKIDWEBDESIGNST92483597 
       ON WEBPAGE ( 
           FKIDWEBDESIGNSTRUC ) ;
 
 
-- Index for Relationship - 'WEBPAGE(has sub [0:m] ) WEBPAGE' 
CREATE INDEX WEBPAGE_FK_ID_WEBPAGE_92483613 
       ON WEBPAGE ( 
           FK_ID_WEBPAGE ) ;
 
 
-- Main key for Entity - WebUserMessage 
CREATE UNIQUE INDEX UWEBUSERMESSAGE_ID_924830950 
       ON WEBUSERMESSAGE ( 
           ID ) ;
 
 
-- Index for Relationship - 'z_USER(created [0:m] ) WEBUSERMESSAGE' 
CREATE INDEX WEBUSERMESSAGEFKIDZUSE92483341 
       ON WEBUSERMESSAGE ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'WEBUSERMESSAGEGROUP(has [0:m] ) WEBUSERMESSAGE' 
CREATE INDEX WEBUSERMESSAGEFKIDWEBU92483342 
       ON WEBUSERMESSAGE ( 
           FKIDWEBUSERMESSAGE ) ;
 
 
-- Main key for Entity - WebUserMessageGroup 
CREATE UNIQUE INDEX UWEBUSERMESSAGEGROUPID92483110 
       ON WEBUSERMESSAGEGROUP ( 
           ID ) ;
 
 
-- Main key for Entity - WorkStudyAllocation 
CREATE UNIQUE INDEX UWORKSTUDYALLOCATIONID92483114 
       ON WORKSTUDYALLOCATION ( 
           ID ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has [0:m] ) WORKSTUDYALLOCATION' 
CREATE INDEX WORKSTUDYALLOCATIONFKI92484036 
       ON WORKSTUDYALLOCATION ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Index for Relationship - 'FINAIDPROFILE(has [0:m] ) WORKSTUDYALLOCATION' 
CREATE INDEX WORKSTUDYALLOCATIONFKI92484037 
       ON WORKSTUDYALLOCATION ( 
           FK_ID_FINAIDPROFIL ) ;
 
 
-- Main key for Entity - YearlyContract 
CREATE UNIQUE INDEX UYEARLYCONTRACT_ID_924831190 
       ON YEARLYCONTRACT ( 
           ID ) ;
 
 
-- Index for Relationship - 'ACADEMICDEGREE(is held by [0:m] ) YEARLYCONTRACT' 
CREATE INDEX YEARLYCONTRACTFKDEGREE92483327 
       ON YEARLYCONTRACT ( 
           FKDEGREEVALUEACADE ) ;
 
 
-- Index for Relationship - 'GLBUDGET(has for generation [0:m] ) YEARLYCONTRACT' 
CREATE INDEX YEARLYCONTRACTFKIDGLBU92483489 
       ON YEARLYCONTRACT ( 
           FK_ID_GLBUDGET ) ;
 
 
-- Index for Relationship - 'YEARLYCONTRACT(is source of budget [0:m] ) YEARLYCONTRACT' 
CREATE INDEX YEARLYCONTRACTFKIDYEAR92483490 
       ON YEARLYCONTRACT ( 
           FK_IDYEARLYCONTRAC ) ;
 
 
-- Index for Relationship - 'GLFISCALYEAR(has [0:m] ) YEARLYCONTRACT' 
CREATE INDEX YEARLYCONTRACTFKIDGLFI92483536 
       ON YEARLYCONTRACT ( 
           FK_ID_GLFISCALYEAR ) ;
 
 
-- Index for Relationship - 'STANDARDSALARYDATA(is used by [0:m] ) YEARLYCONTRACT' 
CREATE INDEX YEARLYCONTRACTFKIDSTAN92483537 
       ON YEARLYCONTRACT ( 
           FKIDSTANDARDSALARY ) ;
 
 
-- Index for Relationship - 'MEDICALCODE(has [0:m] ) YEARLYCONTRACT' 
CREATE INDEX YEARLYCONTRACTFKIDMEDI92483548 
       ON YEARLYCONTRACT ( 
           FK_ID_MEDICALCODE ) ;
 
 
-- Index for Relationship - 'EMPLOYEE(has [0:m] ) YEARLYCONTRACT' 
CREATE INDEX YEARLYCONTRACTFKIDEMPL92483552 
       ON YEARLYCONTRACT ( 
           FK_ID_EMPLOYEE ) ;
 
 
-- Main key for Entity - YearlyContractRole 
CREATE UNIQUE INDEX UYEARLYCONTRACTROLE_ID92483156 
       ON YEARLYCONTRACTROLE ( 
           ID ) ;
 
 
-- Index for Relationship - 'YEARLYCONTRACT(has [0:m] ) YEARLYCONTRACTROLE' 
CREATE INDEX YEARLYCONTRACTROLEFKID92483227 
       ON YEARLYCONTRACTROLE ( 
           FK_IDYEARLYCONTRAC ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(has [0:m] ) YEARLYCONTRACTROLE' 
CREATE INDEX YEARLYCONTRACTROLEFKID92483229 
       ON YEARLYCONTRACTROLE ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'HR_POSITION(has [0:m] ) YEARLYCONTRACTROLE' 
CREATE INDEX YEARLYCONTRACTROLEFKID92483230 
       ON YEARLYCONTRACTROLE ( 
           FK_ID_HR_POSITION ) ;
 
 
-- Index for Relationship - 'ROOM(has [0:m] ) YEARLYCONTRACTROLE' 
CREATE INDEX YEARLYCONTRACTROLEFKID92483231 
       ON YEARLYCONTRACTROLE ( 
           FK_ID_ROOM ) ;
 
 
-- Main key for Entity - ZeidonGenkeyTable 
CREATE UNIQUE INDEX UZEIDONGENKEYTABLETABL92483164 
       ON ZEIDONGENKEYTABLE ( 
           TABLENAME ) ;
 
 
 
 
-- Main key for Entity - ZeidonLocking 
CREATE UNIQUE INDEX UZEIDONLOCKINGLOCKINGK92483172 
       ON ZEIDONLOCKING ( 
           LOD_NAME, 
           KEYVALUE ) ;
 
 
-- Main key for Entity - ZipCodeLookUpTable 
CREATE UNIQUE INDEX UZIPCODELOOKUPTABLESTA92483180 
       ON ZIPCODELOOKUPTABLE ( 
           STATECODE ) ;
-- Main key for Entity - ZipCodeLookUpTable 
CREATE INDEX ZIPCODELOOKUPTABLEZIPC92483183 
       ON ZIPCODELOOKUPTABLE ( 
           ZIPCODE ) ;
-- Main key for Entity - ZipCodeLookUpTable 
CREATE INDEX ZIPCODELOOKUPTABLEzLON92483185 
       ON ZIPCODELOOKUPTABLE ( 
           LONGITUDE ) ;
-- Main key for Entity - ZipCodeLookUpTable 
CREATE INDEX ZIPCODELOOKUPTABLE_LAT92483184 
       ON ZIPCODELOOKUPTABLE ( 
           LATITUDE ) ;
 
 
-- Index for Relationship - 'TERRITORY(has [0:m] ) ZIPCODELOOKUPTABLE' 
CREATE INDEX ZIPCODELOOKUPTABLEFKID92483965 
       ON ZIPCODELOOKUPTABLE ( 
           FK_ID_TERRITORY ) ;
 
 
CREATE UNIQUE INDEX UMMPERSONSMPLYDBYORGAN92483217 
       ON MM_PERSON_SMPLYDBY_ORGANIZATIO ( 
           FK_ID_ORGANIZATION, 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(employs [0:m] ) MM_PERSON_SMPLYDBY_ORGANIZATIO' 
CREATE INDEX MMPERSONSMPLYDBYORGANI92483217 
       ON MM_PERSON_SMPLYDBY_ORGANIZATIO ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'PERSON(is employed by [0:m] ) MM_PERSON_SMPLYDBY_ORGANIZATIO' 
CREATE INDEX MMPERSONSMPLYDBYORGANI92483219 
       ON MM_PERSON_SMPLYDBY_ORGANIZATIO ( 
           FK_ID_PERSON ) ;
 
 
CREATE UNIQUE INDEX UMMVENDORHASBEENONPOFO92483243 
       ON MM_VENDOR_HASBEENONPOFOR_Z_USE ( 
           FK_ID_Z_USER, 
           FK_ID_VENDOR ) ;
 
 
-- Index for Relationship - 'z_USER(has had po for [0:m] ) MM_VENDOR_HASBEENONPOFOR_Z_USE' 
CREATE INDEX MMVENDORHASBEENONPOFOR92483243 
       ON MM_VENDOR_HASBEENONPOFOR_Z_USE ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'VENDOR(has been on po for [0:m] ) MM_VENDOR_HASBEENONPOFOR_Z_USE' 
CREATE INDEX MMVENDORHASBEENONPOFOR92483245 
       ON MM_VENDOR_HASBEENONPOFOR_Z_USE ( 
           FK_ID_VENDOR ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERHSRVWDGLANNUAL92483262 
       ON MMZUSERHSRVWDGLANNUALBUDGETREV ( 
           FKIDGLANNUALBUDGET, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'GLANNUALBUDGETREVIEW(reviewed by [0:m] ) MMZUSERHSRVWDGLANNUALBUDGETREV' 
CREATE INDEX MMZUSERHSRVWDGLANNUALB92483262 
       ON MMZUSERHSRVWDGLANNUALBUDGETREV ( 
           FKIDGLANNUALBUDGET ) ;
 
 
-- Index for Relationship - 'z_USER(has reviewed [0:m] ) MMZUSERHSRVWDGLANNUALBUDGETREV' 
CREATE INDEX MMZUSERHSRVWDGLANNUALB92483264 
       ON MMZUSERHSRVWDGLANNUALBUDGETREV ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERCNTRPOFRUSRFIN92483274 
       ON MMZUSERCNTRPOFRUSRFINANCIALAPP ( 
           FKIDFINANCIALAPPRO, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'FINANCIALAPPROVALROLE(can be entered by [0:m] ) MMZUSERCNTRPOFRUSRFINANCIALAPP' 
CREATE INDEX MMZUSERCNTRPOFRUSRFINA92483274 
       ON MMZUSERCNTRPOFRUSRFINANCIALAPP ( 
           FKIDFINANCIALAPPRO ) ;
 
 
-- Index for Relationship - 'z_USER(can enter PO for User [0:m] ) MMZUSERCNTRPOFRUSRFINANCIALAPP' 
CREATE INDEX MMZUSERCNTRPOFRUSRFINA92483276 
       ON MMZUSERCNTRPOFRUSRFINANCIALAPP ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMGLCOSTCENTERCNBPRVD92483292 
       ON MMGLCOSTCENTERCNBPRVDBYFINANCI ( 
           FKIDFINANCIALAPPRO, 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'FINANCIALAPPROVALROLE(can approve [0:m] ) MMGLCOSTCENTERCNBPRVDBYFINANCI' 
CREATE INDEX MMGLCOSTCENTERCNBPRVDB92483292 
       ON MMGLCOSTCENTERCNBPRVDBYFINANCI ( 
           FKIDFINANCIALAPPRO ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(can be approved by [0:m] ) MMGLCOSTCENTERCNBPRVDBYFINANCI' 
CREATE INDEX MMGLCOSTCENTERCNBPRVDB92483294 
       ON MMGLCOSTCENTERCNBPRVDBYFINANCI ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
CREATE UNIQUE INDEX UMMAPBILLVOUCHERPYSPUR92483297 
       ON MMAPBILLVOUCHERPYSPURCHASEORDE ( 
           FK_ID_PURCHASEORDE, 
           FK_ID_APBILLVOUCHE ) ;
 
 
-- Index for Relationship - 'PURCHASEORDER(is paid by [0:m] ) MMAPBILLVOUCHERPYSPURCHASEORDE' 
CREATE INDEX MMAPBILLVOUCHERPYSPURC92483297 
       ON MMAPBILLVOUCHERPYSPURCHASEORDE ( 
           FK_ID_PURCHASEORDE ) ;
 
 
-- Index for Relationship - 'APBILLVOUCHER(pays [0:m] ) MMAPBILLVOUCHERPYSPURCHASEORDE' 
CREATE INDEX MMAPBILLVOUCHERPYSPURC92483299 
       ON MMAPBILLVOUCHERPYSPURCHASEORDE ( 
           FK_ID_APBILLVOUCHE ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERISTOCOMPLETEUS92483301 
       ON MM_Z_USER_ISTOCOMPLETE_USERTAS ( 
           FK_ID_USERTASK, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'USERTASK(is to be completed by [0:m] ) MM_Z_USER_ISTOCOMPLETE_USERTAS' 
CREATE INDEX MMZUSERISTOCOMPLETEUSE92483301 
       ON MM_Z_USER_ISTOCOMPLETE_USERTAS ( 
           FK_ID_USERTASK ) ;
 
 
-- Index for Relationship - 'z_USER(is to complete [0:m] ) MM_Z_USER_ISTOCOMPLETE_USERTAS' 
CREATE INDEX MMZUSERISTOCOMPLETEUSE92483303 
       ON MM_Z_USER_ISTOCOMPLETE_USERTAS ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMAPBILLVOUCHERLINEPY92483307 
       ON MMAPBILLVOUCHERLINEPYSPOLINEIT ( 
           FK_ID_PO_LINEITEM, 
           FKIDAPBILLVOUCHERL ) ;
 
 
-- Index for Relationship - 'PO_LINEITEM(is paid by [0:m] ) MMAPBILLVOUCHERLINEPYSPOLINEIT' 
CREATE INDEX MMAPBILLVOUCHERLINEPYS92483307 
       ON MMAPBILLVOUCHERLINEPYSPOLINEIT ( 
           FK_ID_PO_LINEITEM ) ;
 
 
-- Index for Relationship - 'APBILLVOUCHERLINE(pays [0:m] ) MMAPBILLVOUCHERLINEPYSPOLINEIT' 
CREATE INDEX MMAPBILLVOUCHERLINEPYS92483309 
       ON MMAPBILLVOUCHERLINEPYSPOLINEIT ( 
           FKIDAPBILLVOUCHERL ) ;
 
 
CREATE UNIQUE INDEX UMMGLJOURNALENTRYDETAI92483320 
       ON MMGLJOURNALENTRYDETAILSXPNSFRG ( 
           FKIDGLPROJECTCOMPO, 
           FKIDGLJOURNALENTRY ) ;
 
 
-- Index for Relationship - 'GLPROJECTCOMPONENT(has charge item [0:m] ) MMGLJOURNALENTRYDETAILSXPNSFRG' 
CREATE INDEX MMGLJOURNALENTRYDETAIL92483320 
       ON MMGLJOURNALENTRYDETAILSXPNSFRG ( 
           FKIDGLPROJECTCOMPO ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRYDETAIL(is expense for [0:m] ) MMGLJOURNALENTRYDETAILSXPNSFRG' 
CREATE INDEX MMGLJOURNALENTRYDETAIL92483322 
       ON MMGLJOURNALENTRYDETAILSXPNSFRG ( 
           FKIDGLJOURNALENTRY ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTHSENROLLMENT92483335 
       ON MM_STUDENT_HS_ENROLLMENTHISTOR ( 
           FKIDENROLLMENTHIST, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'ENROLLMENTHISTORY(for [1:m] ) MM_STUDENT_HS_ENROLLMENTHISTOR' 
CREATE INDEX MMSTUDENTHSENROLLMENTH92483335 
       ON MM_STUDENT_HS_ENROLLMENTHISTOR ( 
           FKIDENROLLMENTHIST ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) MM_STUDENT_HS_ENROLLMENTHISTOR' 
CREATE INDEX MMSTUDENTHSENROLLMENTH92483337 
       ON MM_STUDENT_HS_ENROLLMENTHISTOR ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMPROGRAMHSCHRGSATRAN92483345 
       ON MMPROGRAMHSCHRGSATRANSACTIONCO ( 
           FKIDSATRANSACTIONC, 
           FK_ID_PROGRAM ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is charge for [0:m] ) MMPROGRAMHSCHRGSATRANSACTIONCO' 
CREATE INDEX MMPROGRAMHSCHRGSATRANS92483345 
       ON MMPROGRAMHSCHRGSATRANSACTIONCO ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'PROGRAM(has charge [0:m] ) MMPROGRAMHSCHRGSATRANSACTIONCO' 
CREATE INDEX MMPROGRAMHSCHRGSATRANS92483347 
       ON MMPROGRAMHSCHRGSATRANSACTIONCO ( 
           FK_ID_PROGRAM ) ;
 
 
CREATE UNIQUE INDEX UMMGLJOURNALENTRYDETAI92483369 
       ON MMGLJOURNALENTRYDETAILFRREPORT ( 
           FKIDREPORTSTRUCTUR, 
           FKIDGLJOURNALENTRY ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTURECC(has [0:m] ) MMGLJOURNALENTRYDETAILFRREPORT' 
CREATE INDEX MMGLJOURNALENTRYDETAIL92483369 
       ON MMGLJOURNALENTRYDETAILFRREPORT ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Index for Relationship - 'GLJOURNALENTRYDETAIL(for [0:m] ) MMGLJOURNALENTRYDETAILFRREPORT' 
CREATE INDEX MMGLJOURNALENTRYDETAIL92483371 
       ON MMGLJOURNALENTRYDETAILFRREPORT ( 
           FKIDGLJOURNALENTRY ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERSLWDTSREPORTST92483374 
       ON MM_Z_USER_SLWDTSREPORTSTRUCTUR ( 
           FKIDREPORTSTRUCTUR, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTURE(allows use by [0:m] ) MM_Z_USER_SLWDTSREPORTSTRUCTUR' 
CREATE INDEX MMZUSERSLWDTSREPORTSTR92483374 
       ON MM_Z_USER_SLWDTSREPORTSTRUCTUR ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Index for Relationship - 'z_USER(is allowed to use [0:m] ) MM_Z_USER_SLWDTSREPORTSTRUCTUR' 
CREATE INDEX MMZUSERSLWDTSREPORTSTR92483376 
       ON MM_Z_USER_SLWDTSREPORTSTRUCTUR ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMGLFUNDISSDNREPORTST92483403 
       ON MM_GLFUND_ISSDN_REPORTSTRUCTUR ( 
           FKIDREPORTSTRUCTUR, 
           FK_ID_GLFUND ) ;
 
 
-- Index for Relationship - 'REPORTSTRUCTURE(includes [0:m] ) MM_GLFUND_ISSDN_REPORTSTRUCTUR' 
CREATE INDEX MMGLFUNDISSDNREPORTSTR92483403 
       ON MM_GLFUND_ISSDN_REPORTSTRUCTUR ( 
           FKIDREPORTSTRUCTUR ) ;
 
 
-- Index for Relationship - 'GLFUND(is used in [0:m] ) MM_GLFUND_ISSDN_REPORTSTRUCTUR' 
CREATE INDEX MMGLFUNDISSDNREPORTSTR92483405 
       ON MM_GLFUND_ISSDN_REPORTSTRUCTUR ( 
           FK_ID_GLFUND ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERCANMNTNCALENDA92483448 
       ON MM_Z_USER_CANMNTN_CALENDARGROU ( 
           FK_ID_CALENDARGROU, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'CALENDARGROUP(can be maintained by [0:m] ) MM_Z_USER_CANMNTN_CALENDARGROU' 
CREATE INDEX MMZUSERCANMNTNCALENDAR92483448 
       ON MM_Z_USER_CANMNTN_CALENDARGROU ( 
           FK_ID_CALENDARGROU ) ;
 
 
-- Index for Relationship - 'z_USER(can maintain [0:m] ) MM_Z_USER_CANMNTN_CALENDARGROU' 
CREATE INDEX MMZUSERCANMNTNCALENDAR92483450 
       ON MM_Z_USER_CANMNTN_CALENDARGROU ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERHASDFLTCALENDA92483453 
       ON MM_Z_USER_HASDFLT_CALENDARGROU ( 
           FK_ID_CALENDARGROU, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'CALENDARGROUP(default for [0:m] ) MM_Z_USER_HASDFLT_CALENDARGROU' 
CREATE INDEX MMZUSERHASDFLTCALENDAR92483453 
       ON MM_Z_USER_HASDFLT_CALENDARGROU ( 
           FK_ID_CALENDARGROU ) ;
 
 
-- Index for Relationship - 'z_USER(has default [0:m] ) MM_Z_USER_HASDFLT_CALENDARGROU' 
CREATE INDEX MMZUSERHASDFLTCALENDAR92483455 
       ON MM_Z_USER_HASDFLT_CALENDARGROU ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERCNSTCLNDRFRDEP92483457 
       ON MM_Z_USER_CNSTCLNDRFRDEPARTMEN ( 
           FK_ID_DEPARTMENT, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(can have calendar set by [0:m] ) MM_Z_USER_CNSTCLNDRFRDEPARTMEN' 
CREATE INDEX MMZUSERCNSTCLNDRFRDEPA92483457 
       ON MM_Z_USER_CNSTCLNDRFRDEPARTMEN ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'z_USER(can set calendar for [0:m] ) MM_Z_USER_CNSTCLNDRFRDEPARTMEN' 
CREATE INDEX MMZUSERCNSTCLNDRFRDEPA92483459 
       ON MM_Z_USER_CNSTCLNDRFRDEPARTMEN ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMCATEGORYFORVENDORID92483508 
       ON MM_CATEGORY_FOR_VENDOR ( 
           FK_ID_VENDOR, 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'VENDOR(has [0:m] ) MM_CATEGORY_FOR_VENDOR' 
CREATE INDEX MMCATEGORYFORVENDORFKI92483508 
       ON MM_CATEGORY_FOR_VENDOR ( 
           FK_ID_VENDOR ) ;
 
 
-- Index for Relationship - 'CATEGORY(for [0:m] ) MM_CATEGORY_FOR_VENDOR' 
CREATE INDEX MMCATEGORYFORVENDORFKI92483510 
       ON MM_CATEGORY_FOR_VENDOR ( 
           FK_ID_CATEGORY ) ;
 
 
CREATE UNIQUE INDEX UMMCOLLEGETERMFRBILLIN92483545 
       ON MM_COLLEGETERM_FR_BILLINGPERIO ( 
           FK_ID_BILLINGPERIO, 
           FK_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'BILLINGPERIOD(has [0:m] ) MM_COLLEGETERM_FR_BILLINGPERIO' 
CREATE INDEX MMCOLLEGETERMFRBILLING92483545 
       ON MM_COLLEGETERM_FR_BILLINGPERIO ( 
           FK_ID_BILLINGPERIO ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(for [0:m] ) MM_COLLEGETERM_FR_BILLINGPERIO' 
CREATE INDEX MMCOLLEGETERMFRBILLING92483547 
       ON MM_COLLEGETERM_FR_BILLINGPERIO ( 
           FK_ID_COLLEGETERM ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTACCOUNTRULES92483580 
       ON MMSTUDENTACCOUNTRULESETHSSTUDE ( 
           FKIDSTUDENTACCOUNT, 
           FKIDSTUDENTACCOU02 ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULE(is on [0:m] ) MMSTUDENTACCOUNTRULESETHSSTUDE' 
CREATE INDEX MMSTUDENTACCOUNTRULESE92483580 
       ON MMSTUDENTACCOUNTRULESETHSSTUDE ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULESET(has [0:m] ) MMSTUDENTACCOUNTRULESETHSSTUDE' 
CREATE INDEX MMSTUDENTACCOUNTRULE0292483582 
       ON MMSTUDENTACCOUNTRULESETHSSTUDE ( 
           FKIDSTUDENTACCOU02 ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTACCOUNTRULES92483584 
       ON MMSTUDENTACCOUNTRULESETSCHLDST ( 
           FKIDSTUDENTACCOUNT, 
           FKIDSTUDENTACCOU02 ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULESET(is parent [0:m] ) MMSTUDENTACCOUNTRULESETSCHLDST' 
CREATE INDEX MMSTUDENTACCOUNTRULESE92483584 
       ON MMSTUDENTACCOUNTRULESETSCHLDST ( 
           FKIDSTUDENTACCOUNT ) ;
 
 
-- Index for Relationship - 'STUDENTACCOUNTRULESET(is a child [0:m] ) MMSTUDENTACCOUNTRULESETSCHLDST' 
CREATE INDEX MMSTUDENTACCOUNTRULE0292483586 
       ON MMSTUDENTACCOUNTRULESETSCHLDST ( 
           FKIDSTUDENTACCOU02 ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSEHASGENEDREQUI92483588 
       ON MM_COURSE_HAS_GENEDREQUIREMENT ( 
           FKIDGENEDREQUIREME, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'GENEDREQUIREMENT(for [0:m] ) MM_COURSE_HAS_GENEDREQUIREMENT' 
CREATE INDEX MMCOURSEHASGENEDREQUIR92483588 
       ON MM_COURSE_HAS_GENEDREQUIREMENT ( 
           FKIDGENEDREQUIREME ) ;
 
 
-- Index for Relationship - 'COURSE(has [0:m] ) MM_COURSE_HAS_GENEDREQUIREMENT' 
CREATE INDEX MMCOURSEHASGENEDREQUIR92483590 
       ON MM_COURSE_HAS_GENEDREQUIREMENT ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTFRCERTIFICAT92483594 
       ON MMSTUDENTFRCERTIFICATIONSTATEM ( 
           FKIDCERTIFICATIONS, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CERTIFICATIONSTATEMENT(has [0:m] ) MMSTUDENTFRCERTIFICATIONSTATEM' 
CREATE INDEX MMSTUDENTFRCERTIFICATI92483594 
       ON MMSTUDENTFRCERTIFICATIONSTATEM ( 
           FKIDCERTIFICATIONS ) ;
 
 
-- Index for Relationship - 'STUDENT(for [0:m] ) MMSTUDENTFRCERTIFICATIONSTATEM' 
CREATE INDEX MMSTUDENTFRCERTIFICATI92483596 
       ON MMSTUDENTFRCERTIFICATIONSTATEM ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMGLACCOUNTSSTHCHRGCN92483624 
       ON MMGLACCOUNTSSTHCHRGCNTFRGLSTOR ( 
           FK_ID_GLSTORECODE, 
           FK_ID_GLACCOUNTS ) ;
 
 
-- Index for Relationship - 'GLSTORECODE(gets charged to [0:m] ) MMGLACCOUNTSSTHCHRGCNTFRGLSTOR' 
CREATE INDEX MMGLACCOUNTSSTHCHRGCNT92483624 
       ON MMGLACCOUNTSSTHCHRGCNTFRGLSTOR ( 
           FK_ID_GLSTORECODE ) ;
 
 
-- Index for Relationship - 'GLACCOUNTS(is the charge account for [0:m] ) MMGLACCOUNTSSTHCHRGCNTFRGLSTOR' 
CREATE INDEX MMGLACCOUNTSSTHCHRGCNT92483626 
       ON MMGLACCOUNTSSTHCHRGCNTFRGLSTOR ( 
           FK_ID_GLACCOUNTS ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDSOURCECNGTMNY92483631 
       ON MMFINAIDSOURCECNGTMNYFINAIDDIS ( 
           FKIDFINAIDDISBURSE, 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'FINAIDDISBURSEMENT(is for [0:m] ) MMFINAIDSOURCECNGTMNYFINAIDDIS' 
CREATE INDEX MMFINAIDSOURCECNGTMNYF92483631 
       ON MMFINAIDSOURCECNGTMNYFINAIDDIS ( 
           FKIDFINAIDDISBURSE ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(can get money [0:m] ) MMFINAIDSOURCECNGTMNYFINAIDDIS' 
CREATE INDEX MMFINAIDSOURCECNGTMNYF92483633 
       ON MMFINAIDSOURCECNGTMNYFINAIDDIS ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDAWARDDISBURSE92483637 
       ON MMFINAIDAWARDDISBURSEMENTFLFLD ( 
           FKIDFINAIDDISBURSE, 
           FKIDFINAIDAWARDDIS ) ;
 
 
-- Index for Relationship - 'FINAIDDISBURSEMENT(is the source for [0:m] ) MMFINAIDAWARDDISBURSEMENTFLFLD' 
CREATE INDEX MMFINAIDAWARDDISBURSEM92483637 
       ON MMFINAIDAWARDDISBURSEMENTFLFLD ( 
           FKIDFINAIDDISBURSE ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDDISBURSEMENT(fulfilled by [0:m] ) MMFINAIDAWARDDISBURSEMENTFLFLD' 
CREATE INDEX MMFINAIDAWARDDISBURSEM92483639 
       ON MMFINAIDAWARDDISBURSEMENTFLFLD ( 
           FKIDFINAIDAWARDDIS ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTHSHGHSCHLRQR92483649 
       ON MMSTUDENTHSHGHSCHLRQRMNTREQUIR ( 
           FK_ID_REQUIREDGROU, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'REQUIREDGROUP(is high school requirement for [0:m] ) MMSTUDENTHSHGHSCHLRQRMNTREQUIR' 
CREATE INDEX MMSTUDENTHSHGHSCHLRQRM92483649 
       ON MMSTUDENTHSHGHSCHLRQRMNTREQUIR ( 
           FK_ID_REQUIREDGROU ) ;
 
 
-- Index for Relationship - 'STUDENT(has high school requirement [0:m] ) MMSTUDENTHSHGHSCHLRQRMNTREQUIR' 
CREATE INDEX MMSTUDENTHSHGHSCHLRQRM92483651 
       ON MMSTUDENTHSHGHSCHLRQRMNTREQUIR ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSESDNMJRGPADEGR92483657 
       ON MM_COURSE_SDNMJRGPA_DEGREETRAC ( 
           FK_ID_DEGREETRACK, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(uses for major GPA [0:m] ) MM_COURSE_SDNMJRGPA_DEGREETRAC' 
CREATE INDEX MMCOURSESDNMJRGPADEGRE92483657 
       ON MM_COURSE_SDNMJRGPA_DEGREETRAC ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Index for Relationship - 'COURSE(is used in major GPA [0:m] ) MM_COURSE_SDNMJRGPA_DEGREETRAC' 
CREATE INDEX MMCOURSESDNMJRGPADEGRE92483659 
       ON MM_COURSE_SDNMJRGPA_DEGREETRAC ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSEISCROSSLISTDF92483665 
       ON MM_COURSE_ISCROSSLISTDFR_COURS ( 
           FK_ID_COURSE, 
           FK_ID_COURSE02 ) ;
 
 
-- Index for Relationship - 'COURSE(has crosslisted [0:m] ) MM_COURSE_ISCROSSLISTDFR_COURS' 
CREATE INDEX MMCOURSEISCROSSLISTDFR92483665 
       ON MM_COURSE_ISCROSSLISTDFR_COURS ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COURSE(is crosslisted for [0:m] ) MM_COURSE_ISCROSSLISTDFR_COURS' 
CREATE INDEX MMCOURSEISCROSSLISTD0292483667 
       ON MM_COURSE_ISCROSSLISTDFR_COURS ( 
           FK_ID_COURSE02 ) ;
 
 
CREATE UNIQUE INDEX UMMFACULTYOPENSACDMCDT92483681 
       ON MM_FACULTY_OPENSACDMCDTT_PERSO ( 
           FK_ID_PERSON, 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'PERSON(can view academic data for [0:m] ) MM_FACULTY_OPENSACDMCDTT_PERSO' 
CREATE INDEX MMFACULTYOPENSACDMCDTT92483681 
       ON MM_FACULTY_OPENSACDMCDTT_PERSO ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'FACULTY(opens academic data to [0:m] ) MM_FACULTY_OPENSACDMCDTT_PERSO' 
CREATE INDEX MMFACULTYOPENSACDMCDTT92483683 
       ON MM_FACULTY_OPENSACDMCDTT_PERSO ( 
           FK_ID_FACULTY ) ;
 
 
CREATE UNIQUE INDEX UMMPERSONHSPERSONVIEWS92483688 
       ON MM_PERSON_HS_PERSONVIEWSSTUDEN ( 
           FKIDPERSONVIEWSSTU, 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'PERSONVIEWSSTUDENT(for [0:m] ) MM_PERSON_HS_PERSONVIEWSSTUDEN' 
CREATE INDEX MMPERSONHSPERSONVIEWSS92483688 
       ON MM_PERSON_HS_PERSONVIEWSSTUDEN ( 
           FKIDPERSONVIEWSSTU ) ;
 
 
-- Index for Relationship - 'PERSON(has [0:m] ) MM_PERSON_HS_PERSONVIEWSSTUDEN' 
CREATE INDEX MMPERSONHSPERSONVIEWSS92483690 
       ON MM_PERSON_HS_PERSONVIEWSSTUDEN ( 
           FK_ID_PERSON ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDRULEFORFINAID92483712 
       ON MM_FINAIDRULE_FOR_FINAIDRULESE ( 
           FK_ID_FINAIDRULESE, 
           FK_ID_FINAIDRULE ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(has [0:m] ) MM_FINAIDRULE_FOR_FINAIDRULESE' 
CREATE INDEX MMFINAIDRULEFORFINAIDR92483712 
       ON MM_FINAIDRULE_FOR_FINAIDRULESE ( 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Index for Relationship - 'FINAIDRULE(for [0:m] ) MM_FINAIDRULE_FOR_FINAIDRULESE' 
CREATE INDEX MMFINAIDRULEFORFINAIDR92483714 
       ON MM_FINAIDRULE_FOR_FINAIDRULESE ( 
           FK_ID_FINAIDRULE ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDRULESETSTHCHL92483716 
       ON MMFINAIDRULESETSTHCHLDFINAIDRU ( 
           FK_ID_FINAIDRULESE, 
           FK_ID_FINAIDRULE02 ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(is a parent [0:m] ) MMFINAIDRULESETSTHCHLDFINAIDRU' 
CREATE INDEX MMFINAIDRULESETSTHCHLD92483716 
       ON MMFINAIDRULESETSTHCHLDFINAIDRU ( 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(is the child [0:m] ) MMFINAIDRULESETSTHCHLDFINAIDRU' 
CREATE INDEX MMFINAIDRULESETSTHCH0292483718 
       ON MMFINAIDRULESETSTHCHLDFINAIDRU ( 
           FK_ID_FINAIDRULE02 ) ;
 
 
CREATE UNIQUE INDEX UMMFAISIRFORFAISIRIMPO92483740 
       ON MM_FAISIR_FOR_FAISIRIMPORTLOG ( 
           FKIDFAISIRIMPORTLO, 
           FK_ID_FAISIR ) ;
 
 
-- Index for Relationship - 'FAISIRIMPORTLOG(has [0:m] ) MM_FAISIR_FOR_FAISIRIMPORTLOG' 
CREATE INDEX MMFAISIRFORFAISIRIMPOR92483740 
       ON MM_FAISIR_FOR_FAISIRIMPORTLOG ( 
           FKIDFAISIRIMPORTLO ) ;
 
 
-- Index for Relationship - 'FAISIR(for [0:m] ) MM_FAISIR_FOR_FAISIRIMPORTLOG' 
CREATE INDEX MMFAISIRFORFAISIRIMPOR92483742 
       ON MM_FAISIR_FOR_FAISIRIMPORTLOG ( 
           FK_ID_FAISIR ) ;
 
 
CREATE UNIQUE INDEX UMMREQUIREDGROUPSFLFLD92483777 
       ON MMREQUIREDGROUPSFLFLDBYDLTENRO ( 
           FKIDENROLLMENTORFO, 
           FK_ID_REQUIREDGROU ) ;
 
 
-- Index for Relationship - 'ENROLLMENTORFOREIGNEQUIVALENT(fulfills (delete) [0:m] ) MMREQUIREDGROUPSFLFLDBYDLTENRO' 
CREATE INDEX MMREQUIREDGROUPSFLFLDB92483777 
       ON MMREQUIREDGROUPSFLFLDBYDLTENRO ( 
           FKIDENROLLMENTORFO ) ;
 
 
-- Index for Relationship - 'REQUIREDGROUP(is fulfilled by (delete) [0:m] ) MMREQUIREDGROUPSFLFLDBYDLTENRO' 
CREATE INDEX MMREQUIREDGROUPSFLFLDB92483779 
       ON MMREQUIREDGROUPSFLFLDBYDLTENRO ( 
           FK_ID_REQUIREDGROU ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTSSTDNTSSSTNT92483781 
       ON MM_STUDENT_SSTDNTSSSTNTFR_CLAS ( 
           FK_ID_CLASS, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CLASS(has student assistants [0:m] ) MM_STUDENT_SSTDNTSSSTNTFR_CLAS' 
CREATE INDEX MMSTUDENTSSTDNTSSSTNTF92483781 
       ON MM_STUDENT_SSTDNTSSSTNTFR_CLAS ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'STUDENT(is student assistant for [0:m] ) MM_STUDENT_SSTDNTSSSTNTFR_CLAS' 
CREATE INDEX MMSTUDENTSSTDNTSSSTNTF92483783 
       ON MM_STUDENT_SSTDNTSSSTNTFR_CLAS ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDCOAHASFINAIDC92483786 
       ON MM_FINAIDCOA_HAS_FINAIDCOAITEM ( 
           FK_ID_FINAIDCOAITE, 
           FK_ID_FINAIDCOA ) ;
 
 
-- Index for Relationship - 'FINAIDCOAITEM(can be on [0:m] ) MM_FINAIDCOA_HAS_FINAIDCOAITEM' 
CREATE INDEX MMFINAIDCOAHASFINAIDCO92483786 
       ON MM_FINAIDCOA_HAS_FINAIDCOAITEM ( 
           FK_ID_FINAIDCOAITE ) ;
 
 
-- Index for Relationship - 'FINAIDCOA(has [0:m] ) MM_FINAIDCOA_HAS_FINAIDCOAITEM' 
CREATE INDEX MMFINAIDCOAHASFINAIDCO92483788 
       ON MM_FINAIDCOA_HAS_FINAIDCOAITEM ( 
           FK_ID_FINAIDCOA ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDRULESETCNBTHL92483793 
       ON MMFINAIDRULESETCNBTHLKPFRFINAI ( 
           FK_ID_FINAIDCOAITE, 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Index for Relationship - 'FINAIDCOAITEM(can have a lookup [0:m] ) MMFINAIDRULESETCNBTHLKPFRFINAI' 
CREATE INDEX MMFINAIDRULESETCNBTHLK92483793 
       ON MMFINAIDRULESETCNBTHLKPFRFINAI ( 
           FK_ID_FINAIDCOAITE ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(can be the lookup for [0:m] ) MMFINAIDRULESETCNBTHLKPFRFINAI' 
CREATE INDEX MMFINAIDRULESETCNBTHLK92483795 
       ON MMFINAIDRULESETCNBTHLKPFRFINAI ( 
           FK_ID_FINAIDRULESE ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDRULESETCNQLFY92483797 
       ON MMFINAIDRULESETCNQLFYFINAIDCOA ( 
           FK_ID_FINAIDCOAITE, 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Index for Relationship - 'FINAIDCOAITEM(can have qualifying [0:m] ) MMFINAIDRULESETCNQLFYFINAIDCOA' 
CREATE INDEX MMFINAIDRULESETCNQLFYF92483797 
       ON MMFINAIDRULESETCNQLFYFINAIDCOA ( 
           FK_ID_FINAIDCOAITE ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(can qualify  [0:m] ) MMFINAIDRULESETCNQLFYFINAIDCOA' 
CREATE INDEX MMFINAIDRULESETCNQLFYF92483799 
       ON MMFINAIDRULESETCNQLFYFINAIDCOA ( 
           FK_ID_FINAIDRULESE ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERCANSCHEDULEROO92483818 
       ON MM_Z_USER_CANSCHEDULE_ROOM ( 
           FK_ID_ROOM, 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'ROOM(can be scheduled by [0:m] ) MM_Z_USER_CANSCHEDULE_ROOM' 
CREATE INDEX MMZUSERCANSCHEDULEROOM92483818 
       ON MM_Z_USER_CANSCHEDULE_ROOM ( 
           FK_ID_ROOM ) ;
 
 
-- Index for Relationship - 'z_USER(can schedule [0:m] ) MM_Z_USER_CANSCHEDULE_ROOM' 
CREATE INDEX MMZUSERCANSCHEDULEROOM92483820 
       ON MM_Z_USER_CANSCHEDULE_ROOM ( 
           FK_ID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMCATEGORYCNBTDTFINAI92483828 
       ON MM_CATEGORY_CNBTDT_FINAIDSOURC ( 
           FK_ID_FINAIDSOURCE, 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(can be tied back to [0:m] ) MM_CATEGORY_CNBTDT_FINAIDSOURC' 
CREATE INDEX MMCATEGORYCNBTDTFINAID92483828 
       ON MM_CATEGORY_CNBTDT_FINAIDSOURC ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_CATEGORY_CNBTDT_FINAIDSOURC' 
CREATE INDEX MMCATEGORYCNBTDTFINAID92483830 
       ON MM_CATEGORY_CNBTDT_FINAIDSOURC ( 
           FK_ID_CATEGORY ) ;
 
 
CREATE UNIQUE INDEX UMMCONTACTLISTHASFINAI92483833 
       ON MM_CONTACTLIST_HAS_FINAIDSOURC ( 
           FK_ID_FINAIDSOURCE, 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(has [0:m] ) MM_CONTACTLIST_HAS_FINAIDSOURC' 
CREATE INDEX MMCONTACTLISTHASFINAID92483833 
       ON MM_CONTACTLIST_HAS_FINAIDSOURC ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(has [0:m] ) MM_CONTACTLIST_HAS_FINAIDSOURC' 
CREATE INDEX MMCONTACTLISTHASFINAID92483835 
       ON MM_CONTACTLIST_HAS_FINAIDSOURC ( 
           FK_ID_CONTACTLIST ) ;
 
 
CREATE UNIQUE INDEX UMMFINAIDRULESETCNLKPF92483838 
       ON MMFINAIDRULESETCNLKPFRFINAIDSO ( 
           FK_ID_FINAIDSOURCE, 
           FK_ID_FINAIDRULESE ) ;
 
 
-- Index for Relationship - 'FINAIDSOURCE(can have lookups [0:m] ) MMFINAIDRULESETCNLKPFRFINAIDSO' 
CREATE INDEX MMFINAIDRULESETCNLKPFR92483838 
       ON MMFINAIDRULESETCNLKPFRFINAIDSO ( 
           FK_ID_FINAIDSOURCE ) ;
 
 
-- Index for Relationship - 'FINAIDRULESET(can lookup for [0:m] ) MMFINAIDRULESETCNLKPFRFINAIDSO' 
CREATE INDEX MMFINAIDRULESETCNLKPFR92483840 
       ON MMFINAIDRULESETCNLKPFRFINAIDSO ( 
           FK_ID_FINAIDRULESE ) ;
 
 
CREATE UNIQUE INDEX UMMENROLLMENTORFOREIGN92483844 
       ON MMENROLLMENTORFOREIGNEQUIVALEN ( 
           FKIDFINAIDAWARDPER, 
           FKIDENROLLMENTORFO ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDPERIOD(can cover [0:m] ) MMENROLLMENTORFOREIGNEQUIVALEN' 
CREATE INDEX MMENROLLMENTORFOREIGNE92483844 
       ON MMENROLLMENTORFOREIGNEQUIVALEN ( 
           FKIDFINAIDAWARDPER ) ;
 
 
-- Index for Relationship - 'ENROLLMENTORFOREIGNEQUIVALENT(can be coverd by [0:m] ) MMENROLLMENTORFOREIGNEQUIVALEN' 
CREATE INDEX MMENROLLMENTORFOREIGNE92483846 
       ON MMENROLLMENTORFOREIGNEQUIVALEN ( 
           FKIDENROLLMENTORFO ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERHSTHRTYTCRTWEB92483855 
       ON MMZUSERHSTHRTYTCRTWEBUSERMESSA ( 
           CRIDWEBUSERMESSAGE, 
           CRID_Z_USER ) ;
 
 
-- Index for Relationship - 'WEBUSERMESSAGEGROUP(can be created by [0:m] ) MMZUSERHSTHRTYTCRTWEBUSERMESSA' 
CREATE INDEX MMZUSERHSTHRTYTCRTWEBU92483855 
       ON MMZUSERHSTHRTYTCRTWEBUSERMESSA ( 
           CRIDWEBUSERMESSAGE ) ;
 
 
-- Index for Relationship - 'z_USER(has authority to create [0:m] ) MMZUSERHSTHRTYTCRTWEBUSERMESSA' 
CREATE INDEX MMZUSERHSTHRTYTCRTWEBU92483857 
       ON MMZUSERHSTHRTYTCRTWEBUSERMESSA ( 
           CRID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMZUSERHSFLTRFRWEBUSE92483859 
       ON MMZUSERHSFLTRFRWEBUSERMESSAGEG ( 
           FLIDWEBUSERMESSAGE, 
           FLID_Z_USER ) ;
 
 
-- Index for Relationship - 'WEBUSERMESSAGEGROUP(is filtered by [0:m] ) MMZUSERHSFLTRFRWEBUSERMESSAGEG' 
CREATE INDEX MMZUSERHSFLTRFRWEBUSER92483859 
       ON MMZUSERHSFLTRFRWEBUSERMESSAGEG ( 
           FLIDWEBUSERMESSAGE ) ;
 
 
-- Index for Relationship - 'z_USER(has filter for [0:m] ) MMZUSERHSFLTRFRWEBUSERMESSAGEG' 
CREATE INDEX MMZUSERHSFLTRFRWEBUSER92483861 
       ON MMZUSERHSFLTRFRWEBUSERMESSAGEG ( 
           FLID_Z_USER ) ;
 
 
CREATE UNIQUE INDEX UMMCOLLEGETERMCNBLNKDT92483864 
       ON MMCOLLEGETERMCNBLNKDTFINAIDAWA ( 
           FKIDFINAIDAWARDPER, 
           FK_ID_COLLEGETERM ) ;
 
 
-- Index for Relationship - 'FINAIDAWARDPERIOD(can have [0:m] ) MMCOLLEGETERMCNBLNKDTFINAIDAWA' 
CREATE INDEX MMCOLLEGETERMCNBLNKDTF92483864 
       ON MMCOLLEGETERMCNBLNKDTFINAIDAWA ( 
           FKIDFINAIDAWARDPER ) ;
 
 
-- Index for Relationship - 'COLLEGETERM(can be linked to [0:m] ) MMCOLLEGETERMCNBLNKDTFINAIDAWA' 
CREATE INDEX MMCOLLEGETERMCNBLNKDTF92483866 
       ON MMCOLLEGETERMCNBLNKDTFINAIDAWA ( 
           FK_ID_COLLEGETERM ) ;
 
 
CREATE UNIQUE INDEX UMMDEGREEMINORFORSTUDE92483882 
       ON MM_DEGREEMINOR_FOR_STUDENT ( 
           FK_ID_STUDENT, 
           FK_ID_DEGREEMINOR ) ;
 
 
-- Index for Relationship - 'STUDENT(has [0:m] ) MM_DEGREEMINOR_FOR_STUDENT' 
CREATE INDEX MMDEGREEMINORFORSTUDEN92483882 
       ON MM_DEGREEMINOR_FOR_STUDENT ( 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'DEGREEMINOR(for [0:m] ) MM_DEGREEMINOR_FOR_STUDENT' 
CREATE INDEX MMDEGREEMINORFORSTUDEN92483884 
       ON MM_DEGREEMINOR_FOR_STUDENT ( 
           FK_ID_DEGREEMINOR ) ;
 
 
CREATE UNIQUE INDEX UMMCONTACTLISTCONTAINS92483892 
       ON MM_CONTACTLIST_CONTAINS_CLASS ( 
           FK_ID_CLASS, 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'CLASS(is on a [0:m] ) MM_CONTACTLIST_CONTAINS_CLASS' 
CREATE INDEX MMCONTACTLISTCONTAINSC92483892 
       ON MM_CONTACTLIST_CONTAINS_CLASS ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_CONTACTLIST_CONTAINS_CLASS' 
CREATE INDEX MMCONTACTLISTCONTAINSC92483894 
       ON MM_CONTACTLIST_CONTAINS_CLASS ( 
           FK_ID_CONTACTLIST ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSEISONACONTACTL92483896 
       ON MM_COURSE_ISONA_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_COURSE_ISONA_CONTACTLIST' 
CREATE INDEX MMCOURSEISONACONTACTLI92483896 
       ON MM_COURSE_ISONA_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'COURSE(is on a [0:m] ) MM_COURSE_ISONA_CONTACTLIST' 
CREATE INDEX MMCOURSEISONACONTACTLI92483898 
       ON MM_COURSE_ISONA_CONTACTLIST ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMDONORISONCONTACTLIS92483900 
       ON MM_DONOR_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_DONOR_ISON_CONTACTLIST' 
CREATE INDEX MMDONORISONCONTACTLIST92483900 
       ON MM_DONOR_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'DONOR(is on [0:m] ) MM_DONOR_ISON_CONTACTLIST' 
CREATE INDEX MMDONORISONCONTACTLIST92483902 
       ON MM_DONOR_ISON_CONTACTLIST ( 
           FK_ID_DONOR ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSEISPREREQUISTF92483909 
       ON MM_COURSE_ISPREREQUISTFR_COURS ( 
           FK_ID_COURSE, 
           FK_ID_COURSE02 ) ;
 
 
-- Index for Relationship - 'COURSE(has prerequisite [0:m] ) MM_COURSE_ISPREREQUISTFR_COURS' 
CREATE INDEX MMCOURSEISPREREQUISTFR92483909 
       ON MM_COURSE_ISPREREQUISTFR_COURS ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COURSE(is prerequisite for [0:m] ) MM_COURSE_ISPREREQUISTFR_COURS' 
CREATE INDEX MMCOURSEISPREREQUIST0292483911 
       ON MM_COURSE_ISPREREQUISTFR_COURS ( 
           FK_ID_COURSE02 ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSEISCOREQUISITF92483913 
       ON MM_COURSE_ISCOREQUISITFR_COURS ( 
           FK_ID_COURSE, 
           FK_ID_COURSE02 ) ;
 
 
-- Index for Relationship - 'COURSE(has corequisite [0:m] ) MM_COURSE_ISCOREQUISITFR_COURS' 
CREATE INDEX MMCOURSEISCOREQUISITFR92483913 
       ON MM_COURSE_ISCOREQUISITFR_COURS ( 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COURSE(is corequisite for [0:m] ) MM_COURSE_ISCOREQUISITFR_COURS' 
CREATE INDEX MMCOURSEISCOREQUISIT0292483915 
       ON MM_COURSE_ISCOREQUISITFR_COURS ( 
           FK_ID_COURSE02 ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSESPRTFPRQSTGRP92483919 
       ON MMCOURSESPRTFPRQSTGRPCOURSEPRE ( 
           FKIDCOURSEPREREQUI, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'COURSEPREREQUISITEGROUP(has prerequisite group [0:m] ) MMCOURSESPRTFPRQSTGRPCOURSEPRE' 
CREATE INDEX MMCOURSESPRTFPRQSTGRPC92483919 
       ON MMCOURSESPRTFPRQSTGRPCOURSEPRE ( 
           FKIDCOURSEPREREQUI ) ;
 
 
-- Index for Relationship - 'COURSE(is part of prerequisite group [0:m] ) MMCOURSESPRTFPRQSTGRPCOURSEPRE' 
CREATE INDEX MMCOURSESPRTFPRQSTGRPC92483921 
       ON MMCOURSESPRTFPRQSTGRPCOURSEPRE ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMMAILINGFORMAILINGGR92483925 
       ON MM_MAILING_FOR_MAILINGGROUP ( 
           FK_ID_MAILINGGROUP, 
           FK_ID_MAILING ) ;
 
 
-- Index for Relationship - 'MAILINGGROUP(has [0:m] ) MM_MAILING_FOR_MAILINGGROUP' 
CREATE INDEX MMMAILINGFORMAILINGGRO92483925 
       ON MM_MAILING_FOR_MAILINGGROUP ( 
           FK_ID_MAILINGGROUP ) ;
 
 
-- Index for Relationship - 'MAILING(for [0:m] ) MM_MAILING_FOR_MAILINGGROUP' 
CREATE INDEX MMMAILINGFORMAILINGGRO92483927 
       ON MM_MAILING_FOR_MAILINGGROUP ( 
           FK_ID_MAILING ) ;
 
 
CREATE UNIQUE INDEX UMMCLASSFORCLASSTEMPLA92483933 
       ON MM_CLASS_FOR_CLASSTEMPLATE ( 
           FK_ID_CLASSTEMPLAT, 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'CLASSTEMPLATE(has [0:m] ) MM_CLASS_FOR_CLASSTEMPLATE' 
CREATE INDEX MMCLASSFORCLASSTEMPLAT92483933 
       ON MM_CLASS_FOR_CLASSTEMPLATE ( 
           FK_ID_CLASSTEMPLAT ) ;
 
 
-- Index for Relationship - 'CLASS(for [0:m] ) MM_CLASS_FOR_CLASSTEMPLATE' 
CREATE INDEX MMCLASSFORCLASSTEMPLAT92483935 
       ON MM_CLASS_FOR_CLASSTEMPLATE ( 
           FK_ID_CLASS ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSEFORCLASSTEMPL92483938 
       ON MM_COURSE_FOR_CLASSTEMPLATE ( 
           FK_ID_CLASSTEMPLAT, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'CLASSTEMPLATE(has [0:m] ) MM_COURSE_FOR_CLASSTEMPLATE' 
CREATE INDEX MMCOURSEFORCLASSTEMPLA92483938 
       ON MM_COURSE_FOR_CLASSTEMPLATE ( 
           FK_ID_CLASSTEMPLAT ) ;
 
 
-- Index for Relationship - 'COURSE(for [0:m] ) MM_COURSE_FOR_CLASSTEMPLATE' 
CREATE INDEX MMCOURSEFORCLASSTEMPLA92483940 
       ON MM_COURSE_FOR_CLASSTEMPLATE ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMCATEGORYCANHAVESCHO92483942 
       ON MM_CATEGORY_CANHAVE_SCHOLARSHI ( 
           FK_ID_SCHOLARSHIP, 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'SCHOLARSHIP(can be of [0:m] ) MM_CATEGORY_CANHAVE_SCHOLARSHI' 
CREATE INDEX MMCATEGORYCANHAVESCHOL92483942 
       ON MM_CATEGORY_CANHAVE_SCHOLARSHI ( 
           FK_ID_SCHOLARSHIP ) ;
 
 
-- Index for Relationship - 'CATEGORY(can have [0:m] ) MM_CATEGORY_CANHAVE_SCHOLARSHI' 
CREATE INDEX MMCATEGORYCANHAVESCHOL92483944 
       ON MM_CATEGORY_CANHAVE_SCHOLARSHI ( 
           FK_ID_CATEGORY ) ;
 
 
CREATE UNIQUE INDEX UMMREPORTFORREPORTGROU92483953 
       ON MM_REPORT_FOR_REPORTGROUP ( 
           FK_ID_REPORTGROUP, 
           FK_ID_REPORT ) ;
 
 
-- Index for Relationship - 'REPORTGROUP(has [0:m] ) MM_REPORT_FOR_REPORTGROUP' 
CREATE INDEX MMREPORTFORREPORTGROUP92483953 
       ON MM_REPORT_FOR_REPORTGROUP ( 
           FK_ID_REPORTGROUP ) ;
 
 
-- Index for Relationship - 'REPORT(for [0:m] ) MM_REPORT_FOR_REPORTGROUP' 
CREATE INDEX MMREPORTFORREPORTGROUP92483955 
       ON MM_REPORT_FOR_REPORTGROUP ( 
           FK_ID_REPORT ) ;
 
 
CREATE UNIQUE INDEX UMMMAILINGCANGENERATED92483960 
       ON MM_MAILING_CANGENERATE_DOCUMEN ( 
           FK_ID_DOCUMENT, 
           FK_ID_MAILING ) ;
 
 
-- Index for Relationship - 'DOCUMENT(can be generated by [0:m] ) MM_MAILING_CANGENERATE_DOCUMEN' 
CREATE INDEX MMMAILINGCANGENERATEDO92483960 
       ON MM_MAILING_CANGENERATE_DOCUMEN ( 
           FK_ID_DOCUMENT ) ;
 
 
-- Index for Relationship - 'MAILING(can generate [0:m] ) MM_MAILING_CANGENERATE_DOCUMEN' 
CREATE INDEX MMMAILINGCANGENERATEDO92483962 
       ON MM_MAILING_CANGENERATE_DOCUMEN ( 
           FK_ID_MAILING ) ;
 
 
CREATE UNIQUE INDEX UMMPERSONFSCNDRYDPLCTF92483980 
       ON MMPERSONFSCNDRYDPLCTFRBATCHITE ( 
           FK_ID_BATCHITEM, 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'BATCHITEM(has secondary duplicate [0:m] ) MMPERSONFSCNDRYDPLCTFRBATCHITE' 
CREATE INDEX MMPERSONFSCNDRYDPLCTFR92483980 
       ON MMPERSONFSCNDRYDPLCTFRBATCHITE ( 
           FK_ID_BATCHITEM ) ;
 
 
-- Index for Relationship - 'PERSON(if secondary duplicate for [0:m] ) MMPERSONFSCNDRYDPLCTFRBATCHITE' 
CREATE INDEX MMPERSONFSCNDRYDPLCTFR92483982 
       ON MMPERSONFSCNDRYDPLCTFRBATCHITE ( 
           FK_ID_PERSON ) ;
 
 
CREATE UNIQUE INDEX UMMCONTACTLISTCONTAINS92484000 
       ON MM_CONTACTLIST_CONTAINS_COHORT ( 
           FK_ID_COHORT, 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'COHORT(is on [0:m] ) MM_CONTACTLIST_CONTAINS_COHORT' 
CREATE INDEX MMCONTACTLISTCONTAINSC92484000 
       ON MM_CONTACTLIST_CONTAINS_COHORT ( 
           FK_ID_COHORT ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_CONTACTLIST_CONTAINS_COHORT' 
CREATE INDEX MMCONTACTLISTCONTAINSC92484002 
       ON MM_CONTACTLIST_CONTAINS_COHORT ( 
           FK_ID_CONTACTLIST ) ;
 
 
CREATE UNIQUE INDEX UMMADMINISTRATIVEDIVIS92484006 
       ON MMADMINISTRATIVEDIVISIONSCSBLF ( 
           FK_ID_USERGROUP, 
           FKIDADMINISTRATIVE ) ;
 
 
-- Index for Relationship - 'USERGROUP(has access to [0:m] ) MMADMINISTRATIVEDIVISIONSCSBLF' 
CREATE INDEX MMADMINISTRATIVEDIVISI92484006 
       ON MMADMINISTRATIVEDIVISIONSCSBLF ( 
           FK_ID_USERGROUP ) ;
 
 
-- Index for Relationship - 'ADMINISTRATIVEDIVISION(is accessible from [0:m] ) MMADMINISTRATIVEDIVISIONSCSBLF' 
CREATE INDEX MMADMINISTRATIVEDIVISI92484008 
       ON MMADMINISTRATIVEDIVISIONSCSBLF ( 
           FKIDADMINISTRATIVE ) ;
 
 
CREATE UNIQUE INDEX UMMREMOTEPERSONFRREMOT92484012 
       ON MMREMOTEPERSONFRREMOTEMAJORINT ( 
           FKIDREMOTEMAJORINT, 
           FK_ID_REMOTEPERSON ) ;
 
 
-- Index for Relationship - 'REMOTEMAJORINTEREST(has [0:m] ) MMREMOTEPERSONFRREMOTEMAJORINT' 
CREATE INDEX MMREMOTEPERSONFRREMOTE92484012 
       ON MMREMOTEPERSONFRREMOTEMAJORINT ( 
           FKIDREMOTEMAJORINT ) ;
 
 
-- Index for Relationship - 'REMOTEPERSON(for [0:m] ) MMREMOTEPERSONFRREMOTEMAJORINT' 
CREATE INDEX MMREMOTEPERSONFRREMOTE92484014 
       ON MMREMOTEPERSONFRREMOTEMAJORINT ( 
           FK_ID_REMOTEPERSON ) ;
 
 
CREATE UNIQUE INDEX UMMREMOTEPERSONFRREMOT92484019 
       ON MMREMOTEPERSONFRREMOTEEXINTERE ( 
           FKIDREMOTEEXINTERE, 
           FK_ID_REMOTEPERSON ) ;
 
 
-- Index for Relationship - 'REMOTEEXINTEREST(has [0:m] ) MMREMOTEPERSONFRREMOTEEXINTERE' 
CREATE INDEX MMREMOTEPERSONFRREMOTE92484019 
       ON MMREMOTEPERSONFRREMOTEEXINTERE ( 
           FKIDREMOTEEXINTERE ) ;
 
 
-- Index for Relationship - 'REMOTEPERSON(for [0:m] ) MMREMOTEPERSONFRREMOTEEXINTERE' 
CREATE INDEX MMREMOTEPERSONFRREMOTE92484021 
       ON MMREMOTEPERSONFRREMOTEEXINTERE ( 
           FK_ID_REMOTEPERSON ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSESNCLDDNDLTDEP92484028 
       ON MM_COURSE_SNCLDDNDLT_DEPARTMEN ( 
           FK_ID_DEPARTMENT, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(has (delete) [0:m] ) MM_COURSE_SNCLDDNDLT_DEPARTMEN' 
CREATE INDEX MMCOURSESNCLDDNDLTDEPA92484028 
       ON MM_COURSE_SNCLDDNDLT_DEPARTMEN ( 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'COURSE(is included in (delete) [0:m] ) MM_COURSE_SNCLDDNDLT_DEPARTMEN' 
CREATE INDEX MMCOURSESNCLDDNDLTDEPA92484030 
       ON MM_COURSE_SNCLDDNDLT_DEPARTMEN ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTATTNDDCHAPEL92484041 
       ON MM_STUDENT_ATTNDD_CHAPELSESSIO ( 
           FK_ID_CHAPELSESSIO, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CHAPELSESSION(was attended by [0:m] ) MM_STUDENT_ATTNDD_CHAPELSESSIO' 
CREATE INDEX MMSTUDENTATTNDDCHAPELS92484041 
       ON MM_STUDENT_ATTNDD_CHAPELSESSIO ( 
           FK_ID_CHAPELSESSIO ) ;
 
 
-- Index for Relationship - 'STUDENT(attended [0:m] ) MM_STUDENT_ATTNDD_CHAPELSESSIO' 
CREATE INDEX MMSTUDENTATTNDDCHAPELS92484043 
       ON MM_STUDENT_ATTNDD_CHAPELSESSIO ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTWSNGLRDNGCHA92484045 
       ON MMSTUDENTWSNGLRDNGCHAPELSESSIO ( 
           FK_ID_CHAPELSESSIO, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CHAPELSESSION(had single reading [0:m] ) MMSTUDENTWSNGLRDNGCHAPELSESSIO' 
CREATE INDEX MMSTUDENTWSNGLRDNGCHAP92484045 
       ON MMSTUDENTWSNGLRDNGCHAPELSESSIO ( 
           FK_ID_CHAPELSESSIO ) ;
 
 
-- Index for Relationship - 'STUDENT(was single reading [0:m] ) MMSTUDENTWSNGLRDNGCHAPELSESSIO' 
CREATE INDEX MMSTUDENTWSNGLRDNGCHAP92484047 
       ON MMSTUDENTWSNGLRDNGCHAPELSESSIO ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMDEPARTMENTINCLUDESF92484058 
       ON MM_DEPARTMENT_INCLUDES_FACULTY ( 
           FK_ID_FACULTY, 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'FACULTY(is part of [0:m] ) MM_DEPARTMENT_INCLUDES_FACULTY' 
CREATE INDEX MMDEPARTMENTINCLUDESFA92484058 
       ON MM_DEPARTMENT_INCLUDES_FACULTY ( 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(includes [0:m] ) MM_DEPARTMENT_INCLUDES_FACULTY' 
CREATE INDEX MMDEPARTMENTINCLUDESFA92484060 
       ON MM_DEPARTMENT_INCLUDES_FACULTY ( 
           FK_ID_DEPARTMENT ) ;
 
 
CREATE UNIQUE INDEX UMMSCHOOLSCRSSPLCTNFRP92484064 
       ON MM_SCHOOL_SCRSSPLCTNFR_PROSPEC ( 
           FK_ID_PROSPECT, 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'PROSPECT(has cross applied to [0:m] ) MM_SCHOOL_SCRSSPLCTNFR_PROSPEC' 
CREATE INDEX MMSCHOOLSCRSSPLCTNFRPR92484064 
       ON MM_SCHOOL_SCRSSPLCTNFR_PROSPEC ( 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'SCHOOL(is cross application for [0:m] ) MM_SCHOOL_SCRSSPLCTNFR_PROSPEC' 
CREATE INDEX MMSCHOOLSCRSSPLCTNFRPR92484066 
       ON MM_SCHOOL_SCRSSPLCTNFR_PROSPEC ( 
           FK_ID_SCHOOL ) ;
 
 
CREATE UNIQUE INDEX UMMSATRANSACTIONCODEST92484086 
       ON MMSATRANSACTIONCODESTHCHRGFRRO ( 
           FK_ID_ROOM, 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'ROOM(has a charge of [0:m] ) MMSATRANSACTIONCODESTHCHRGFRRO' 
CREATE INDEX MMSATRANSACTIONCODESTH92484086 
       ON MMSATRANSACTIONCODESTHCHRGFRRO ( 
           FK_ID_ROOM ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(is the charge for [0:m] ) MMSATRANSACTIONCODESTHCHRGFRRO' 
CREATE INDEX MMSATRANSACTIONCODESTH92484088 
       ON MMSATRANSACTIONCODESTHCHRGFRRO ( 
           FKIDSATRANSACTIONC ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSEISREQRDBYDEGR92484091 
       ON MM_COURSE_ISREQRDBY_DEGREETRAC ( 
           FK_ID_DEGREETRACK, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'DEGREETRACK(has required [0:m] ) MM_COURSE_ISREQRDBY_DEGREETRAC' 
CREATE INDEX MMCOURSEISREQRDBYDEGRE92484091 
       ON MM_COURSE_ISREQRDBY_DEGREETRAC ( 
           FK_ID_DEGREETRACK ) ;
 
 
-- Index for Relationship - 'COURSE(is required by [0:m] ) MM_COURSE_ISREQRDBY_DEGREETRAC' 
CREATE INDEX MMCOURSEISREQRDBYDEGRE92484093 
       ON MM_COURSE_ISREQRDBY_DEGREETRAC ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMCONTACTLISTCONTAINS92484097 
       ON MM_CONTACTLIST_CONTAINS_ALUMNI ( 
           FK_ID_ALUMNI, 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'ALUMNI(is on a [0:m] ) MM_CONTACTLIST_CONTAINS_ALUMNI' 
CREATE INDEX MMCONTACTLISTCONTAINSA92484097 
       ON MM_CONTACTLIST_CONTAINS_ALUMNI ( 
           FK_ID_ALUMNI ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_CONTACTLIST_CONTAINS_ALUMNI' 
CREATE INDEX MMCONTACTLISTCONTAINSA92484099 
       ON MM_CONTACTLIST_CONTAINS_ALUMNI ( 
           FK_ID_CONTACTLIST ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTISONCONTACTL92484101 
       ON MM_STUDENT_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_STUDENT_ISON_CONTACTLIST' 
CREATE INDEX MMSTUDENTISONCONTACTLI92484101 
       ON MM_STUDENT_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'STUDENT(is on [0:m] ) MM_STUDENT_ISON_CONTACTLIST' 
CREATE INDEX MMSTUDENTISONCONTACTLI92484103 
       ON MM_STUDENT_ISON_CONTACTLIST ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMCATEGORYCANBETIEDTO92484106 
       ON MM_CATEGORY_CANBETIEDTO_ALUMNI ( 
           FK_ID_ALUMNI, 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'ALUMNI(can be tied back to [0:m] ) MM_CATEGORY_CANBETIEDTO_ALUMNI' 
CREATE INDEX MMCATEGORYCANBETIEDTOA92484106 
       ON MM_CATEGORY_CANBETIEDTO_ALUMNI ( 
           FK_ID_ALUMNI ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_CATEGORY_CANBETIEDTO_ALUMNI' 
CREATE INDEX MMCATEGORYCANBETIEDTOA92484108 
       ON MM_CATEGORY_CANBETIEDTO_ALUMNI ( 
           FK_ID_CATEGORY ) ;
 
 
CREATE UNIQUE INDEX UMMPERSONFORCONTACTLIS92484113 
       ON MM_PERSON_FOR_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_PERSON_FOR_CONTACTLIST' 
CREATE INDEX MMPERSONFORCONTACTLIST92484113 
       ON MM_PERSON_FOR_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'PERSON(for [0:m] ) MM_PERSON_FOR_CONTACTLIST' 
CREATE INDEX MMPERSONFORCONTACTLIST92484115 
       ON MM_PERSON_FOR_CONTACTLIST ( 
           FK_ID_PERSON ) ;
 
 
CREATE UNIQUE INDEX UMMDONATIONISONCONTACT92484117 
       ON MM_DONATION_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_DONATION ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_DONATION_ISON_CONTACTLIST' 
CREATE INDEX MMDONATIONISONCONTACTL92484117 
       ON MM_DONATION_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'DONATION(is on [0:m] ) MM_DONATION_ISON_CONTACTLIST' 
CREATE INDEX MMDONATIONISONCONTACTL92484119 
       ON MM_DONATION_ISON_CONTACTLIST ( 
           FK_ID_DONATION ) ;
 
 
CREATE UNIQUE INDEX UMMORGANIZATIONHSGNFCN92484123 
       ON MMORGANIZATIONHSGNFCNTLNKTDONO ( 
           SOFTROLEID_DONOR, 
           SOFTROLEIDORGANIZA ) ;
 
 
-- Index for Relationship - 'DONOR(is significant for [0:m] ) MMORGANIZATIONHSGNFCNTLNKTDONO' 
CREATE INDEX MMORGANIZATIONHSGNFCNT92484123 
       ON MMORGANIZATIONHSGNFCNTLNKTDONO ( 
           SOFTROLEID_DONOR ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(has a significant link to [0:m] ) MMORGANIZATIONHSGNFCNTLNKTDONO' 
CREATE INDEX MMORGANIZATIONHSGNFCNT92484125 
       ON MMORGANIZATIONHSGNFCNTLNKTDONO ( 
           SOFTROLEIDORGANIZA ) ;
 
 
CREATE UNIQUE INDEX UMMFUNDISCOMMONLYGIVNF92484127 
       ON MM_FUND_ISCOMMONLYGIVNFRM_DONO ( 
           FK_ID_DONOR, 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'DONOR(commonly give to [0:m] ) MM_FUND_ISCOMMONLYGIVNFRM_DONO' 
CREATE INDEX MMFUNDISCOMMONLYGIVNFR92484127 
       ON MM_FUND_ISCOMMONLYGIVNFRM_DONO ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'FUND(is commonly given from [0:m] ) MM_FUND_ISCOMMONLYGIVNFRM_DONO' 
CREATE INDEX MMFUNDISCOMMONLYGIVNFR92484129 
       ON MM_FUND_ISCOMMONLYGIVNFRM_DONO ( 
           FK_ID_FUND ) ;
 
 
CREATE UNIQUE INDEX UMMFUNDISTIEDTOCONTACT92484140 
       ON MM_FUND_ISTIEDTO_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_FUND_ISTIEDTO_CONTACTLIST' 
CREATE INDEX MMFUNDISTIEDTOCONTACTL92484140 
       ON MM_FUND_ISTIEDTO_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'FUND(is tied to [0:m] ) MM_FUND_ISTIEDTO_CONTACTLIST' 
CREATE INDEX MMFUNDISTIEDTOCONTACTL92484142 
       ON MM_FUND_ISTIEDTO_CONTACTLIST ( 
           FK_ID_FUND ) ;
 
 
CREATE UNIQUE INDEX UMMCATEGORYISFORFUNDID92484144 
       ON MM_CATEGORY_ISFOR_FUND ( 
           FK_ID_FUND, 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'FUND(is a member of [0:m] ) MM_CATEGORY_ISFOR_FUND' 
CREATE INDEX MMCATEGORYISFORFUNDFKI92484144 
       ON MM_CATEGORY_ISFOR_FUND ( 
           FK_ID_FUND ) ;
 
 
-- Index for Relationship - 'CATEGORY(is for [0:m] ) MM_CATEGORY_ISFOR_FUND' 
CREATE INDEX MMCATEGORYISFORFUNDFKI92484146 
       ON MM_CATEGORY_ISFOR_FUND ( 
           FK_ID_CATEGORY ) ;
 
 
CREATE UNIQUE INDEX UMMCONTACTLISTCONTAINS92484148 
       ON MM_CONTACTLIST_CONTAINS_CHURCH ( 
           FK_ID_CHURCH, 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'CHURCH(is on [0:m] ) MM_CONTACTLIST_CONTAINS_CHURCH' 
CREATE INDEX MMCONTACTLISTCONTAINSC92484148 
       ON MM_CONTACTLIST_CONTAINS_CHURCH ( 
           FK_ID_CHURCH ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_CONTACTLIST_CONTAINS_CHURCH' 
CREATE INDEX MMCONTACTLISTCONTAINSC92484150 
       ON MM_CONTACTLIST_CONTAINS_CHURCH ( 
           FK_ID_CONTACTLIST ) ;
 
 
CREATE UNIQUE INDEX UMMCONTACTLISTCONTAINS92484152 
       ON MM_CONTACTLIST_CONTAINS_SCHOOL ( 
           FK_ID_SCHOOL, 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'SCHOOL(is on [0:m] ) MM_CONTACTLIST_CONTAINS_SCHOOL' 
CREATE INDEX MMCONTACTLISTCONTAINSS92484152 
       ON MM_CONTACTLIST_CONTAINS_SCHOOL ( 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_CONTACTLIST_CONTAINS_SCHOOL' 
CREATE INDEX MMCONTACTLISTCONTAINSS92484154 
       ON MM_CONTACTLIST_CONTAINS_SCHOOL ( 
           FK_ID_CONTACTLIST ) ;
 
 
CREATE UNIQUE INDEX UMMPERSONISEMPLYFRCONT92484156 
       ON MM_PERSON_ISEMPLYFR_CONTACTLIS ( 
           FK_ID_CONTACTLIST, 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains employee [0:m] ) MM_PERSON_ISEMPLYFR_CONTACTLIS' 
CREATE INDEX MMPERSONISEMPLYFRCONTA92484156 
       ON MM_PERSON_ISEMPLYFR_CONTACTLIS ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'PERSON(is employee for [0:m] ) MM_PERSON_ISEMPLYFR_CONTACTLIS' 
CREATE INDEX MMPERSONISEMPLYFRCONTA92484158 
       ON MM_PERSON_ISEMPLYFR_CONTACTLIS ( 
           FK_ID_PERSON ) ;
 
 
CREATE UNIQUE INDEX UMMCONTACTLISTCNTNSORG92484160 
       ON MM_CONTACTLISTCNTNSORGANIZATIO ( 
           FK_ID_ORGANIZATION, 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(is on [0:m] ) MM_CONTACTLISTCNTNSORGANIZATIO' 
CREATE INDEX MMCONTACTLISTCNTNSORGA92484160 
       ON MM_CONTACTLISTCNTNSORGANIZATIO ( 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_CONTACTLISTCNTNSORGANIZATIO' 
CREATE INDEX MMCONTACTLISTCNTNSORGA92484162 
       ON MM_CONTACTLISTCNTNSORGANIZATIO ( 
           FK_ID_CONTACTLIST ) ;
 
 
CREATE UNIQUE INDEX UMMCAMPUSLOCATIONSPTNT92484172 
       ON MMCAMPUSLOCATIONSPTNTLCRSLCTNF ( 
           FK_ID_PROSPECT, 
           FK_IDCAMPUSLOCATIO ) ;
 
 
-- Index for Relationship - 'PROSPECT(is willing to take courses at [0:m] ) MMCAMPUSLOCATIONSPTNTLCRSLCTNF' 
CREATE INDEX MMCAMPUSLOCATIONSPTNTL92484172 
       ON MMCAMPUSLOCATIONSPTNTLCRSLCTNF ( 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'CAMPUSLOCATION(is potential course location for [0:m] ) MMCAMPUSLOCATIONSPTNTLCRSLCTNF' 
CREATE INDEX MMCAMPUSLOCATIONSPTNTL92484174 
       ON MMCAMPUSLOCATIONSPTNTLCRSLCTNF ( 
           FK_IDCAMPUSLOCATIO ) ;
 
 
CREATE UNIQUE INDEX UMMPROGRAMFORPROSPECTI92484176 
       ON MM_PROGRAM_FOR_PROSPECT ( 
           FK_ID_PROSPECT, 
           ISFNTRSTTID_PROGRA ) ;
 
 
-- Index for Relationship - 'PROSPECT(is potentially interested in [0:m] ) MM_PROGRAM_FOR_PROSPECT' 
CREATE INDEX MMPROGRAMFORPROSPECTFK92484176 
       ON MM_PROGRAM_FOR_PROSPECT ( 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'PROGRAM(for [0:m] ) MM_PROGRAM_FOR_PROSPECT' 
CREATE INDEX MMPROGRAMFORPROSPECTIS92484178 
       ON MM_PROGRAM_FOR_PROSPECT ( 
           ISFNTRSTTID_PROGRA ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSECNHVFSSATRANS92484189 
       ON MMCOURSECNHVFSSATRANSACTIONCOD ( 
           FKIDSATRANSACTIONC, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(are the fees for [0:m] ) MMCOURSECNHVFSSATRANSACTIONCOD' 
CREATE INDEX MMCOURSECNHVFSSATRANSA92484189 
       ON MMCOURSECNHVFSSATRANSACTIONCOD ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'COURSE(can have fees [0:m] ) MMCOURSECNHVFSSATRANSACTIONCOD' 
CREATE INDEX MMCOURSECNHVFSSATRANSA92484191 
       ON MMCOURSECNHVFSSATRANSACTIONCOD ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMCOURSETTNBCHRGDBYSA92484193 
       ON MMCOURSETTNBCHRGDBYSATRANSACTI ( 
           FKIDSATRANSACTIONC, 
           FK_ID_COURSE ) ;
 
 
-- Index for Relationship - 'SATRANSACTIONCODE(Tuition Code for [0:m] ) MMCOURSETTNBCHRGDBYSATRANSACTI' 
CREATE INDEX MMCOURSETTNBCHRGDBYSAT92484193 
       ON MMCOURSETTNBCHRGDBYSATRANSACTI ( 
           FKIDSATRANSACTIONC ) ;
 
 
-- Index for Relationship - 'COURSE(Tuition be charged by [0:m] ) MMCOURSETTNBCHRGDBYSATRANSACTI' 
CREATE INDEX MMCOURSETTNBCHRGDBYSAT92484195 
       ON MMCOURSETTNBCHRGDBYSATRANSACTI ( 
           FK_ID_COURSE ) ;
 
 
CREATE UNIQUE INDEX UMMCHURCHCANBETIDBCKTC92484212 
       ON MM_CHURCH_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_CHURCH ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_CHURCH_CANBETIDBCKT_CATEGOR' 
CREATE INDEX MMCHURCHCANBETIDBCKTCA92484212 
       ON MM_CHURCH_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'CHURCH(can be tied back to [0:m] ) MM_CHURCH_CANBETIDBCKT_CATEGOR' 
CREATE INDEX MMCHURCHCANBETIDBCKTCA92484214 
       ON MM_CHURCH_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CHURCH ) ;
 
 
CREATE UNIQUE INDEX UMMDONORCANBETIEDBCKTC92484216 
       ON MM_DONOR_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_DONOR_CANBETIEDBCKT_CATEGOR' 
CREATE INDEX MMDONORCANBETIEDBCKTCA92484216 
       ON MM_DONOR_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'DONOR(can be tied back to [0:m] ) MM_DONOR_CANBETIEDBCKT_CATEGOR' 
CREATE INDEX MMDONORCANBETIEDBCKTCA92484218 
       ON MM_DONOR_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_DONOR ) ;
 
 
CREATE UNIQUE INDEX UMMFACULTYCANBETDBCKTC92484220 
       ON MM_FACULTY_CANBETDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_FACULTY_CANBETDBCKT_CATEGOR' 
CREATE INDEX MMFACULTYCANBETDBCKTCA92484220 
       ON MM_FACULTY_CANBETDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'FACULTY(can be tied back to [0:m] ) MM_FACULTY_CANBETDBCKT_CATEGOR' 
CREATE INDEX MMFACULTYCANBETDBCKTCA92484222 
       ON MM_FACULTY_CANBETDBCKT_CATEGOR ( 
           FK_ID_FACULTY ) ;
 
 
CREATE UNIQUE INDEX UMMORGANIZATIONCNBTDBC92484227 
       ON MMORGANIZATIONCNBTDBCKTCATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_ORGANIZATION ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MMORGANIZATIONCNBTDBCKTCATEGOR' 
CREATE INDEX MMORGANIZATIONCNBTDBCK92484227 
       ON MMORGANIZATIONCNBTDBCKTCATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'ORGANIZATION(can be tied back to [0:m] ) MMORGANIZATIONCNBTDBCKTCATEGOR' 
CREATE INDEX MMORGANIZATIONCNBTDBCK92484229 
       ON MMORGANIZATIONCNBTDBCKTCATEGOR ( 
           FK_ID_ORGANIZATION ) ;
 
 
CREATE UNIQUE INDEX UMMPERSONCANBETIDBCKTC92484231 
       ON MM_PERSON_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_PERSON_CANBETIDBCKT_CATEGOR' 
CREATE INDEX MMPERSONCANBETIDBCKTCA92484231 
       ON MM_PERSON_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'PERSON(can be tied back to [0:m] ) MM_PERSON_CANBETIDBCKT_CATEGOR' 
CREATE INDEX MMPERSONCANBETIDBCKTCA92484233 
       ON MM_PERSON_CANBETIDBCKT_CATEGOR ( 
           FK_ID_PERSON ) ;
 
 
CREATE UNIQUE INDEX UMMPROSPECTCANBTDBCKTC92484235 
       ON MM_PROSPECT_CANBTDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_PROSPECT_CANBTDBCKT_CATEGOR' 
CREATE INDEX MMPROSPECTCANBTDBCKTCA92484235 
       ON MM_PROSPECT_CANBTDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'PROSPECT(can be tied back to [0:m] ) MM_PROSPECT_CANBTDBCKT_CATEGOR' 
CREATE INDEX MMPROSPECTCANBTDBCKTCA92484237 
       ON MM_PROSPECT_CANBTDBCKT_CATEGOR ( 
           FK_ID_PROSPECT ) ;
 
 
CREATE UNIQUE INDEX UMMSCHOOLCANBETIDBCKTC92484240 
       ON MM_SCHOOL_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_SCHOOL ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_SCHOOL_CANBETIDBCKT_CATEGOR' 
CREATE INDEX MMSCHOOLCANBETIDBCKTCA92484240 
       ON MM_SCHOOL_CANBETIDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'SCHOOL(can be tied back to [0:m] ) MM_SCHOOL_CANBETIDBCKT_CATEGOR' 
CREATE INDEX MMSCHOOLCANBETIDBCKTCA92484242 
       ON MM_SCHOOL_CANBETIDBCKT_CATEGOR ( 
           FK_ID_SCHOOL ) ;
 
 
CREATE UNIQUE INDEX UMMSTAFFCANBETIEDBCKTC92484244 
       ON MM_STAFF_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_STAFF ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_STAFF_CANBETIEDBCKT_CATEGOR' 
CREATE INDEX MMSTAFFCANBETIEDBCKTCA92484244 
       ON MM_STAFF_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'STAFF(can be tied back to [0:m] ) MM_STAFF_CANBETIEDBCKT_CATEGOR' 
CREATE INDEX MMSTAFFCANBETIEDBCKTCA92484246 
       ON MM_STAFF_CANBETIEDBCKT_CATEGOR ( 
           FK_ID_STAFF ) ;
 
 
CREATE UNIQUE INDEX UMMSTUDENTCANBETDBCKTC92484248 
       ON MM_STUDENT_CANBETDBCKT_CATEGOR ( 
           FK_ID_CATEGORY, 
           FK_ID_STUDENT ) ;
 
 
-- Index for Relationship - 'CATEGORY(can be tied to [0:m] ) MM_STUDENT_CANBETDBCKT_CATEGOR' 
CREATE INDEX MMSTUDENTCANBETDBCKTCA92484248 
       ON MM_STUDENT_CANBETDBCKT_CATEGOR ( 
           FK_ID_CATEGORY ) ;
 
 
-- Index for Relationship - 'STUDENT(can be tied back to [0:m] ) MM_STUDENT_CANBETDBCKT_CATEGOR' 
CREATE INDEX MMSTUDENTCANBETDBCKTCA92484250 
       ON MM_STUDENT_CANBETDBCKT_CATEGOR ( 
           FK_ID_STUDENT ) ;
 
 
CREATE UNIQUE INDEX UMMEVENTFORSTOREDQUERY92484260 
       ON MM_EVENT_FOR_STOREDQUERY ( 
           FK_ID_STOREDQUERY, 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'STOREDQUERY(has [0:m] ) MM_EVENT_FOR_STOREDQUERY' 
CREATE INDEX MMEVENTFORSTOREDQUERYF92484260 
       ON MM_EVENT_FOR_STOREDQUERY ( 
           FK_ID_STOREDQUERY ) ;
 
 
-- Index for Relationship - 'EVENT(for [0:m] ) MM_EVENT_FOR_STOREDQUERY' 
CREATE INDEX MMEVENTFORSTOREDQUERYF92484262 
       ON MM_EVENT_FOR_STOREDQUERY ( 
           FK_ID_EVENT ) ;
 
 
CREATE UNIQUE INDEX UMMEVENTFORDOCUMENTIDM92484264 
       ON MM_EVENT_FOR_DOCUMENT ( 
           FK_ID_DOCUMENT, 
           FK_ID_EVENT ) ;
 
 
-- Index for Relationship - 'DOCUMENT(has [0:m] ) MM_EVENT_FOR_DOCUMENT' 
CREATE INDEX MMEVENTFORDOCUMENTFKID92484264 
       ON MM_EVENT_FOR_DOCUMENT ( 
           FK_ID_DOCUMENT ) ;
 
 
-- Index for Relationship - 'EVENT(for [0:m] ) MM_EVENT_FOR_DOCUMENT' 
CREATE INDEX MMEVENTFORDOCUMENTFKID92484266 
       ON MM_EVENT_FOR_DOCUMENT ( 
           FK_ID_EVENT ) ;
 
 
CREATE UNIQUE INDEX UMMFACULTYISONACONTACT92484290 
       ON MM_FACULTY_ISONA_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_FACULTY_ISONA_CONTACTLIST' 
CREATE INDEX MMFACULTYISONACONTACTL92484290 
       ON MM_FACULTY_ISONA_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'FACULTY(is on a [0:m] ) MM_FACULTY_ISONA_CONTACTLIST' 
CREATE INDEX MMFACULTYISONACONTACTL92484292 
       ON MM_FACULTY_ISONA_CONTACTLIST ( 
           FK_ID_FACULTY ) ;
 
 
CREATE UNIQUE INDEX UMMUSERGROUPCONTANSMMB92484301 
       ON MM_USERGROUP_CONTANSMMBR_Z_USE ( 
           FK_ID_Z_USER, 
           FK_ID_USERGROUP ) ;
 
 
-- Index for Relationship - 'z_USER(belongs to [0:m] ) MM_USERGROUP_CONTANSMMBR_Z_USE' 
CREATE INDEX MMUSERGROUPCONTANSMMBR92484301 
       ON MM_USERGROUP_CONTANSMMBR_Z_USE ( 
           FK_ID_Z_USER ) ;
 
 
-- Index for Relationship - 'USERGROUP(contains member [0:m] ) MM_USERGROUP_CONTANSMMBR_Z_USE' 
CREATE INDEX MMUSERGROUPCONTANSMMBR92484303 
       ON MM_USERGROUP_CONTANSMMBR_Z_USE ( 
           FK_ID_USERGROUP ) ;
 
 
CREATE UNIQUE INDEX UMMFACULTYISINSTRUCTOR92484315 
       ON MM_FACULTY_ISINSTRUCTORFR_CLAS ( 
           FK_ID_CLASS, 
           FK_ID_FACULTY ) ;
 
 
-- Index for Relationship - 'CLASS(has instructor [0:m] ) MM_FACULTY_ISINSTRUCTORFR_CLAS' 
CREATE INDEX MMFACULTYISINSTRUCTORF92484315 
       ON MM_FACULTY_ISINSTRUCTORFR_CLAS ( 
           FK_ID_CLASS ) ;
 
 
-- Index for Relationship - 'FACULTY(is instructor for [0:m] ) MM_FACULTY_ISINSTRUCTORFR_CLAS' 
CREATE INDEX MMFACULTYISINSTRUCTORF92484317 
       ON MM_FACULTY_ISINSTRUCTORFR_CLAS ( 
           FK_ID_FACULTY ) ;
 
 
CREATE UNIQUE INDEX UMMGIFTISSOFTCREDITFOR92484330 
       ON MM_GIFT_ISSOFTCREDITFOR_DONOR ( 
           FK_ID_DONOR, 
           FK_ID_GIFT ) ;
 
 
-- Index for Relationship - 'DONOR(get soft credit for [0:m] ) MM_GIFT_ISSOFTCREDITFOR_DONOR' 
CREATE INDEX MMGIFTISSOFTCREDITFORD92484330 
       ON MM_GIFT_ISSOFTCREDITFOR_DONOR ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'GIFT(is soft credit for [0:m] ) MM_GIFT_ISSOFTCREDITFOR_DONOR' 
CREATE INDEX MMGIFTISSOFTCREDITFORD92484332 
       ON MM_GIFT_ISSOFTCREDITFOR_DONOR ( 
           FK_ID_GIFT ) ;
 
 
CREATE UNIQUE INDEX UMMDONORGETSSOFTCREDTF92484344 
       ON MM_DONOR_GETSSOFTCREDTFRM_DONO ( 
           FK_ID_DONOR, 
           FK_ID_DONOR02 ) ;
 
 
-- Index for Relationship - 'DONOR(gives soft credit to [0:m] ) MM_DONOR_GETSSOFTCREDTFRM_DONO' 
CREATE INDEX MMDONORGETSSOFTCREDTFR92484344 
       ON MM_DONOR_GETSSOFTCREDTFRM_DONO ( 
           FK_ID_DONOR ) ;
 
 
-- Index for Relationship - 'DONOR(gets soft credit from [0:m] ) MM_DONOR_GETSSOFTCREDTFRM_DONO' 
CREATE INDEX MMDONORGETSSOFTCREDT0292484346 
       ON MM_DONOR_GETSSOFTCREDTFRM_DONO ( 
           FK_ID_DONOR02 ) ;
 
 
CREATE UNIQUE INDEX UMMPOTENTIALGIFTFULLFL92484355 
       ON MM_POTENTIALGIFT_FULLFLDBY_GIF ( 
           FK_ID_GIFT, 
           FK_ID_POTENTIALGIF ) ;
 
 
-- Index for Relationship - 'GIFT(can meet a pledge as [0:m] ) MM_POTENTIALGIFT_FULLFLDBY_GIF' 
CREATE INDEX MMPOTENTIALGIFTFULLFLD92484355 
       ON MM_POTENTIALGIFT_FULLFLDBY_GIF ( 
           FK_ID_GIFT ) ;
 
 
-- Index for Relationship - 'POTENTIALGIFT(fullfiled by [0:m] ) MM_POTENTIALGIFT_FULLFLDBY_GIF' 
CREATE INDEX MMPOTENTIALGIFTFULLFLD92484357 
       ON MM_POTENTIALGIFT_FULLFLDBY_GIF ( 
           FK_ID_POTENTIALGIF ) ;
 
 
CREATE UNIQUE INDEX UMMPROSPECTCNBNFLNCDBY92484378 
       ON MMPROSPECTCNBNFLNCDBYINFLUENCE ( 
           FK_ID_INFLUENCER, 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'INFLUENCER(influences [0:m] ) MMPROSPECTCNBNFLNCDBYINFLUENCE' 
CREATE INDEX MMPROSPECTCNBNFLNCDBYI92484378 
       ON MMPROSPECTCNBNFLNCDBYINFLUENCE ( 
           FK_ID_INFLUENCER ) ;
 
 
-- Index for Relationship - 'PROSPECT(can be influenced by [0:m] ) MMPROSPECTCNBNFLNCDBYINFLUENCE' 
CREATE INDEX MMPROSPECTCNBNFLNCDBYI92484380 
       ON MMPROSPECTCNBNFLNCDBYINFLUENCE ( 
           FK_ID_PROSPECT ) ;
 
 
CREATE UNIQUE INDEX UMMPROSPECTISONCONTACT92484385 
       ON MM_PROSPECT_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST, 
           FK_ID_PROSPECT ) ;
 
 
-- Index for Relationship - 'CONTACTLIST(contains [0:m] ) MM_PROSPECT_ISON_CONTACTLIST' 
CREATE INDEX MMPROSPECTISONCONTACTL92484385 
       ON MM_PROSPECT_ISON_CONTACTLIST ( 
           FK_ID_CONTACTLIST ) ;
 
 
-- Index for Relationship - 'PROSPECT(is on [0:m] ) MM_PROSPECT_ISON_CONTACTLIST' 
CREATE INDEX MMPROSPECTISONCONTACTL92484387 
       ON MM_PROSPECT_ISON_CONTACTLIST ( 
           FK_ID_PROSPECT ) ;
 
 
CREATE UNIQUE INDEX UMMROOMCANBESCHEDULEDB92484397 
       ON MM_ROOM_CANBESCHEDULEDBY_PERSO ( 
           FK_ID_PERSON, 
           FK_ID_ROOM ) ;
 
 
-- Index for Relationship - 'PERSON(can schedule [0:m] ) MM_ROOM_CANBESCHEDULEDBY_PERSO' 
CREATE INDEX MMROOMCANBESCHEDULEDBY92484397 
       ON MM_ROOM_CANBESCHEDULEDBY_PERSO ( 
           FK_ID_PERSON ) ;
 
 
-- Index for Relationship - 'ROOM(can be scheduled by [0:m] ) MM_ROOM_CANBESCHEDULEDBY_PERSO' 
CREATE INDEX MMROOMCANBESCHEDULEDBY92484399 
       ON MM_ROOM_CANBESCHEDULEDBY_PERSO ( 
           FK_ID_ROOM ) ;
 
 
CREATE UNIQUE INDEX UMMDEPARTMENTCNBNGLCOS92484407 
       ON MM_DEPARTMENT_CNBN_GLCOSTCENTE ( 
           FK_ID_GLCOSTCENTER, 
           FK_ID_DEPARTMENT ) ;
 
 
-- Index for Relationship - 'GLCOSTCENTER(can be [0:m] ) MM_DEPARTMENT_CNBN_GLCOSTCENTE' 
CREATE INDEX MMDEPARTMENTCNBNGLCOST92484407 
       ON MM_DEPARTMENT_CNBN_GLCOSTCENTE ( 
           FK_ID_GLCOSTCENTER ) ;
 
 
-- Index for Relationship - 'DEPARTMENT(can be in a [0:m] ) MM_DEPARTMENT_CNBN_GLCOSTCENTE' 
CREATE INDEX MMDEPARTMENTCNBNGLCOST92484409 
       ON MM_DEPARTMENT_CNBN_GLCOSTCENTE ( 
           FK_ID_DEPARTMENT ) ;
 
 
CREATE UNIQUE INDEX UMMGLCHARTENTRYSFRGLRE92484423 
       ON MMGLCHARTENTRYSFRGLREPORTSECTI ( 
           FKIDGLREPORTSECTIO, 
           FK_ID_GLCHARTENTRY ) ;
 
 
-- Index for Relationship - 'GLREPORTSECTION(has [0:m] ) MMGLCHARTENTRYSFRGLREPORTSECTI' 
CREATE INDEX MMGLCHARTENTRYSFRGLREP92484423 
       ON MMGLCHARTENTRYSFRGLREPORTSECTI ( 
           FKIDGLREPORTSECTIO ) ;
 
 
-- Index for Relationship - 'GLCHARTENTRY(is for [0:m] ) MMGLCHARTENTRYSFRGLREPORTSECTI' 
CREATE INDEX MMGLCHARTENTRYSFRGLREP92484425 
       ON MMGLCHARTENTRYSFRGLREPORTSECTI ( 
           FK_ID_GLCHARTENTRY ) ;
 
 
 
